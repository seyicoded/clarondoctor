{
    "sourceFile": "api.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1639063336790,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1639063499510,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n         options: {\n             'Content-Type': 'application/x-www-form-urlencoded'\n         }\n     })\n-\n+    console.log(response.data)\n     if(response.data.success){\n         await AsyncStorage.setItem('user', JSON.stringify(response.data.userDetails))\n         return response.data.userDetails\n     }\n"
                },
                {
                    "date": 1639063875454,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n         options: {\n             'Content-Type': 'application/x-www-form-urlencoded'\n         }\n     })\n-    console.log(response.data)\n+    console.log(response)\n     if(response.data.success){\n         await AsyncStorage.setItem('user', JSON.stringify(response.data.userDetails))\n         return response.data.userDetails\n     }\n"
                },
                {
                    "date": 1639063962836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,8 @@\n     })\n     console.log(response)\n     if(response.data.success){\n         await AsyncStorage.setItem('user', JSON.stringify(response.data.userDetails))\n-        return response.data.userDetails\n     }\n }\n \n export const login = async (email, password)=>{\n"
                },
                {
                    "date": 1639065133930,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n //authenticate doctors into the app\n export const userDetails = async (email, key, auth) => {\n     const response = await axios({\n         method: 'GET',\n-        url: 'https://api.clarondoc.com/users/'+email,\n+        url: 'https://api.clarondoc.com/physicians/'+email,\n         headers: {\n             'Content-Type': 'application/json',\n             'Authorization': `Bearer ${auth}`,\n             'x-api-key': key\n"
                },
                {
                    "date": 1639065398088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n \n         response = res.data\n         await AsyncStorage.setItem('_email', email)\n         await AsyncStorage.setItem('_accesstoken', response.accessToken)\n-        await userDetails(email, key, response.data.accessToken)\n+        await userDetails(email, key, response.accessToken)\n \n     }catch(e){\n         response = {\n             success: false,\n"
                },
                {
                    "date": 1639066459462,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n         options: {\n             'Content-Type': 'application/x-www-form-urlencoded'\n         }\n     })\n-    console.log(response)\n+    console.log(response.data)\n     if(response.data.success){\n         await AsyncStorage.setItem('user', JSON.stringify(response.data.userDetails))\n     }\n }\n"
                },
                {
                    "date": 1639066469663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n         }\n     })\n     console.log(response.data)\n     if(response.data.success){\n-        await AsyncStorage.setItem('user', JSON.stringify(response.data.userDetails))\n+        // await AsyncStorage.setItem('user', JSON.stringify(response.data.userDetails))\n     }\n }\n \n export const login = async (email, password)=>{\n"
                },
                {
                    "date": 1639066527115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,11 +16,11 @@\n         options: {\n             'Content-Type': 'application/x-www-form-urlencoded'\n         }\n     })\n-    console.log(response.data)\n+    console.log(response.data.physicianDetails)\n     if(response.data.success){\n-        // await AsyncStorage.setItem('user', JSON.stringify(response.data.userDetails))\n+        await AsyncStorage.setItem('user', JSON.stringify(response.data.physicianDetails))\n     }\n }\n \n export const login = async (email, password)=>{\n"
                },
                {
                    "date": 1639069036427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,12 @@\n         await AsyncStorage.setItem('user', JSON.stringify(response.data.physicianDetails))\n     }\n }\n \n+export const update_physician = async()=>{\n+    \n+}\n+\n export const login = async (email, password)=>{\n \n     let response\n \n"
                },
                {
                    "date": 1639069250190,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,10 +22,27 @@\n         await AsyncStorage.setItem('user', JSON.stringify(response.data.physicianDetails))\n     }\n }\n \n-export const update_physician = async()=>{\n-    \n+export const update_physician = async(data)=>{\n+    const auth = await AsyncStorage.getItem('access-token');\n+    // let key = await AsyncStorage.getItem('_apikey')\n+    let auth = await AsyncStorage.getItem('_accesstoken')\n+    const response = await axios.default.put('https://api.clarondoc.com/users/update/profile',\n+        data,\n+        {\n+            headers: {\n+                'Content-Type': 'application/json',\n+                'Authorization': `Bearer ${auth}`,\n+                'x-api-key': key\n+            },\n+            options: {\n+                'Content-Type': 'application/x-www-form-urlencoded'\n+            }\n+        }\n+    )\n+\n+    return response.data\n }\n \n export const login = async (email, password)=>{\n \n"
                },
                {
                    "date": 1639069283421,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,10 +23,9 @@\n     }\n }\n \n export const update_physician = async(data)=>{\n-    const auth = await AsyncStorage.getItem('access-token');\n-    // let key = await AsyncStorage.getItem('_apikey')\n+    let key = await AsyncStorage.getItem('_apikey')\n     let auth = await AsyncStorage.getItem('_accesstoken')\n     const response = await axios.default.put('https://api.clarondoc.com/users/update/profile',\n         data,\n         {\n"
                },
                {
                    "date": 1639069348013,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n \n export const update_physician = async(data)=>{\n     let key = await AsyncStorage.getItem('_apikey')\n     let auth = await AsyncStorage.getItem('_accesstoken')\n-    const response = await axios.default.put('https://api.clarondoc.com/users/update/profile',\n+    const response = await axios.default.put('https://api.clarondoc.com/physicians/update',\n         data,\n         {\n             headers: {\n                 'Content-Type': 'application/json',\n"
                }
            ],
            "date": 1639063336790,
            "name": "Commit-0",
            "content": "import AsyncStorage from '@react-native-async-storage/async-storage';\nconst axios = require('axios').default\n\nlet base_url = 'https://api.clarondoc.com'\n\n//authenticate doctors into the app\nexport const userDetails = async (email, key, auth) => {\n    const response = await axios({\n        method: 'GET',\n        url: 'https://api.clarondoc.com/users/'+email,\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${auth}`,\n            'x-api-key': key\n        },\n        options: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n        }\n    })\n\n    if(response.data.success){\n        await AsyncStorage.setItem('user', JSON.stringify(response.data.userDetails))\n        return response.data.userDetails\n    }\n}\n\nexport const login = async (email, password)=>{\n\n    let response\n\n    try{\n\n        let key = await AsyncStorage.getItem('_apikey')\n        let res = await axios.post(`${base_url}/login?type=doctor`, {\n            email,\n            password\n        },\n        {\n            headers:{\n                'x-api-key': key\n            }\n        })\n\n        response = res.data\n        await AsyncStorage.setItem('_email', email)\n        await AsyncStorage.setItem('_accesstoken', response.accessToken)\n        await userDetails(email, key, response.data.accessToken)\n\n    }catch(e){\n        response = {\n            success: false,\n            message: e.response.data.message\n        }\n    }\n\n    return response\n\n}\n\n// send message to patient\nexport const sendMessage = async (data) =>{\n    try{\n\n        let key = await AsyncStorage.getItem('_apikey')\n        let token = await AsyncStorage.getItem('_accesstoken')\n        let res = await axios.post(`${base_url}/chats`, data, {\n            headers: {\n                'x-api-key': key,\n                'Authorization': `Bearer ${token}`\n            }\n        })\n\n        return res.data.success\n\n    }catch(e){\n        console.log(e)\n        return false\n    }\n}\n\n// respond to consultation request\nexport const respondRequest = async (response, id)=>{\n    try{\n        let key = await AsyncStorage.getItem('_apikey')\n        let token = await AsyncStorage.getItem('_accesstoken')\n        let res = await axios.post(`${base_url}/physicians/consultations/confirm`, {\n            availability: response,\n            id\n        }, {\n            headers: {\n                'x-api-key': key,\n                'Authorization': `Bearer ${token}`\n            }\n        })\n        return res.data.success\n    }catch(e){\n        return false\n    }\n}\n\n// get all chats the doctor has\nexport const getChats = async ()=>{\n\n    let data = []\n\n    try{\n        let key = await AsyncStorage.getItem('_apikey')\n        let email = await AsyncStorage.getItem('_email')\n        let token = await AsyncStorage.getItem('_accesstoken')\n        let res = await axios.get(`${base_url}/chats/conversations/all/${email}`, {\n            headers: {\n                'x-api-key': key,\n                'Authorization': `Bearer ${token}`\n            }\n        })\n        res.data.chats.forEach(chat=>{\n\n            let c\n\n            if(chat.from.email == email){\n                \n                c = {\n                    name: `${chat.to.firstname} ${chat.to.lastname}`,\n                    message: chat.message,\n                    time: chat.createDate,\n                    avatar: chat.to.avatar,\n                    email: chat.to.email,\n                    id: chat.id\n                }\n            }else{\n                c = {\n                    name: `${chat.from.firstname} ${chat.from.lastname}`,\n                    message: chat.message,\n                    time: chat.createDate,\n                    avatar: chat.from.avatar,\n                    email: chat.from.email,\n                    id: chat.id\n                }\n            }\n\n            data.push(c)\n        })\n    }catch(e){\n        console.log('chat fetch failed: ', e.response.data)\n    }\n\n    return data\n\n}\n\n// get patients\nexport const getPatients = async (query)=>{\n    let data = []\n\n    let s = query\n    if(query == ' '){\n        s = '%20'\n    }\n\n    try{\n        let query = ' '\n        let key = await AsyncStorage.getItem('_apikey')\n        let token = await AsyncStorage.getItem('_accesstoken')\n        let res = await axios.get(`${base_url}/search/users/${s}`, {\n            headers: {\n                'x-api-key': key,\n                'Authorization': `Bearer ${token}`\n            }\n        })\n        data = res.data.users\n    }catch(e){\n        console.log('patients fetch failed: ', e)\n    }\n\n    return data\n}\n\n// get messages from selected chat\nexport const getConversation = async (to)=>{\n\n    let data = []\n\n    try{\n        let key = await AsyncStorage.getItem('_apikey')\n        let email = await AsyncStorage.getItem('_email')\n        let token = await AsyncStorage.getItem('_accesstoken')\n        let res = await axios.get(`${base_url}/chats/conversations/between/${email}/and/${to}`, {\n            headers: {\n                'x-api-key': key,\n                'Authorization': `Bearer ${token}`\n            }\n        })\n        data = res.data.chats\n    }catch(e){\n        console.log('conversation fetch failed: ', e)\n    }\n\n    return data\n}\n\n\n// fetch notifications\nexport const getNotifications = async ()=>{\n\n    let data = []\n\n    try{\n        let key = await AsyncStorage.getItem('_apikey')\n        let email = await AsyncStorage.getItem('_email')\n        let token = await AsyncStorage.getItem('_accesstoken')\n        let res = await axios.get(`${base_url}/notifications/users/${email}`, {\n            headers: {\n                'x-api-key': key,\n                'Authorization': `Bearer ${token}`\n            }\n        })\n        data = res.data.notifications\n    }catch(e){\n        data = []\n    }\n\n    return data\n\n}\n\n// get doctor's schedule\nexport const getSchedule = async ()=>{\n\n    let data = []\n\n    try{\n        let key = await AsyncStorage.getItem('_apikey')\n        let email = await AsyncStorage.getItem('_email')\n        let token = await AsyncStorage.getItem('_accesstoken')\n        let res = await axios.get(`${base_url}/requests/physicians/consultations/physicians/${email}`, {\n            headers: {\n                'x-api-key': key,\n                'Authorization': `Bearer ${token}`\n            }\n        })\n        data = res.data.requests\n    }catch(e){\n        data = []\n    }\n\n    return data\n\n}\n\n// change status to online, offline or in meeting\nexport const changeStatus = async (status)=>{\n    try{\n        let key = await AsyncStorage.getItem('_apikey')\n        let token = await AsyncStorage.getItem('_accesstoken')\n        let res = await axios.put(`${base_url}/physicians/update/availability`, {\n            availability: status\n        }, {\n            headers: {\n                'x-api-key': key,\n                'Authorization': `Bearer ${token}`\n            }\n        })\n        return res.data.success\n    }catch(e){\n        return false\n    }\n}\n\n// update fcm token for push notifications\nexport const updateFCMToken = async (fcm)=>{\n\n    try{\n        let key = await AsyncStorage.getItem('_apikey')\n        let token = await AsyncStorage.getItem('_accesstoken')\n        let res = await axios.post(`${base_url}/notifications/subscribe`, {\n            token: fcm\n        }, {\n            headers: {\n                'x-api-key': key,\n                'Authorization': `Bearer ${token}`\n            }\n        })\n        console.log(res.data)\n        data = res.data\n    }catch(e){\n        console.log(e)\n        data = null\n    }\n\n    return data\n\n}\n\n// get api key for authorization to all endpoints\nexport const getApiKey = async ()=>{\n\n    try{\n        let key = await AsyncStorage.getItem('_apikey')\n\n        if(key == null){\n            let res = await axios.post(`${base_url}/getAPIKey`, {\n                email: 'developer@clarondoc.com',\n                password: 'Basket012Ball'\n            })\n            let key = res.data.apiKey\n            await AsyncStorage.setItem('_apikey', key)\n        }\n    }catch(e){\n        console.log('api key fetch failed: ', e)\n    }\n\n}"
        }
    ]
}