{
    "sourceFile": "screens/main.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 31,
            "patches": [
                {
                    "date": 1639044883540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1639063525704,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,10 @@\n import firestore from '@react-native-firebase/firestore';\n import { BottomNavigation, BottomNavigationTab, Icon, Button, Layout, Divider, Toggle } from '@ui-kitten/components';\n import * as API from '../api';\n \n+AsyncStorage.clear();\n+\n const call_options = {\n     ios: {\n       appName: 'ClarondocDoctors',\n     },\n"
                },
                {
                    "date": 1639063559428,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,10 +11,8 @@\n import firestore from '@react-native-firebase/firestore';\n import { BottomNavigation, BottomNavigationTab, Icon, Button, Layout, Divider, Toggle } from '@ui-kitten/components';\n import * as API from '../api';\n \n-AsyncStorage.clear();\n-\n const call_options = {\n     ios: {\n       appName: 'ClarondocDoctors',\n     },\n"
                },
                {
                    "date": 1640892958220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -142,8 +142,9 @@\n                 console.log('Docs: ', snapshot.docs.length)\n                 if(snapshot.docs.length > 0){\n                     urgent = snapshot.docs[0]\n                     let call = await AsyncStorage.removeItem('_call')\n+                    console.log(call)\n \n                     if(call == null){\n                         await AsyncStorage.setItem('_call', urgent.data().channel)\n                         RNCallKeep.displayIncomingCall(urgent.data().channel, 'Urgent Care', localizedCallerName = 'Urgent Care', handleType = 'generic')\n"
                },
                {
                    "date": 1640893161491,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -142,9 +142,9 @@\n                 console.log('Docs: ', snapshot.docs.length)\n                 if(snapshot.docs.length > 0){\n                     urgent = snapshot.docs[0]\n                     let call = await AsyncStorage.removeItem('_call')\n-                    console.log(call)\n+                    console.log(urgent)\n \n                     if(call == null){\n                         await AsyncStorage.setItem('_call', urgent.data().channel)\n                         RNCallKeep.displayIncomingCall(urgent.data().channel, 'Urgent Care', localizedCallerName = 'Urgent Care', handleType = 'generic')\n"
                },
                {
                    "date": 1640894121797,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -142,9 +142,9 @@\n                 console.log('Docs: ', snapshot.docs.length)\n                 if(snapshot.docs.length > 0){\n                     urgent = snapshot.docs[0]\n                     let call = await AsyncStorage.removeItem('_call')\n-                    console.log(urgent)\n+                    console.log(urgent.data())\n \n                     if(call == null){\n                         await AsyncStorage.setItem('_call', urgent.data().channel)\n                         RNCallKeep.displayIncomingCall(urgent.data().channel, 'Urgent Care', localizedCallerName = 'Urgent Care', handleType = 'generic')\n"
                },
                {
                    "date": 1640894211369,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -142,9 +142,9 @@\n                 console.log('Docs: ', snapshot.docs.length)\n                 if(snapshot.docs.length > 0){\n                     urgent = snapshot.docs[0]\n                     let call = await AsyncStorage.removeItem('_call')\n-                    console.log(urgent.data())\n+                    console.log(urgent.data().channel)\n \n                     if(call == null){\n                         await AsyncStorage.setItem('_call', urgent.data().channel)\n                         RNCallKeep.displayIncomingCall(urgent.data().channel, 'Urgent Care', localizedCallerName = 'Urgent Care', handleType = 'generic')\n"
                },
                {
                    "date": 1640894537202,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -142,13 +142,18 @@\n                 console.log('Docs: ', snapshot.docs.length)\n                 if(snapshot.docs.length > 0){\n                     urgent = snapshot.docs[0]\n                     let call = await AsyncStorage.removeItem('_call')\n-                    console.log(urgent.data().channel)\n+                    // console.log(urgent.data().channel)\n \n                     if(call == null){\n                         await AsyncStorage.setItem('_call', urgent.data().channel)\n-                        RNCallKeep.displayIncomingCall(urgent.data().channel, 'Urgent Care', localizedCallerName = 'Urgent Care', handleType = 'generic')\n+                        try{\n+                            RNCallKeep.displayIncomingCall(urgent.data().channel, 'Urgent Care', localizedCallerName = 'Urgent Care', handleType = 'generic')\n+                        }catch(e){\n+                            console.log(e)\n+                        }\n+                        \n                     }\n                 }\n             }, e => {\n                 console.log('Firebase Error: ', e)\n"
                },
                {
                    "date": 1640894573186,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -149,9 +149,9 @@\n                         await AsyncStorage.setItem('_call', urgent.data().channel)\n                         try{\n                             RNCallKeep.displayIncomingCall(urgent.data().channel, 'Urgent Care', localizedCallerName = 'Urgent Care', handleType = 'generic')\n                         }catch(e){\n-                            console.log(e)\n+                            console.log(['reached',e])\n                         }\n                         \n                     }\n                 }\n"
                },
                {
                    "date": 1640894637003,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -138,20 +138,22 @@\n \n             // RNCallKeep.displayIncomingCall(call_id, '0500000000', localizedCallerName = 'Urgent Care', handleType = 'generic')\n \n             firestore().collection('calls').where(\"recipient\", \"==\", email).onSnapshot(async snapshot=>{\n-                console.log('Docs: ', snapshot.docs.length)\n+                // console.log('Docs: ', snapshot.docs.length)\n                 if(snapshot.docs.length > 0){\n                     urgent = snapshot.docs[0]\n                     let call = await AsyncStorage.removeItem('_call')\n                     // console.log(urgent.data().channel)\n \n                     if(call == null){\n+                        console.log('reached')\n+                        console.log(urgent.data().channel)\n                         await AsyncStorage.setItem('_call', urgent.data().channel)\n                         try{\n                             RNCallKeep.displayIncomingCall(urgent.data().channel, 'Urgent Care', localizedCallerName = 'Urgent Care', handleType = 'generic')\n                         }catch(e){\n-                            console.log(['reached',e])\n+                            console.log(e)\n                         }\n                         \n                     }\n                 }\n"
                },
                {
                    "date": 1640898366105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -145,10 +145,10 @@\n                     let call = await AsyncStorage.removeItem('_call')\n                     // console.log(urgent.data().channel)\n \n                     if(call == null){\n-                        console.log('reached')\n-                        console.log(urgent.data().channel)\n+                        // console.log('reached')\n+                        console.log(urgent.data())\n                         await AsyncStorage.setItem('_call', urgent.data().channel)\n                         try{\n                             RNCallKeep.displayIncomingCall(urgent.data().channel, 'Urgent Care', localizedCallerName = 'Urgent Care', handleType = 'generic')\n                         }catch(e){\n"
                },
                {
                    "date": 1640898433510,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -147,15 +147,18 @@\n \n                     if(call == null){\n                         // console.log('reached')\n                         console.log(urgent.data())\n-                        await AsyncStorage.setItem('_call', urgent.data().channel)\n-                        try{\n-                            RNCallKeep.displayIncomingCall(urgent.data().channel, 'Urgent Care', localizedCallerName = 'Urgent Care', handleType = 'generic')\n-                        }catch(e){\n-                            console.log(e)\n+                        if(urgent.data().status != \"ended\"){\n+                            await AsyncStorage.setItem('_call', urgent.data().channel)\n+                            try{\n+                                RNCallKeep.displayIncomingCall(urgent.data().channel, 'Urgent Care', localizedCallerName = 'Urgent Care', handleType = 'generic')\n+                            }catch(e){\n+                                console.log(e)\n+                            }\n                         }\n                         \n+                        \n                     }\n                 }\n             }, e => {\n                 console.log('Firebase Error: ', e)\n"
                },
                {
                    "date": 1640898692078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -146,9 +146,9 @@\n                     // console.log(urgent.data().channel)\n \n                     if(call == null){\n                         // console.log('reached')\n-                        console.log(urgent.data())\n+                        console.log(urgent.data().status)\n                         if(urgent.data().status != \"ended\"){\n                             await AsyncStorage.setItem('_call', urgent.data().channel)\n                             try{\n                                 RNCallKeep.displayIncomingCall(urgent.data().channel, 'Urgent Care', localizedCallerName = 'Urgent Care', handleType = 'generic')\n"
                },
                {
                    "date": 1640899002382,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -152,9 +152,9 @@\n                             await AsyncStorage.setItem('_call', urgent.data().channel)\n                             try{\n                                 RNCallKeep.displayIncomingCall(urgent.data().channel, 'Urgent Care', localizedCallerName = 'Urgent Care', handleType = 'generic')\n                             }catch(e){\n-                                console.log(e)\n+                                // console.log(e)\n                             }\n                         }\n                         \n                         \n@@ -170,8 +170,9 @@\n                 if(message.data.hasOwnProperty('call')){\n                     try{\n                         if(!oncall){\n                             oncall = true\n+                            console.log(message)\n                             RNCallKeep.displayIncomingCall(call_id, '0500000000', localizedCallerName = `${message.notification.title}`, handleType = 'generic')\n                         }\n                         return;\n                     }catch(e){\n"
                },
                {
                    "date": 1640899016793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,8 +170,9 @@\n                 if(message.data.hasOwnProperty('call')){\n                     try{\n                         if(!oncall){\n                             oncall = true\n+                            console.log('foreground')\n                             console.log(message)\n                             RNCallKeep.displayIncomingCall(call_id, '0500000000', localizedCallerName = `${message.notification.title}`, handleType = 'generic')\n                         }\n                         return;\n"
                },
                {
                    "date": 1640902166690,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,22 +137,24 @@\n             });\n \n             // RNCallKeep.displayIncomingCall(call_id, '0500000000', localizedCallerName = 'Urgent Care', handleType = 'generic')\n \n-            firestore().collection('calls').where(\"recipient\", \"==\", email).onSnapshot(async snapshot=>{\n+            firestore().collection('calls').doc(email).onSnapshot(async snapshot=>{\n                 // console.log('Docs: ', snapshot.docs.length)\n-                if(snapshot.docs.length > 0){\n-                    urgent = snapshot.docs[0]\n+                // if(snapshot.docs.length > 0){\n+                if(true){\n+                    // urgent = snapshot.docs[0]\n+                    urgent = snapshot.data().data;\n                     let call = await AsyncStorage.removeItem('_call')\n                     // console.log(urgent.data().channel)\n \n                     if(call == null){\n                         // console.log('reached')\n-                        console.log(urgent.data().status)\n-                        if(urgent.data().status != \"ended\"){\n-                            await AsyncStorage.setItem('_call', urgent.data().channel)\n+                        console.log(urgent.status)\n+                        if(urgent.status != \"ended\"){\n+                            await AsyncStorage.setItem('_call', urgent.channel)\n                             try{\n-                                RNCallKeep.displayIncomingCall(urgent.data().channel, 'Urgent Care', localizedCallerName = 'Urgent Care', handleType = 'generic')\n+                                RNCallKeep.displayIncomingCall(urgent.channel, 'Urgent Care', localizedCallerName = 'Urgent Care', handleType = 'generic')\n                             }catch(e){\n                                 // console.log(e)\n                             }\n                         }\n"
                },
                {
                    "date": 1640902446542,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -152,8 +152,9 @@\n                         console.log(urgent.status)\n                         if(urgent.status != \"ended\"){\n                             await AsyncStorage.setItem('_call', urgent.channel)\n                             try{\n+                                console.log('call reached')\n                                 RNCallKeep.displayIncomingCall(urgent.channel, 'Urgent Care', localizedCallerName = 'Urgent Care', handleType = 'generic')\n                             }catch(e){\n                                 // console.log(e)\n                             }\n"
                },
                {
                    "date": 1640902669204,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -157,8 +157,10 @@\n                                 RNCallKeep.displayIncomingCall(urgent.channel, 'Urgent Care', localizedCallerName = 'Urgent Care', handleType = 'generic')\n                             }catch(e){\n                                 // console.log(e)\n                             }\n+                        }else{\n+                            RNCallKeep.endAllCalls()\n                         }\n                         \n                         \n                     }\n"
                },
                {
                    "date": 1640903260526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,8 +36,15 @@\n let oncall = false\n let call_id\n let urgent\n \n+// add listener for call reject\n+RNCallKeep.addEventListener('endCall', ()=>{\n+    firebase.firestore().collection('calls').doc(email).set({data: {\n+        status: 'ended'\n+    }}, {merge: true})\n+})\n+\n const { Navigator, Screen } = createBottomTabNavigator();\n \n const ChatIcon = (props) => (\n     <Icon {...props} name='message-circle-outline'/>\n"
                },
                {
                    "date": 1640903783048,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n let urgent\n \n // add listener for call reject\n RNCallKeep.addEventListener('endCall', ()=>{\n-    firebase.firestore().collection('calls').doc(email).set({data: {\n+    firestore().collection('calls').doc(email).set({data: {\n         status: 'ended'\n     }}, {merge: true})\n })\n \n"
                },
                {
                    "date": 1640903889431,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,11 +38,15 @@\n let urgent\n \n // add listener for call reject\n RNCallKeep.addEventListener('endCall', ()=>{\n-    firestore().collection('calls').doc(email).set({data: {\n-        status: 'ended'\n-    }}, {merge: true})\n+    (async()=>{\n+        let email = await AsyncStorage.getItem('_email')\n+        firestore().collection('calls').doc(email).set({data: {\n+            status: 'ended'\n+        }}, {merge: true})\n+    })()\n+    \n })\n \n const { Navigator, Screen } = createBottomTabNavigator();\n \n"
                },
                {
                    "date": 1640903991301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,10 @@\n         let email = await AsyncStorage.getItem('_email')\n         firestore().collection('calls').doc(email).set({data: {\n             status: 'ended'\n         }}, {merge: true})\n+\n+        RNCallKeep.endAllCalls();\n     })()\n     \n })\n \n"
                },
                {
                    "date": 1640908683762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -132,9 +132,9 @@\n             call_id = uuid.v4()\n \n             RNCallKeep.addEventListener('answerCall', ({ callUUID }) => {\n                 // Do your normal `Answering` actions here.\n-                navigation.navigate('Urgent', {channel: urgent.data().channel, token: urgent.data().token})\n+                navigation.navigate('Urgent', {channel: urgent.channel, token: urgent.token})\n             });\n \n             RNCallKeep.addEventListener('endCall', async ({ callUUID }) => {\n                 // Do your normal `Answering` actions here.\n"
                },
                {
                    "date": 1640909820405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -162,16 +162,18 @@\n \n                     if(call == null){\n                         // console.log('reached')\n                         console.log(urgent.status)\n-                        if(urgent.status != \"ended\"){\n+                        if((urgent.status != \"ended\") && (urgent.status != \"ongoing\")){\n                             await AsyncStorage.setItem('_call', urgent.channel)\n                             try{\n                                 console.log('call reached')\n                                 RNCallKeep.displayIncomingCall(urgent.channel, 'Urgent Care', localizedCallerName = 'Urgent Care', handleType = 'generic')\n                             }catch(e){\n                                 // console.log(e)\n                             }\n+                        }else if(urgent.status == \"ongoing\"){\n+\n                         }else{\n                             RNCallKeep.endAllCalls()\n                         }\n                         \n"
                },
                {
                    "date": 1640910329095,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -132,9 +132,9 @@\n             call_id = uuid.v4()\n \n             RNCallKeep.addEventListener('answerCall', ({ callUUID }) => {\n                 // Do your normal `Answering` actions here.\n-                navigation.navigate('Urgent', {channel: urgent.channel, token: urgent.token})\n+                navigation.navigate('Urgent', {channel: urgent.channel, token: urgent.token, email: email})\n             });\n \n             RNCallKeep.addEventListener('endCall', async ({ callUUID }) => {\n                 // Do your normal `Answering` actions here.\n"
                },
                {
                    "date": 1640912534079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -132,8 +132,9 @@\n             call_id = uuid.v4()\n \n             RNCallKeep.addEventListener('answerCall', ({ callUUID }) => {\n                 // Do your normal `Answering` actions here.\n+                RNCallKeep.startCall(urgent.channel, 'Urgent Care', localizedCallerName = 'Urgent Care', handleType = 'generic')\n                 navigation.navigate('Urgent', {channel: urgent.channel, token: urgent.token, email: email})\n             });\n \n             RNCallKeep.addEventListener('endCall', async ({ callUUID }) => {\n"
                },
                {
                    "date": 1640912843135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -174,8 +174,9 @@\n                             }\n                         }else if(urgent.status == \"ongoing\"){\n \n                         }else{\n+                            console.log('ending nw')\n                             RNCallKeep.endAllCalls()\n                         }\n                         \n                         \n"
                },
                {
                    "date": 1640914532833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,8 +45,9 @@\n             status: 'ended'\n         }}, {merge: true})\n \n         RNCallKeep.endAllCalls();\n+        console.log('rnck: ended call')\n     })()\n     \n })\n \n"
                },
                {
                    "date": 1640914658621,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -134,8 +134,9 @@\n \n             RNCallKeep.addEventListener('answerCall', ({ callUUID }) => {\n                 // Do your normal `Answering` actions here.\n                 RNCallKeep.startCall(urgent.channel, 'Urgent Care', localizedCallerName = 'Urgent Care', handleType = 'generic')\n+                console.log('rnck: call answered')\n                 navigation.navigate('Urgent', {channel: urgent.channel, token: urgent.token, email: email})\n             });\n \n             RNCallKeep.addEventListener('endCall', async ({ callUUID }) => {\n"
                },
                {
                    "date": 1640914920638,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n             status: 'ended'\n         }}, {merge: true})\n \n         RNCallKeep.endAllCalls();\n-        console.log('rnck: ended call')\n+        // console.log('rnck: ended call')\n     })()\n     \n })\n \n@@ -144,9 +144,9 @@\n                 await AsyncStorage.removeItem('_call')\n                 if(urgent != null){\n                     firestore().collection('urgent').doc(urgent.id).delete()\n                 }\n-                RNCallKeep.endAllCalls()\n+                // RNCallKeep.endAllCalls()\n             });\n \n             RNCallKeep.addEventListener('didPerformSetMutedCallAction', (data)=>{\n                 console.log(data.muted)\n"
                },
                {
                    "date": 1640915029595,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n             status: 'ended'\n         }}, {merge: true})\n \n         RNCallKeep.endAllCalls();\n-        // console.log('rnck: ended call')\n+        console.log('rnck: ended call')\n     })()\n     \n })\n \n@@ -144,9 +144,9 @@\n                 await AsyncStorage.removeItem('_call')\n                 if(urgent != null){\n                     firestore().collection('urgent').doc(urgent.id).delete()\n                 }\n-                // RNCallKeep.endAllCalls()\n+                RNCallKeep.endAllCalls()\n             });\n \n             RNCallKeep.addEventListener('didPerformSetMutedCallAction', (data)=>{\n                 console.log(data.muted)\n"
                },
                {
                    "date": 1640915054843,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -134,9 +134,9 @@\n \n             RNCallKeep.addEventListener('answerCall', ({ callUUID }) => {\n                 // Do your normal `Answering` actions here.\n                 RNCallKeep.startCall(urgent.channel, 'Urgent Care', localizedCallerName = 'Urgent Care', handleType = 'generic')\n-                console.log('rnck: call answered')\n+                console.log('rnck: call')\n                 navigation.navigate('Urgent', {channel: urgent.channel, token: urgent.token, email: email})\n             });\n \n             RNCallKeep.addEventListener('endCall', async ({ callUUID }) => {\n"
                }
            ],
            "date": 1639044883540,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from 'react';\nimport RNCallKeep from 'react-native-callkeep';\nimport Chats from './tabs/chats';\nimport Calls from './tabs/calls';\nimport Manage from './tabs/manage';\nimport uuid from 'react-native-uuid';\nimport { Alert, PermissionsAndroid, SafeAreaView } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport messaging from '@react-native-firebase/messaging';\nimport firestore from '@react-native-firebase/firestore';\nimport { BottomNavigation, BottomNavigationTab, Icon, Button, Layout, Divider, Toggle } from '@ui-kitten/components';\nimport * as API from '../api';\n\nconst call_options = {\n    ios: {\n      appName: 'ClarondocDoctors',\n    },\n    android: {\n      alertTitle: 'Permissions required',\n      alertDescription: 'This application needs to access your phone accounts',\n      cancelButton: 'Cancel',\n      okButton: 'ok',\n      imageName: 'phone_account_icon',\n      additionalPermissions: [PermissionsAndroid.PERMISSIONS.READ_CONTACTS],\n      // Required to get audio in background when using Android 11\n      foregroundService: {\n        channelId: 'default',\n        channelName: 'Foreground service for my app',\n        notificationTitle: 'Incoming urgent connect',\n        notificationIcon: 'https://imageuploads01.s3.amazonaws.com/1607082935102-icon_inv.jpg',\n      }, \n    }\n};\nRNCallKeep.setup(call_options).then(accepted=>{})\nlet oncall = false\nlet call_id\nlet urgent\n\nconst { Navigator, Screen } = createBottomTabNavigator();\n\nconst ChatIcon = (props) => (\n    <Icon {...props} name='message-circle-outline'/>\n);\n\nconst BellIcon = (props) => (\n    <Icon {...props} name='bell-outline'/>\n);\n\nconst LockIcon = (props) => (\n    <Icon {...props} name='person-outline'/>\n);\n  \nconst CallIcon = (props) => (\n    <Icon {...props} name='phone-call-outline'/>\n);\n  \nconst AccountIcon = (props) => (\n    <Icon {...props} name='clipboard-outline'/>\n);\n\nconst BottomTabBar = ({ navigation, state }) => (\n  <BottomNavigation\n    selectedIndex={state.index}\n    onSelect={index => navigation.navigate(state.routeNames[index])}>\n    <BottomNavigationTab title='Chats' icon={ChatIcon}/>\n    <BottomNavigationTab title='Calls' icon={CallIcon}/>\n    <BottomNavigationTab title='More' icon={AccountIcon}/>\n  </BottomNavigation>\n);\n\nexport const MainScreen = ({navigation}) =>{\n    \n    const [online, setonline] = useState(false)\n\n    const updateStatus = async (online)=>{\n        setonline(online)\n\n        try{\n            let changed = await API.changeStatus(online ? 'Online' : 'Offline')\n\n            if(!changed){\n                statuserror(online)\n                return\n            }\n\n            await AsyncStorage.setItem('_status', online ? 'true' : 'false')\n        }catch(e){\n            statuserror(online)\n        }\n    };\n\n    const statuserror = async(online)=>{\n        setonline(!online)\n        Alert.alert('Not Changed', 'There was an error updating your online status', [\n            {\n                text: 'Retry',\n                onPress: ()=>updateStatus(online),\n                style: 'default'\n            },\n            {\n                text: 'Cancel',\n                onPress: ()=>setonline(!online),\n                style: 'cancel'\n            }\n        ])\n    }\n\n    const logout = async()=>{\n        navigation.navigate('Account')\n    }\n\n    useEffect(() => {\n        (async()=>{\n\n            let email = await AsyncStorage.getItem('_email')\n\n            setonline((await AsyncStorage.getItem('_status')) == 'true')\n            call_id = uuid.v4()\n\n            RNCallKeep.addEventListener('answerCall', ({ callUUID }) => {\n                // Do your normal `Answering` actions here.\n                navigation.navigate('Urgent', {channel: urgent.data().channel, token: urgent.data().token})\n            });\n\n            RNCallKeep.addEventListener('endCall', async ({ callUUID }) => {\n                // Do your normal `Answering` actions here.\n                await AsyncStorage.removeItem('_call')\n                if(urgent != null){\n                    firestore().collection('urgent').doc(urgent.id).delete()\n                }\n                RNCallKeep.endAllCalls()\n            });\n\n            RNCallKeep.addEventListener('didPerformSetMutedCallAction', (data)=>{\n                console.log(data.muted)\n            });\n\n            // RNCallKeep.displayIncomingCall(call_id, '0500000000', localizedCallerName = 'Urgent Care', handleType = 'generic')\n\n            firestore().collection('calls').where(\"recipient\", \"==\", email).onSnapshot(async snapshot=>{\n                console.log('Docs: ', snapshot.docs.length)\n                if(snapshot.docs.length > 0){\n                    urgent = snapshot.docs[0]\n                    let call = await AsyncStorage.removeItem('_call')\n\n                    if(call == null){\n                        await AsyncStorage.setItem('_call', urgent.data().channel)\n                        RNCallKeep.displayIncomingCall(urgent.data().channel, 'Urgent Care', localizedCallerName = 'Urgent Care', handleType = 'generic')\n                    }\n                }\n            }, e => {\n                console.log('Firebase Error: ', e)\n            })\n\n            // listen for foreground notifications\n            messaging().onMessage(async message => {\n\n                if(message.data.hasOwnProperty('call')){\n                    try{\n                        if(!oncall){\n                            oncall = true\n                            RNCallKeep.displayIncomingCall(call_id, '0500000000', localizedCallerName = `${message.notification.title}`, handleType = 'generic')\n                        }\n                        return;\n                    }catch(e){\n                        console.log('display incoming call error: ', e)\n                        return\n                    }\n                }\n\n                Alert.alert(message.notification.title, message.notification.body, [\n                {\n                    text: 'View',\n                    style: 'default',\n                    onPress: ()=>{\n                    if(message.data.title.includes('New message')){\n                        let sender = message.data.extraData1\n                        navigation.navigate('Conversation', { user: sender, name: message.data.title.replace('New message from ', '')})\n                    }\n                    }\n                },\n                {\n                    text: 'Dismiss',\n                    style: 'cancel',\n                    onPress: ()=>{}\n                }\n                ]);\n            })\n            // end listen for foreground notifications\n\n            // do something on notification open\n            messaging().onNotificationOpenedApp(message=>{\n                console.log('Notification opened: ', message)\n            })\n        })()\n    }, [])\n\n    return (\n        <Layout style={{flex: 1}}>\n            <SafeAreaView style={{flex: 1}}>\n                <Layout style={{flexDirection: 'row', padding: 15, justifyContent: 'space-between'}}>\n                    <Button onPress={()=>navigation.navigate('Notifications')} style={{height: 35, width: 35}} size={'small'} appearance={'outline'} accessoryLeft={BellIcon}></Button>\n                    <Toggle checked={online} onChange={updateStatus}/>\n                    <Button onPress={logout} style={{height: 35, width: 35}} size={'small'} appearance={'outline'} accessoryLeft={LockIcon}></Button>\n                </Layout>\n                <Divider/>\n                <Navigator screenOptions={{headerShown: false}} tabBar={props => <BottomTabBar {...props} />}>\n                    <Screen name='Chats' component={Chats}/>\n                    <Screen name='Calls' component={Calls}/>\n                    <Screen name='Manage' component={Manage}/>\n                </Navigator>\n            </SafeAreaView>\n        </Layout>\n    );\n}"
        }
    ]
}