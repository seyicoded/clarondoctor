{
    "sourceFile": "screens/calls/video.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 75,
            "patches": [
                {
                    "date": 1641085232002,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1641085474466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,12 @@\n const SpeakerIcon = (props)=><Icon {...props} name=\"volume-up-outline\"/>\n const EndIcon = (props)=><Icon {...props} name=\"close-outline\"/>\n const MuteIcon = (props)=><Icon {...props} name=\"mic-off-outline\"/>\n \n-const VideoCall = ({navigation}) => {\n+const VideoCall = ({navigation, route}) => {\n+  const doctor_email = route.params.doctor_email;\n+  const patient_email = route.params.patient_email;\n+\n   const isDarkMode = useColorScheme() === 'dark';\n   const [joined, setjoined] = useState(false)\n   const [engine, setengine] = useState()\n   const [muted, setmuted] = useState(false)\n"
                },
                {
                    "date": 1641085483110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n     setengine(_engine)\n \n     _addListeners()\n \n-    await _engine.enableVideo()\n+    // await _engine.enableVideo()\n     await _engine.startPreview()\n     await _engine.setChannelProfile(ChannelProfile.LiveBroadcasting)\n     await _engine.setClientRole(ClientRole.Broadcaster)\n     try{\n"
                },
                {
                    "date": 1641085491374,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n     setengine(_engine)\n \n     _addListeners()\n \n-    // await _engine.enableVideo()\n+    await _engine.enableVideo()\n     await _engine.startPreview()\n     await _engine.setChannelProfile(ChannelProfile.LiveBroadcasting)\n     await _engine.setClientRole(ClientRole.Broadcaster)\n     try{\n"
                },
                {
                    "date": 1641085527296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,8 +44,9 @@\n \n     _addListeners()\n \n     await _engine.enableVideo()\n+    await _engine.enableLocalVideo()\n     await _engine.startPreview()\n     await _engine.setChannelProfile(ChannelProfile.LiveBroadcasting)\n     await _engine.setClientRole(ClientRole.Broadcaster)\n     try{\n"
                },
                {
                    "date": 1641085560422,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n \n     _addListeners()\n \n     await _engine.enableVideo()\n-    await _engine.enableLocalVideo()\n+    await _engine.enableLocalVideo(true)\n     await _engine.startPreview()\n     await _engine.setChannelProfile(ChannelProfile.LiveBroadcasting)\n     await _engine.setClientRole(ClientRole.Broadcaster)\n     try{\n"
                },
                {
                    "date": 1641085674925,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n     _addListeners()\n \n     await _engine.enableVideo()\n     await _engine.enableLocalVideo(true)\n-    await _engine.startPreview()\n+    // await _engine.startPreview()\n     await _engine.setChannelProfile(ChannelProfile.LiveBroadcasting)\n     await _engine.setClientRole(ClientRole.Broadcaster)\n     try{\n       await _engine.joinChannel('006a90dea913c844cd7bcada446242c6150IAA0Kk/v+DSMEdW7apteZTf19Fz2BUqa3+nMAj7HeO9KYwO7xC0AAAAAEACLgpZh2C8vYQEAAQDVLy9h',\n"
                },
                {
                    "date": 1641085684596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n     _addListeners()\n \n     await _engine.enableVideo()\n     await _engine.enableLocalVideo(true)\n-    // await _engine.startPreview()\n+    await _engine.startPreview()\n     await _engine.setChannelProfile(ChannelProfile.LiveBroadcasting)\n     await _engine.setClientRole(ClientRole.Broadcaster)\n     try{\n       await _engine.joinChannel('006a90dea913c844cd7bcada446242c6150IAA0Kk/v+DSMEdW7apteZTf19Fz2BUqa3+nMAj7HeO9KYwO7xC0AAAAAEACLgpZh2C8vYQEAAQDVLy9h',\n"
                },
                {
                    "date": 1641085726539,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,8 @@\n     _addListeners()\n \n     await _engine.enableVideo()\n     await _engine.enableLocalVideo(true)\n-    await _engine.startPreview()\n     await _engine.setChannelProfile(ChannelProfile.LiveBroadcasting)\n     await _engine.setClientRole(ClientRole.Broadcaster)\n     try{\n       await _engine.joinChannel('006a90dea913c844cd7bcada446242c6150IAA0Kk/v+DSMEdW7apteZTf19Fz2BUqa3+nMAj7HeO9KYwO7xC0AAAAAEACLgpZh2C8vYQEAAQDVLy9h',\n"
                },
                {
                    "date": 1641085745283,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,8 +45,9 @@\n     _addListeners()\n \n     await _engine.enableVideo()\n     await _engine.enableLocalVideo(true)\n+    await _engine.startPreview()\n     await _engine.setChannelProfile(ChannelProfile.LiveBroadcasting)\n     await _engine.setClientRole(ClientRole.Broadcaster)\n     try{\n       await _engine.joinChannel('006a90dea913c844cd7bcada446242c6150IAA0Kk/v+DSMEdW7apteZTf19Fz2BUqa3+nMAj7HeO9KYwO7xC0AAAAAEACLgpZh2C8vYQEAAQDVLy9h',\n"
                },
                {
                    "date": 1641085795234,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -198,9 +198,9 @@\n     top: 0,\n     right: 0,\n     bottom: 0,\n     left: 0,\n-    position: 'absolute'\n+    position: 'absolute', backgroundColor: 'red'\n   },\n   localConnected: {\n     height: 200,\n     width: 150,\n"
                },
                {
                    "date": 1641085813997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -198,9 +198,11 @@\n     top: 0,\n     right: 0,\n     bottom: 0,\n     left: 0,\n-    position: 'absolute', backgroundColor: 'red'\n+    height: '100%',\n+    width: '100%',\n+    position: 'absolute',\n   },\n   localConnected: {\n     height: 200,\n     width: 150,\n"
                },
                {
                    "date": 1641085827176,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -198,10 +198,8 @@\n     top: 0,\n     right: 0,\n     bottom: 0,\n     left: 0,\n-    height: '100%',\n-    width: '100%',\n     position: 'absolute',\n   },\n   localConnected: {\n     height: 200,\n"
                },
                {
                    "date": 1641086066494,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n   const [speaker, setspeaker] = useState(false)\n   const [remoteid, setremoteid] = useState()\n   let _engine\n \n-  const _init = async () => {\n+  const _init = async (channel, token) => {\n     _engine = await RtcEngine.createWithContext(\n       new RtcEngineContext('a90dea913c844cd7bcada446242c6150')\n     )\n \n@@ -49,10 +49,13 @@\n     await _engine.startPreview()\n     await _engine.setChannelProfile(ChannelProfile.LiveBroadcasting)\n     await _engine.setClientRole(ClientRole.Broadcaster)\n     try{\n-      await _engine.joinChannel('006a90dea913c844cd7bcada446242c6150IAA0Kk/v+DSMEdW7apteZTf19Fz2BUqa3+nMAj7HeO9KYwO7xC0AAAAAEACLgpZh2C8vYQEAAQDVLy9h',\n-      'urgent', null, 0)\n+      // await _engine.joinChannel('006a90dea913c844cd7bcada446242c6150IAA0Kk/v+DSMEdW7apteZTf19Fz2BUqa3+nMAj7HeO9KYwO7xC0AAAAAEACLgpZh2C8vYQEAAQDVLy9h',\n+      // 'urgent', null, 0)\n+\n+      await _engine.joinChannel(token,\n+      channel, null, 0)\n     }catch(e){\n       console.log(e)\n     }\n   }\n@@ -138,9 +141,19 @@\n     }\n   }\n \n   useEffect(() => {\n-    _init()\n+    // _init()\n+    \n+    (async()=>{\n+      try{\n+        let res = await axios.get('https://api.clarondoc.com/urgent/token')\n+        _init(res.data.RTCChannel, res.data.RTCAccessToken)\n+      }catch(e){\n+        console.log(e)\n+      }\n+    })()\n+\n     return () => {\n       engine.destroy()\n     }\n   }, [])\n"
                },
                {
                    "date": 1641086089831,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -148,8 +148,9 @@\n       try{\n         let res = await axios.get('https://api.clarondoc.com/urgent/token')\n         _init(res.data.RTCChannel, res.data.RTCAccessToken)\n       }catch(e){\n+        console.log(aa)\n         console.log(e)\n       }\n     })()\n \n"
                },
                {
                    "date": 1641086098661,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -148,9 +148,9 @@\n       try{\n         let res = await axios.get('https://api.clarondoc.com/urgent/token')\n         _init(res.data.RTCChannel, res.data.RTCAccessToken)\n       }catch(e){\n-        console.log(aa)\n+        console.log('aa')\n         console.log(e)\n       }\n     })()\n \n"
                },
                {
                    "date": 1641086116943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import { Button, Icon, Layout, Text } from '@ui-kitten/components';\n import React, {useEffect, useState} from 'react';\n+import axios from 'axios';\n import {\n   SafeAreaView,\n   PermissionsAndroid,\n   StatusBar,\n"
                },
                {
                    "date": 1641086184842,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,8 +42,10 @@\n     )\n \n     setengine(_engine)\n \n+    requestCameraAndAudioPermission()\n+\n     _addListeners()\n \n     await _engine.enableVideo()\n     await _engine.enableLocalVideo(true)\n@@ -60,8 +62,25 @@\n       console.log(e)\n     }\n   }\n \n+  const requestCameraAndAudioPermission = async () =>{\n+    try {\n+        const granted = await PermissionsAndroid.requestMultiple([\n+            PermissionsAndroid.PERMISSIONS.RECORD_AUDIO,\n+        ])\n+        if (\n+            granted['android.permission.RECORD_AUDIO'] === PermissionsAndroid.RESULTS.GRANTED\n+        ) {\n+            console.log('You can use the mic')\n+        } else {\n+            console.log('Permission denied')\n+        }\n+    } catch (err) {\n+        console.warn(err)\n+    }\n+  }\n+\n   const _addListeners = () => {\n     _engine.addListener('JoinChannelSuccess', (channel, uid, elapsed) => {\n       console.info('JoinChannelSuccess', channel, uid)\n       setjoined(true)\n"
                },
                {
                    "date": 1641086290633,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,8 +71,9 @@\n         if (\n             granted['android.permission.RECORD_AUDIO'] === PermissionsAndroid.RESULTS.GRANTED\n         ) {\n             console.log('You can use the mic')\n+            console.log(granted)\n         } else {\n             console.log('Permission denied')\n         }\n     } catch (err) {\n"
                },
                {
                    "date": 1641086412931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,8 +66,9 @@\n   const requestCameraAndAudioPermission = async () =>{\n     try {\n         const granted = await PermissionsAndroid.requestMultiple([\n             PermissionsAndroid.PERMISSIONS.RECORD_AUDIO,\n+            PermissionsAndroid.PERMISSIONS.RECORD_VIDEO,\n         ])\n         if (\n             granted['android.permission.RECORD_AUDIO'] === PermissionsAndroid.RESULTS.GRANTED\n         ) {\n"
                },
                {
                    "date": 1641086482850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n   const requestCameraAndAudioPermission = async () =>{\n     try {\n         const granted = await PermissionsAndroid.requestMultiple([\n             PermissionsAndroid.PERMISSIONS.RECORD_AUDIO,\n-            PermissionsAndroid.PERMISSIONS.RECORD_VIDEO,\n+            PermissionsAndroid.PERMISSIONS.CAMERA,\n         ])\n         if (\n             granted['android.permission.RECORD_AUDIO'] === PermissionsAndroid.RESULTS.GRANTED\n         ) {\n"
                },
                {
                    "date": 1641086577132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n     _addListeners()\n \n     await _engine.enableVideo()\n     await _engine.enableLocalVideo(true)\n-    await _engine.startPreview()\n+    // await _engine.startPreview()\n     await _engine.setChannelProfile(ChannelProfile.LiveBroadcasting)\n     await _engine.setClientRole(ClientRole.Broadcaster)\n     try{\n       // await _engine.joinChannel('006a90dea913c844cd7bcada446242c6150IAA0Kk/v+DSMEdW7apteZTf19Fz2BUqa3+nMAj7HeO9KYwO7xC0AAAAAEACLgpZh2C8vYQEAAQDVLy9h',\n"
                },
                {
                    "date": 1641086597108,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,10 +47,10 @@\n \n     _addListeners()\n \n     await _engine.enableVideo()\n+    await _engine.startPreview()\n     await _engine.enableLocalVideo(true)\n-    // await _engine.startPreview()\n     await _engine.setChannelProfile(ChannelProfile.LiveBroadcasting)\n     await _engine.setClientRole(ClientRole.Broadcaster)\n     try{\n       // await _engine.joinChannel('006a90dea913c844cd7bcada446242c6150IAA0Kk/v+DSMEdW7apteZTf19Fz2BUqa3+nMAj7HeO9KYwO7xC0AAAAAEACLgpZh2C8vYQEAAQDVLy9h',\n"
                },
                {
                    "date": 1641086651450,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,8 +99,9 @@\n     })\n \n     _engine.addListener('UserJoined', (uid, elapsed) => {\n       console.info('UserJoined', uid, elapsed);\n+      await engine.stopPreview()\n       setremoteid(uid)\n     })\n \n     _engine?.addListener('UserOffline', (uid, reason) => {\n"
                },
                {
                    "date": 1641086657616,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,9 @@\n     })\n \n     _engine.addListener('UserJoined', (uid, elapsed) => {\n       console.info('UserJoined', uid, elapsed);\n-      await engine.stopPreview()\n+      engine.stopPreview()\n       setremoteid(uid)\n     })\n \n     _engine?.addListener('UserOffline', (uid, reason) => {\n"
                },
                {
                    "date": 1641086671501,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,9 @@\n     })\n \n     _engine.addListener('UserJoined', (uid, elapsed) => {\n       console.info('UserJoined', uid, elapsed);\n-      engine.stopPreview()\n+      // engine.stopPreview()\n       setremoteid(uid)\n     })\n \n     _engine?.addListener('UserOffline', (uid, reason) => {\n"
                },
                {
                    "date": 1641086855901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,9 @@\n \n const SpeakerIcon = (props)=><Icon {...props} name=\"volume-up-outline\"/>\n const EndIcon = (props)=><Icon {...props} name=\"close-outline\"/>\n const MuteIcon = (props)=><Icon {...props} name=\"mic-off-outline\"/>\n+const VideoIcon = (props)=><Icon {...props} name=\"mic-off-outline\"/>\n \n const VideoCall = ({navigation, route}) => {\n   const doctor_email = route.params.doctor_email;\n   const patient_email = route.params.patient_email;\n@@ -204,8 +205,9 @@\n         // </Layout>\n         <RtcLocalView.SurfaceView style={styles.localConnecting} />\n         }\n         <View style={{position: 'absolute', bottom: 35, left: 15, right: 15, alignItems: 'center', justifyContent: 'space-around', flexDirection: 'row'}}>\n+        <Button onPress={_switchMicrophone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={MuteIcon} appearance={muted ? 'filled' : 'outline'}></Button>\n           <Button onPress={_switchMicrophone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={MuteIcon} appearance={muted ? 'filled' : 'outline'}></Button>\n           <Button onPress={_leaveChannel} status={'danger'} style={{height: 75, width: 75, borderRadius: 75}} accessoryLeft={EndIcon} appearance={'filled'}></Button>\n           <Button onPress={_switchSpeakerphone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={SpeakerIcon} appearance={speaker ? 'filled' : 'outline'}></Button>\n         </View>\n"
                },
                {
                    "date": 1641086869496,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n \n const SpeakerIcon = (props)=><Icon {...props} name=\"volume-up-outline\"/>\n const EndIcon = (props)=><Icon {...props} name=\"close-outline\"/>\n const MuteIcon = (props)=><Icon {...props} name=\"mic-off-outline\"/>\n-const VideoIcon = (props)=><Icon {...props} name=\"mic-off-outline\"/>\n+const VideoIcon = (props)=><Icon {...props} name=\"video-off-outline\"/>\n \n const VideoCall = ({navigation, route}) => {\n   const doctor_email = route.params.doctor_email;\n   const patient_email = route.params.patient_email;\n@@ -205,9 +205,9 @@\n         // </Layout>\n         <RtcLocalView.SurfaceView style={styles.localConnecting} />\n         }\n         <View style={{position: 'absolute', bottom: 35, left: 15, right: 15, alignItems: 'center', justifyContent: 'space-around', flexDirection: 'row'}}>\n-        <Button onPress={_switchMicrophone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={MuteIcon} appearance={muted ? 'filled' : 'outline'}></Button>\n+        <Button onPress={_switchMicrophone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={VideoIcon} appearance={muted ? 'filled' : 'outline'}></Button>\n           <Button onPress={_switchMicrophone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={MuteIcon} appearance={muted ? 'filled' : 'outline'}></Button>\n           <Button onPress={_leaveChannel} status={'danger'} style={{height: 75, width: 75, borderRadius: 75}} accessoryLeft={EndIcon} appearance={'filled'}></Button>\n           <Button onPress={_switchSpeakerphone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={SpeakerIcon} appearance={speaker ? 'filled' : 'outline'}></Button>\n         </View>\n"
                },
                {
                    "date": 1641086907489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,8 +32,9 @@\n   const isDarkMode = useColorScheme() === 'dark';\n   const [joined, setjoined] = useState(false)\n   const [engine, setengine] = useState()\n   const [muted, setmuted] = useState(false)\n+  const [video, setvideo] = useState(true)\n   const [speaker, setspeaker] = useState(false)\n   const [remoteid, setremoteid] = useState()\n   let _engine\n \n@@ -205,9 +206,9 @@\n         // </Layout>\n         <RtcLocalView.SurfaceView style={styles.localConnecting} />\n         }\n         <View style={{position: 'absolute', bottom: 35, left: 15, right: 15, alignItems: 'center', justifyContent: 'space-around', flexDirection: 'row'}}>\n-        <Button onPress={_switchMicrophone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={VideoIcon} appearance={muted ? 'filled' : 'outline'}></Button>\n+        <Button onPress={_switchMicrophone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={VideoIcon} appearance={video ? 'filled' : 'outline'}></Button>\n           <Button onPress={_switchMicrophone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={MuteIcon} appearance={muted ? 'filled' : 'outline'}></Button>\n           <Button onPress={_leaveChannel} status={'danger'} style={{height: 75, width: 75, borderRadius: 75}} accessoryLeft={EndIcon} appearance={'filled'}></Button>\n           <Button onPress={_switchSpeakerphone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={SpeakerIcon} appearance={speaker ? 'filled' : 'outline'}></Button>\n         </View>\n"
                },
                {
                    "date": 1641086914806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n \n const SpeakerIcon = (props)=><Icon {...props} name=\"volume-up-outline\"/>\n const EndIcon = (props)=><Icon {...props} name=\"close-outline\"/>\n const MuteIcon = (props)=><Icon {...props} name=\"mic-off-outline\"/>\n-const VideoIcon = (props)=><Icon {...props} name=\"video-off-outline\"/>\n+const VideoIcon = (props)=><Icon {...props} name=\"video-on-outline\"/>\n \n const VideoCall = ({navigation, route}) => {\n   const doctor_email = route.params.doctor_email;\n   const patient_email = route.params.patient_email;\n"
                },
                {
                    "date": 1641086977696,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n \n const SpeakerIcon = (props)=><Icon {...props} name=\"volume-up-outline\"/>\n const EndIcon = (props)=><Icon {...props} name=\"close-outline\"/>\n const MuteIcon = (props)=><Icon {...props} name=\"mic-off-outline\"/>\n-const VideoIcon = (props)=><Icon {...props} name=\"video-on-outline\"/>\n+const VideoIcon = (props)=><Icon {...props} name=\"video-outline\"/>\n \n const VideoCall = ({navigation, route}) => {\n   const doctor_email = route.params.doctor_email;\n   const patient_email = route.params.patient_email;\n@@ -50,9 +50,9 @@\n     _addListeners()\n \n     await _engine.enableVideo()\n     await _engine.startPreview()\n-    await _engine.enableLocalVideo(true)\n+    // await _engine.enableLocalVideo(true)\n     await _engine.setChannelProfile(ChannelProfile.LiveBroadcasting)\n     await _engine.setClientRole(ClientRole.Broadcaster)\n     try{\n       // await _engine.joinChannel('006a90dea913c844cd7bcada446242c6150IAA0Kk/v+DSMEdW7apteZTf19Fz2BUqa3+nMAj7HeO9KYwO7xC0AAAAAEACLgpZh2C8vYQEAAQDVLy9h',\n"
                },
                {
                    "date": 1641086986533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n     _addListeners()\n \n     await _engine.enableVideo()\n     await _engine.startPreview()\n-    // await _engine.enableLocalVideo(true)\n+    await _engine.enableLocalVideo(false)\n     await _engine.setChannelProfile(ChannelProfile.LiveBroadcasting)\n     await _engine.setClientRole(ClientRole.Broadcaster)\n     try{\n       // await _engine.joinChannel('006a90dea913c844cd7bcada446242c6150IAA0Kk/v+DSMEdW7apteZTf19Fz2BUqa3+nMAj7HeO9KYwO7xC0AAAAAEACLgpZh2C8vYQEAAQDVLy9h',\n"
                },
                {
                    "date": 1641086999240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n     _addListeners()\n \n     await _engine.enableVideo()\n     await _engine.startPreview()\n-    await _engine.enableLocalVideo(false)\n+    await _engine.enableLocalVideo(true)\n     await _engine.setChannelProfile(ChannelProfile.LiveBroadcasting)\n     await _engine.setClientRole(ClientRole.Broadcaster)\n     try{\n       // await _engine.joinChannel('006a90dea913c844cd7bcada446242c6150IAA0Kk/v+DSMEdW7apteZTf19Fz2BUqa3+nMAj7HeO9KYwO7xC0AAAAAEACLgpZh2C8vYQEAAQDVLy9h',\n"
                },
                {
                    "date": 1641087023224,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,8 +51,9 @@\n \n     await _engine.enableVideo()\n     await _engine.startPreview()\n     await _engine.enableLocalVideo(true)\n+    await _engine.startPreview()\n     await _engine.setChannelProfile(ChannelProfile.LiveBroadcasting)\n     await _engine.setClientRole(ClientRole.Broadcaster)\n     try{\n       // await _engine.joinChannel('006a90dea913c844cd7bcada446242c6150IAA0Kk/v+DSMEdW7apteZTf19Fz2BUqa3+nMAj7HeO9KYwO7xC0AAAAAEACLgpZh2C8vYQEAAQDVLy9h',\n"
                },
                {
                    "date": 1641087140238,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -148,8 +148,17 @@\n     }\n     navigation.goBack()\n   }\n \n+  const _switchCamera =async()=>{\n+    try{\n+      await engine.enableLocalVideo(!video)\n+      setvideo(!video)\n+    }catch(e){\n+      console.log(e)\n+    }\n+  }\n+\n   const _switchMicrophone = async() => {\n     try{\n       await engine.enableLocalAudio(!muted)\n       setmuted(!muted)\n@@ -207,9 +216,9 @@\n         // </Layout>\n         <RtcLocalView.SurfaceView style={styles.localConnecting} />\n         }\n         <View style={{position: 'absolute', bottom: 35, left: 15, right: 15, alignItems: 'center', justifyContent: 'space-around', flexDirection: 'row'}}>\n-        <Button onPress={_switchMicrophone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={VideoIcon} appearance={video ? 'filled' : 'outline'}></Button>\n+        <Button onPress={_switchCamera} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={VideoIcon} appearance={video ? 'filled' : 'outline'}></Button>\n           <Button onPress={_switchMicrophone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={MuteIcon} appearance={muted ? 'filled' : 'outline'}></Button>\n           <Button onPress={_leaveChannel} status={'danger'} style={{height: 75, width: 75, borderRadius: 75}} accessoryLeft={EndIcon} appearance={'filled'}></Button>\n           <Button onPress={_switchSpeakerphone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={SpeakerIcon} appearance={speaker ? 'filled' : 'outline'}></Button>\n         </View>\n"
                },
                {
                    "date": 1641087205805,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -151,8 +151,9 @@\n \n   const _switchCamera =async()=>{\n     try{\n       await engine.enableLocalVideo(!video)\n+      await engine.disableVideo()\n       setvideo(!video)\n     }catch(e){\n       console.log(e)\n     }\n"
                },
                {
                    "date": 1641087223218,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -151,9 +151,9 @@\n \n   const _switchCamera =async()=>{\n     try{\n       await engine.enableLocalVideo(!video)\n-      await engine.disableVideo()\n+      await engine.enableVideo()\n       setvideo(!video)\n     }catch(e){\n       console.log(e)\n     }\n"
                },
                {
                    "date": 1641087230623,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -151,9 +151,8 @@\n \n   const _switchCamera =async()=>{\n     try{\n       await engine.enableLocalVideo(!video)\n-      await engine.enableVideo()\n       setvideo(!video)\n     }catch(e){\n       console.log(e)\n     }\n"
                },
                {
                    "date": 1641087272646,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,8 @@\n \n     requestCameraAndAudioPermission()\n \n     _addListeners()\n-\n     await _engine.enableVideo()\n     await _engine.startPreview()\n     await _engine.enableLocalVideo(true)\n     await _engine.startPreview()\n"
                },
                {
                    "date": 1641087288677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -215,9 +215,10 @@\n         // </Layout>\n         <RtcLocalView.SurfaceView style={styles.localConnecting} />\n         }\n         <View style={{position: 'absolute', bottom: 35, left: 15, right: 15, alignItems: 'center', justifyContent: 'space-around', flexDirection: 'row'}}>\n-        <Button onPress={_switchCamera} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={VideoIcon} appearance={video ? 'filled' : 'outline'}></Button>\n+          <Button onPress={_switchCamera} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={VideoIcon} appearance={video ? 'filled' : 'outline'}></Button>\n+          <Button onPress={_switchCamera} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={VideoIcon} appearance={video ? 'filled' : 'outline'}></Button>\n           <Button onPress={_switchMicrophone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={MuteIcon} appearance={muted ? 'filled' : 'outline'}></Button>\n           <Button onPress={_leaveChannel} status={'danger'} style={{height: 75, width: 75, borderRadius: 75}} accessoryLeft={EndIcon} appearance={'filled'}></Button>\n           <Button onPress={_switchSpeakerphone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={SpeakerIcon} appearance={speaker ? 'filled' : 'outline'}></Button>\n         </View>\n"
                },
                {
                    "date": 1641087305572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,9 +216,8 @@\n         <RtcLocalView.SurfaceView style={styles.localConnecting} />\n         }\n         <View style={{position: 'absolute', bottom: 35, left: 15, right: 15, alignItems: 'center', justifyContent: 'space-around', flexDirection: 'row'}}>\n           <Button onPress={_switchCamera} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={VideoIcon} appearance={video ? 'filled' : 'outline'}></Button>\n-          <Button onPress={_switchCamera} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={VideoIcon} appearance={video ? 'filled' : 'outline'}></Button>\n           <Button onPress={_switchMicrophone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={MuteIcon} appearance={muted ? 'filled' : 'outline'}></Button>\n           <Button onPress={_leaveChannel} status={'danger'} style={{height: 75, width: 75, borderRadius: 75}} accessoryLeft={EndIcon} appearance={'filled'}></Button>\n           <Button onPress={_switchSpeakerphone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={SpeakerIcon} appearance={speaker ? 'filled' : 'outline'}></Button>\n         </View>\n"
                },
                {
                    "date": 1641087842347,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import { Button, Icon, Layout, Text } from '@ui-kitten/components';\n import React, {useEffect, useState} from 'react';\n import axios from 'axios';\n+import AsyncStorage from '@react-native-async-storage/async-storage';\n import {\n   SafeAreaView,\n   PermissionsAndroid,\n   StatusBar,\n@@ -181,8 +182,22 @@\n     (async()=>{\n       try{\n         let res = await axios.get('https://api.clarondoc.com/urgent/token')\n         _init(res.data.RTCChannel, res.data.RTCAccessToken)\n+\n+        const user = JSON.parse(await AsyncStorage.getItem('user'));\n+        // console.log(user.firstname)\n+\n+        let doc = await firebase.firestore().collection('normal_calls').doc(patient_email).set({data: {\n+          time: new Date(),\n+          patient: patient_email,\n+          doctor: doctor_email,\n+          caller: `${user.firstname} ${user.lastname}`,\n+          status: 'started',\n+          channel: res.data.RTCChannel,\n+          token: res.data.RTCAccessToken\n+        }})\n+\n       }catch(e){\n         console.log('aa')\n         console.log(e)\n       }\n"
                },
                {
                    "date": 1641087964799,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -192,8 +192,9 @@\n           patient: patient_email,\n           doctor: doctor_email,\n           caller: `${user.firstname} ${user.lastname}`,\n           status: 'started',\n+          end_now: 'false',\n           channel: res.data.RTCChannel,\n           token: res.data.RTCAccessToken\n         }})\n \n"
                },
                {
                    "date": 1641128195200,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -228,9 +228,9 @@\n         :\n         // <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n         //   <Text category={'h5'}>Connecting...</Text>\n         // </Layout>\n-        <RtcLocalView.SurfaceView style={styles.localConnecting} />\n+        // <RtcLocalView.SurfaceView style={styles.localConnecting} />\n         }\n         <View style={{position: 'absolute', bottom: 35, left: 15, right: 15, alignItems: 'center', justifyContent: 'space-around', flexDirection: 'row'}}>\n           <Button onPress={_switchCamera} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={VideoIcon} appearance={video ? 'filled' : 'outline'}></Button>\n           <Button onPress={_switchMicrophone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={MuteIcon} appearance={muted ? 'filled' : 'outline'}></Button>\n"
                },
                {
                    "date": 1641128199287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -228,9 +228,9 @@\n         :\n         // <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n         //   <Text category={'h5'}>Connecting...</Text>\n         // </Layout>\n-        // <RtcLocalView.SurfaceView style={styles.localConnecting} />\n+        <RtcLocalView.SurfaceView style={styles.localConnecting} />\n         }\n         <View style={{position: 'absolute', bottom: 35, left: 15, right: 15, alignItems: 'center', justifyContent: 'space-around', flexDirection: 'row'}}>\n           <Button onPress={_switchCamera} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={VideoIcon} appearance={video ? 'filled' : 'outline'}></Button>\n           <Button onPress={_switchMicrophone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={MuteIcon} appearance={muted ? 'filled' : 'outline'}></Button>\n"
                },
                {
                    "date": 1641128236707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -228,9 +228,10 @@\n         :\n         // <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n         //   <Text category={'h5'}>Connecting...</Text>\n         // </Layout>\n-        <RtcLocalView.SurfaceView style={styles.localConnecting} />\n+        // <RtcLocalView.SurfaceView style={styles.localConnecting} />\n+        <Text />\n         }\n         <View style={{position: 'absolute', bottom: 35, left: 15, right: 15, alignItems: 'center', justifyContent: 'space-around', flexDirection: 'row'}}>\n           <Button onPress={_switchCamera} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={VideoIcon} appearance={video ? 'filled' : 'outline'}></Button>\n           <Button onPress={_switchMicrophone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={MuteIcon} appearance={muted ? 'filled' : 'outline'}></Button>\n"
                },
                {
                    "date": 1641128282400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -219,9 +219,9 @@\n           <RtcLocalView.SurfaceView style={remoteid == null ? styles.localConnecting : styles.localConnected} />\n \n           {remoteid != null ?\n           <RtcRemoteView.SurfaceView\n-            style={{flex: 1}}\n+            style={styles.localConnecting}\n             uid={remoteid}\n             zOrderMediaOverlay={true}\n           /> : <Text category={'h5'}>Connecting...</Text> }\n         </Layout>\n"
                },
                {
                    "date": 1641128302850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,281 @@\n+import { Button, Icon, Layout, Text } from '@ui-kitten/components';\n+import React, {useEffect, useState} from 'react';\n+import axios from 'axios';\n+import AsyncStorage from '@react-native-async-storage/async-storage';\n+import {\n+  SafeAreaView,\n+  PermissionsAndroid,\n+  StatusBar,\n+  StyleSheet,\n+  useColorScheme,\n+  Platform,\n+  View,\n+  TouchableOpacity\n+} from 'react-native';\n+import RtcEngine, {\n+  ChannelProfile,\n+  ClientRole,\n+  RtcEngineContext,\n+  RtcLocalView,\n+  RtcRemoteView\n+} from 'react-native-agora';\n+import firebase from 'firebase';\n+\n+const SpeakerIcon = (props)=><Icon {...props} name=\"volume-up-outline\"/>\n+const EndIcon = (props)=><Icon {...props} name=\"close-outline\"/>\n+const MuteIcon = (props)=><Icon {...props} name=\"mic-off-outline\"/>\n+const VideoIcon = (props)=><Icon {...props} name=\"video-outline\"/>\n+\n+const VideoCall = ({navigation, route}) => {\n+  const doctor_email = route.params.doctor_email;\n+  const patient_email = route.params.patient_email;\n+\n+  const isDarkMode = useColorScheme() === 'dark';\n+  const [joined, setjoined] = useState(false)\n+  const [engine, setengine] = useState()\n+  const [muted, setmuted] = useState(false)\n+  const [video, setvideo] = useState(true)\n+  const [speaker, setspeaker] = useState(false)\n+  const [remoteid, setremoteid] = useState()\n+  let _engine\n+\n+  const _init = async (channel, token) => {\n+    _engine = await RtcEngine.createWithContext(\n+      new RtcEngineContext('a90dea913c844cd7bcada446242c6150')\n+    )\n+\n+    setengine(_engine)\n+\n+    requestCameraAndAudioPermission()\n+\n+    _addListeners()\n+    await _engine.enableVideo()\n+    await _engine.startPreview()\n+    await _engine.enableLocalVideo(true)\n+    await _engine.startPreview()\n+    await _engine.setChannelProfile(ChannelProfile.LiveBroadcasting)\n+    await _engine.setClientRole(ClientRole.Broadcaster)\n+    try{\n+      // await _engine.joinChannel('006a90dea913c844cd7bcada446242c6150IAA0Kk/v+DSMEdW7apteZTf19Fz2BUqa3+nMAj7HeO9KYwO7xC0AAAAAEACLgpZh2C8vYQEAAQDVLy9h',\n+      // 'urgent', null, 0)\n+\n+      await _engine.joinChannel(token,\n+      channel, null, 0)\n+    }catch(e){\n+      console.log(e)\n+    }\n+  }\n+\n+  const requestCameraAndAudioPermission = async () =>{\n+    try {\n+        const granted = await PermissionsAndroid.requestMultiple([\n+            PermissionsAndroid.PERMISSIONS.RECORD_AUDIO,\n+            PermissionsAndroid.PERMISSIONS.CAMERA,\n+        ])\n+        if (\n+            granted['android.permission.RECORD_AUDIO'] === PermissionsAndroid.RESULTS.GRANTED\n+        ) {\n+            console.log('You can use the mic')\n+            console.log(granted)\n+        } else {\n+            console.log('Permission denied')\n+        }\n+    } catch (err) {\n+        console.warn(err)\n+    }\n+  }\n+\n+  const _addListeners = () => {\n+    _engine.addListener('JoinChannelSuccess', (channel, uid, elapsed) => {\n+      console.info('JoinChannelSuccess', channel, uid)\n+      setjoined(true)\n+    })\n+\n+    _engine.addListener('LeaveChannel', (stats) => {\n+      console.info('LeaveChannel', stats)\n+      setjoined(false)\n+      try{\n+        navigation.goBack()\n+      }catch(e){\n+\n+      }\n+    })\n+\n+    _engine.addListener('UserJoined', (uid, elapsed) => {\n+      console.info('UserJoined', uid, elapsed);\n+      // engine.stopPreview()\n+      setremoteid(uid)\n+    })\n+\n+    _engine?.addListener('UserOffline', (uid, reason) => {\n+      console.info('UserOffline', uid, reason);\n+      setremoteid(null)\n+      try{\n+        navigation.goBack()\n+      }catch(e){\n+\n+      }\n+    })\n+\n+    // _engine.addListener('JoinChannelError', (e)=>{\n+    //   console.log(e)\n+    // })\n+  }\n+\n+  const _onChangeRecordingVolume = (value) => {\n+    _engine.adjustRecordingSignalVolume(value * 400)\n+  }\n+\n+  const _onChangePlaybackVolume = (value) => {\n+    _engine.adjustPlaybackSignalVolume(value * 400)\n+  }\n+\n+  const _toggleInEarMonitoring = (isEnabled) => {\n+    _engine.enableInEarMonitoring(isEnabled)\n+  }\n+\n+  const _onChangeInEarMonitoringVolume = (value) => {\n+    _engine.setInEarMonitoringVolume(value * 400)\n+  }\n+\n+  const _leaveChannel = async () => {\n+    try{\n+      if(_engine !=null){\n+        await _engine.leaveChannel()\n+      }\n+    }catch(e){\n+      console.log('Leave Error: ', e)\n+    }\n+    navigation.goBack()\n+  }\n+\n+  const _switchCamera =async()=>{\n+    try{\n+      await engine.enableLocalVideo(!video)\n+      setvideo(!video)\n+    }catch(e){\n+      console.log(e)\n+    }\n+  }\n+\n+  const _switchMicrophone = async() => {\n+    try{\n+      await engine.enableLocalAudio(!muted)\n+      setmuted(!muted)\n+    }catch(e){\n+      console.log(e)\n+    }\n+  };\n+\n+  const _switchSpeakerphone = () => {\n+    try{\n+      engine.setEnableSpeakerphone(!speaker)\n+      setspeaker(!speaker)\n+    }catch(e){\n+      console.log(e)\n+    }\n+  }\n+\n+  useEffect(() => {\n+    // _init()\n+    \n+    (async()=>{\n+      try{\n+        let res = await axios.get('https://api.clarondoc.com/urgent/token')\n+        _init(res.data.RTCChannel, res.data.RTCAccessToken)\n+\n+        const user = JSON.parse(await AsyncStorage.getItem('user'));\n+        // console.log(user.firstname)\n+\n+        let doc = await firebase.firestore().collection('normal_calls').doc(patient_email).set({data: {\n+          time: new Date(),\n+          patient: patient_email,\n+          doctor: doctor_email,\n+          caller: `${user.firstname} ${user.lastname}`,\n+          status: 'started',\n+          end_now: 'false',\n+          channel: res.data.RTCChannel,\n+          token: res.data.RTCAccessToken\n+        }})\n+\n+      }catch(e){\n+        console.log('aa')\n+        console.log(e)\n+      }\n+    })()\n+\n+    return () => {\n+      engine.destroy()\n+    }\n+  }, [])\n+\n+  return (\n+    <Layout style={{flex: 1}}>\n+      <SafeAreaView style={{flex: 1}}>\n+        <StatusBar barStyle={isDarkMode ? 'light-content' : 'dark-content'} />\n+\n+        { joined ?\n+        <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n+          <RtcLocalView.SurfaceView style={remoteid == null ? styles.localConnecting : styles.localConnected} />\n+\n+          {remoteid != null ?\n+          <RtcRemoteView.SurfaceView\n+            style={{flex: 1}}\n+            uid={remoteid}\n+            zOrderMediaOverlay={true}\n+          /> : <Text category={'h5'}>Connecting...</Text> }\n+        </Layout>\n+        :\n+        // <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n+        //   <Text category={'h5'}>Connecting...</Text>\n+        // </Layout>\n+        // <RtcLocalView.SurfaceView style={styles.localConnecting} />\n+        <Text />\n+        }\n+        <View style={{position: 'absolute', bottom: 35, left: 15, right: 15, alignItems: 'center', justifyContent: 'space-around', flexDirection: 'row'}}>\n+          <Button onPress={_switchCamera} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={VideoIcon} appearance={video ? 'filled' : 'outline'}></Button>\n+          <Button onPress={_switchMicrophone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={MuteIcon} appearance={muted ? 'filled' : 'outline'}></Button>\n+          <Button onPress={_leaveChannel} status={'danger'} style={{height: 75, width: 75, borderRadius: 75}} accessoryLeft={EndIcon} appearance={'filled'}></Button>\n+          <Button onPress={_switchSpeakerphone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={SpeakerIcon} appearance={speaker ? 'filled' : 'outline'}></Button>\n+        </View>\n+      </SafeAreaView>\n+    </Layout>\n+  );\n+};\n+\n+const styles = StyleSheet.create({\n+  sectionContainer: {\n+    marginTop: 32,\n+    paddingHorizontal: 24,\n+  },\n+  sectionTitle: {\n+    fontSize: 24,\n+    fontWeight: '600',\n+  },\n+  sectionDescription: {\n+    marginTop: 8,\n+    fontSize: 18,\n+    fontWeight: '400',\n+  },\n+  highlight: {\n+    fontWeight: '700',\n+  },\n+  localConnecting: {\n+    top: 0,\n+    right: 0,\n+    bottom: 0,\n+    left: 0,\n+    position: 'absolute',\n+  },\n+  localConnected: {\n+    height: 200,\n+    width: 150,\n+    borderRadius: 5,\n+    backgroundColor: '#141414',\n+    position: 'absolute',\n+    top: 50,\n+    right: 15\n+  }\n+});\n+\n+export default VideoCall;\n"
                },
                {
                    "date": 1641128319985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,13 +218,9 @@\n         <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n           <RtcLocalView.SurfaceView style={remoteid == null ? styles.localConnecting : styles.localConnected} />\n \n           {remoteid != null ?\n-          <RtcRemoteView.SurfaceView\n-            style={{flex: 1}}\n-            uid={remoteid}\n-            zOrderMediaOverlay={true}\n-          /> : <Text category={'h5'}>Connecting...</Text> }\n+          <Text></Text> : <Text category={'h5'}>Connecting...</Text> }\n         </Layout>\n         :\n         // <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n         //   <Text category={'h5'}>Connecting...</Text>\n@@ -278,285 +274,4 @@\n   }\n });\n \n export default VideoCall;\n-import { Button, Icon, Layout, Text } from '@ui-kitten/components';\n-import React, {useEffect, useState} from 'react';\n-import axios from 'axios';\n-import AsyncStorage from '@react-native-async-storage/async-storage';\n-import {\n-  SafeAreaView,\n-  PermissionsAndroid,\n-  StatusBar,\n-  StyleSheet,\n-  useColorScheme,\n-  Platform,\n-  View,\n-  TouchableOpacity\n-} from 'react-native';\n-import RtcEngine, {\n-  ChannelProfile,\n-  ClientRole,\n-  RtcEngineContext,\n-  RtcLocalView,\n-  RtcRemoteView\n-} from 'react-native-agora';\n-import firebase from 'firebase';\n-\n-const SpeakerIcon = (props)=><Icon {...props} name=\"volume-up-outline\"/>\n-const EndIcon = (props)=><Icon {...props} name=\"close-outline\"/>\n-const MuteIcon = (props)=><Icon {...props} name=\"mic-off-outline\"/>\n-const VideoIcon = (props)=><Icon {...props} name=\"video-outline\"/>\n-\n-const VideoCall = ({navigation, route}) => {\n-  const doctor_email = route.params.doctor_email;\n-  const patient_email = route.params.patient_email;\n-\n-  const isDarkMode = useColorScheme() === 'dark';\n-  const [joined, setjoined] = useState(false)\n-  const [engine, setengine] = useState()\n-  const [muted, setmuted] = useState(false)\n-  const [video, setvideo] = useState(true)\n-  const [speaker, setspeaker] = useState(false)\n-  const [remoteid, setremoteid] = useState()\n-  let _engine\n-\n-  const _init = async (channel, token) => {\n-    _engine = await RtcEngine.createWithContext(\n-      new RtcEngineContext('a90dea913c844cd7bcada446242c6150')\n-    )\n-\n-    setengine(_engine)\n-\n-    requestCameraAndAudioPermission()\n-\n-    _addListeners()\n-    await _engine.enableVideo()\n-    await _engine.startPreview()\n-    await _engine.enableLocalVideo(true)\n-    await _engine.startPreview()\n-    await _engine.setChannelProfile(ChannelProfile.LiveBroadcasting)\n-    await _engine.setClientRole(ClientRole.Broadcaster)\n-    try{\n-      // await _engine.joinChannel('006a90dea913c844cd7bcada446242c6150IAA0Kk/v+DSMEdW7apteZTf19Fz2BUqa3+nMAj7HeO9KYwO7xC0AAAAAEACLgpZh2C8vYQEAAQDVLy9h',\n-      // 'urgent', null, 0)\n-\n-      await _engine.joinChannel(token,\n-      channel, null, 0)\n-    }catch(e){\n-      console.log(e)\n-    }\n-  }\n-\n-  const requestCameraAndAudioPermission = async () =>{\n-    try {\n-        const granted = await PermissionsAndroid.requestMultiple([\n-            PermissionsAndroid.PERMISSIONS.RECORD_AUDIO,\n-            PermissionsAndroid.PERMISSIONS.CAMERA,\n-        ])\n-        if (\n-            granted['android.permission.RECORD_AUDIO'] === PermissionsAndroid.RESULTS.GRANTED\n-        ) {\n-            console.log('You can use the mic')\n-            console.log(granted)\n-        } else {\n-            console.log('Permission denied')\n-        }\n-    } catch (err) {\n-        console.warn(err)\n-    }\n-  }\n-\n-  const _addListeners = () => {\n-    _engine.addListener('JoinChannelSuccess', (channel, uid, elapsed) => {\n-      console.info('JoinChannelSuccess', channel, uid)\n-      setjoined(true)\n-    })\n-\n-    _engine.addListener('LeaveChannel', (stats) => {\n-      console.info('LeaveChannel', stats)\n-      setjoined(false)\n-      try{\n-        navigation.goBack()\n-      }catch(e){\n-\n-      }\n-    })\n-\n-    _engine.addListener('UserJoined', (uid, elapsed) => {\n-      console.info('UserJoined', uid, elapsed);\n-      // engine.stopPreview()\n-      setremoteid(uid)\n-    })\n-\n-    _engine?.addListener('UserOffline', (uid, reason) => {\n-      console.info('UserOffline', uid, reason);\n-      setremoteid(null)\n-      try{\n-        navigation.goBack()\n-      }catch(e){\n-\n-      }\n-    })\n-\n-    // _engine.addListener('JoinChannelError', (e)=>{\n-    //   console.log(e)\n-    // })\n-  }\n-\n-  const _onChangeRecordingVolume = (value) => {\n-    _engine.adjustRecordingSignalVolume(value * 400)\n-  }\n-\n-  const _onChangePlaybackVolume = (value) => {\n-    _engine.adjustPlaybackSignalVolume(value * 400)\n-  }\n-\n-  const _toggleInEarMonitoring = (isEnabled) => {\n-    _engine.enableInEarMonitoring(isEnabled)\n-  }\n-\n-  const _onChangeInEarMonitoringVolume = (value) => {\n-    _engine.setInEarMonitoringVolume(value * 400)\n-  }\n-\n-  const _leaveChannel = async () => {\n-    try{\n-      if(_engine !=null){\n-        await _engine.leaveChannel()\n-      }\n-    }catch(e){\n-      console.log('Leave Error: ', e)\n-    }\n-    navigation.goBack()\n-  }\n-\n-  const _switchCamera =async()=>{\n-    try{\n-      await engine.enableLocalVideo(!video)\n-      setvideo(!video)\n-    }catch(e){\n-      console.log(e)\n-    }\n-  }\n-\n-  const _switchMicrophone = async() => {\n-    try{\n-      await engine.enableLocalAudio(!muted)\n-      setmuted(!muted)\n-    }catch(e){\n-      console.log(e)\n-    }\n-  };\n-\n-  const _switchSpeakerphone = () => {\n-    try{\n-      engine.setEnableSpeakerphone(!speaker)\n-      setspeaker(!speaker)\n-    }catch(e){\n-      console.log(e)\n-    }\n-  }\n-\n-  useEffect(() => {\n-    // _init()\n-    \n-    (async()=>{\n-      try{\n-        let res = await axios.get('https://api.clarondoc.com/urgent/token')\n-        _init(res.data.RTCChannel, res.data.RTCAccessToken)\n-\n-        const user = JSON.parse(await AsyncStorage.getItem('user'));\n-        // console.log(user.firstname)\n-\n-        let doc = await firebase.firestore().collection('normal_calls').doc(patient_email).set({data: {\n-          time: new Date(),\n-          patient: patient_email,\n-          doctor: doctor_email,\n-          caller: `${user.firstname} ${user.lastname}`,\n-          status: 'started',\n-          end_now: 'false',\n-          channel: res.data.RTCChannel,\n-          token: res.data.RTCAccessToken\n-        }})\n-\n-      }catch(e){\n-        console.log('aa')\n-        console.log(e)\n-      }\n-    })()\n-\n-    return () => {\n-      engine.destroy()\n-    }\n-  }, [])\n-\n-  return (\n-    <Layout style={{flex: 1}}>\n-      <SafeAreaView style={{flex: 1}}>\n-        <StatusBar barStyle={isDarkMode ? 'light-content' : 'dark-content'} />\n-\n-        { joined ?\n-        <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n-          <RtcLocalView.SurfaceView style={remoteid == null ? styles.localConnecting : styles.localConnected} />\n-\n-          {remoteid != null ?\n-          <RtcRemoteView.SurfaceView\n-            style={styles.localConnecting}\n-            uid={remoteid}\n-            zOrderMediaOverlay={true}\n-          /> : <Text category={'h5'}>Connecting...</Text> }\n-        </Layout>\n-        :\n-        // <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n-        //   <Text category={'h5'}>Connecting...</Text>\n-        // </Layout>\n-        // <RtcLocalView.SurfaceView style={styles.localConnecting} />\n-        <Text />\n-        }\n-        <View style={{position: 'absolute', bottom: 35, left: 15, right: 15, alignItems: 'center', justifyContent: 'space-around', flexDirection: 'row'}}>\n-          <Button onPress={_switchCamera} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={VideoIcon} appearance={video ? 'filled' : 'outline'}></Button>\n-          <Button onPress={_switchMicrophone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={MuteIcon} appearance={muted ? 'filled' : 'outline'}></Button>\n-          <Button onPress={_leaveChannel} status={'danger'} style={{height: 75, width: 75, borderRadius: 75}} accessoryLeft={EndIcon} appearance={'filled'}></Button>\n-          <Button onPress={_switchSpeakerphone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={SpeakerIcon} appearance={speaker ? 'filled' : 'outline'}></Button>\n-        </View>\n-      </SafeAreaView>\n-    </Layout>\n-  );\n-};\n-\n-const styles = StyleSheet.create({\n-  sectionContainer: {\n-    marginTop: 32,\n-    paddingHorizontal: 24,\n-  },\n-  sectionTitle: {\n-    fontSize: 24,\n-    fontWeight: '600',\n-  },\n-  sectionDescription: {\n-    marginTop: 8,\n-    fontSize: 18,\n-    fontWeight: '400',\n-  },\n-  highlight: {\n-    fontWeight: '700',\n-  },\n-  localConnecting: {\n-    top: 0,\n-    right: 0,\n-    bottom: 0,\n-    left: 0,\n-    position: 'absolute',\n-  },\n-  localConnected: {\n-    height: 200,\n-    width: 150,\n-    borderRadius: 5,\n-    backgroundColor: '#141414',\n-    position: 'absolute',\n-    top: 50,\n-    right: 15\n-  }\n-});\n-\n-export default VideoCall;\n"
                },
                {
                    "date": 1641128389451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,9 +218,13 @@\n         <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n           <RtcLocalView.SurfaceView style={remoteid == null ? styles.localConnecting : styles.localConnected} />\n \n           {remoteid != null ?\n-          <Text></Text> : <Text category={'h5'}>Connecting...</Text> }\n+          <RtcRemoteView.SurfaceView\n+            style={{flex: 1, position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, zIndex: -1}}\n+            uid={remoteid}\n+            zOrderMediaOverlay={true}\n+          /> : <Text category={'h5'}>Connecting...</Text> }\n         </Layout>\n         :\n         // <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n         //   <Text category={'h5'}>Connecting...</Text>\n"
                },
                {
                    "date": 1641128404720,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -221,9 +221,9 @@\n           {remoteid != null ?\n           <RtcRemoteView.SurfaceView\n             style={{flex: 1, position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, zIndex: -1}}\n             uid={remoteid}\n-            zOrderMediaOverlay={true}\n+            zOrderMediaOverlay={false}\n           /> : <Text category={'h5'}>Connecting...</Text> }\n         </Layout>\n         :\n         // <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n"
                },
                {
                    "date": 1641128427682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -265,8 +265,9 @@\n     right: 0,\n     bottom: 0,\n     left: 0,\n     position: 'absolute',\n+    zIndex: 99\n   },\n   localConnected: {\n     height: 200,\n     width: 150,\n"
                },
                {
                    "date": 1641128443258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -219,9 +219,9 @@\n           <RtcLocalView.SurfaceView style={remoteid == null ? styles.localConnecting : styles.localConnected} />\n \n           {remoteid != null ?\n           <RtcRemoteView.SurfaceView\n-            style={{flex: 1, position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, zIndex: -1}}\n+            style={{position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, zIndex: -1}}\n             uid={remoteid}\n             zOrderMediaOverlay={false}\n           /> : <Text category={'h5'}>Connecting...</Text> }\n         </Layout>\n"
                },
                {
                    "date": 1641128491964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -215,16 +215,17 @@\n         <StatusBar barStyle={isDarkMode ? 'light-content' : 'dark-content'} />\n \n         { joined ?\n         <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n-          <RtcLocalView.SurfaceView style={remoteid == null ? styles.localConnecting : styles.localConnected} />\n-\n+          \n           {remoteid != null ?\n           <RtcRemoteView.SurfaceView\n-            style={{position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, zIndex: -1}}\n+            style={{flex: 1, position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, zIndex: -1}}\n             uid={remoteid}\n             zOrderMediaOverlay={false}\n           /> : <Text category={'h5'}>Connecting...</Text> }\n+          \n+          <RtcLocalView.SurfaceView style={remoteid == null ? styles.localConnecting : styles.localConnected} />\n         </Layout>\n         :\n         // <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n         //   <Text category={'h5'}>Connecting...</Text>\n"
                },
                {
                    "date": 1641129158066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -229,10 +229,10 @@\n         :\n         // <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n         //   <Text category={'h5'}>Connecting...</Text>\n         // </Layout>\n-        // <RtcLocalView.SurfaceView style={styles.localConnecting} />\n-        <Text />\n+        <RtcLocalView.SurfaceView style={styles.localConnecting} />\n+        // <Text />\n         }\n         <View style={{position: 'absolute', bottom: 35, left: 15, right: 15, alignItems: 'center', justifyContent: 'space-around', flexDirection: 'row'}}>\n           <Button onPress={_switchCamera} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={VideoIcon} appearance={video ? 'filled' : 'outline'}></Button>\n           <Button onPress={_switchMicrophone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={MuteIcon} appearance={muted ? 'filled' : 'outline'}></Button>\n"
                },
                {
                    "date": 1641129255120,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -266,18 +266,19 @@\n     right: 0,\n     bottom: 0,\n     left: 0,\n     position: 'absolute',\n-    zIndex: 99\n+    zIndex: -99\n   },\n   localConnected: {\n     height: 200,\n     width: 150,\n     borderRadius: 5,\n     backgroundColor: '#141414',\n     position: 'absolute',\n     top: 50,\n-    right: 15\n+    right: 15,\n+    zIndex: 99\n   }\n });\n \n export default VideoCall;\n"
                },
                {
                    "date": 1641129294182,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,283 @@\n+import { Button, Icon, Layout, Text } from '@ui-kitten/components';\n+import React, {useEffect, useState} from 'react';\n+import axios from 'axios';\n+import AsyncStorage from '@react-native-async-storage/async-storage';\n+import {\n+  SafeAreaView,\n+  PermissionsAndroid,\n+  StatusBar,\n+  StyleSheet,\n+  useColorScheme,\n+  Platform,\n+  View,\n+  TouchableOpacity\n+} from 'react-native';\n+import RtcEngine, {\n+  ChannelProfile,\n+  ClientRole,\n+  RtcEngineContext,\n+  RtcLocalView,\n+  RtcRemoteView\n+} from 'react-native-agora';\n+import firebase from 'firebase';\n+\n+const SpeakerIcon = (props)=><Icon {...props} name=\"volume-up-outline\"/>\n+const EndIcon = (props)=><Icon {...props} name=\"close-outline\"/>\n+const MuteIcon = (props)=><Icon {...props} name=\"mic-off-outline\"/>\n+const VideoIcon = (props)=><Icon {...props} name=\"video-outline\"/>\n+\n+const VideoCall = ({navigation, route}) => {\n+  const doctor_email = route.params.doctor_email;\n+  const patient_email = route.params.patient_email;\n+\n+  const isDarkMode = useColorScheme() === 'dark';\n+  const [joined, setjoined] = useState(false)\n+  const [engine, setengine] = useState()\n+  const [muted, setmuted] = useState(false)\n+  const [video, setvideo] = useState(true)\n+  const [speaker, setspeaker] = useState(false)\n+  const [remoteid, setremoteid] = useState()\n+  let _engine\n+\n+  const _init = async (channel, token) => {\n+    _engine = await RtcEngine.createWithContext(\n+      new RtcEngineContext('a90dea913c844cd7bcada446242c6150')\n+    )\n+\n+    setengine(_engine)\n+\n+    requestCameraAndAudioPermission()\n+\n+    _addListeners()\n+    await _engine.enableVideo()\n+    await _engine.startPreview()\n+    await _engine.enableLocalVideo(true)\n+    await _engine.startPreview()\n+    await _engine.setChannelProfile(ChannelProfile.LiveBroadcasting)\n+    await _engine.setClientRole(ClientRole.Broadcaster)\n+    try{\n+      // await _engine.joinChannel('006a90dea913c844cd7bcada446242c6150IAA0Kk/v+DSMEdW7apteZTf19Fz2BUqa3+nMAj7HeO9KYwO7xC0AAAAAEACLgpZh2C8vYQEAAQDVLy9h',\n+      // 'urgent', null, 0)\n+\n+      await _engine.joinChannel(token,\n+      channel, null, 0)\n+    }catch(e){\n+      console.log(e)\n+    }\n+  }\n+\n+  const requestCameraAndAudioPermission = async () =>{\n+    try {\n+        const granted = await PermissionsAndroid.requestMultiple([\n+            PermissionsAndroid.PERMISSIONS.RECORD_AUDIO,\n+            PermissionsAndroid.PERMISSIONS.CAMERA,\n+        ])\n+        if (\n+            granted['android.permission.RECORD_AUDIO'] === PermissionsAndroid.RESULTS.GRANTED\n+        ) {\n+            console.log('You can use the mic')\n+            console.log(granted)\n+        } else {\n+            console.log('Permission denied')\n+        }\n+    } catch (err) {\n+        console.warn(err)\n+    }\n+  }\n+\n+  const _addListeners = () => {\n+    _engine.addListener('JoinChannelSuccess', (channel, uid, elapsed) => {\n+      console.info('JoinChannelSuccess', channel, uid)\n+      setjoined(true)\n+    })\n+\n+    _engine.addListener('LeaveChannel', (stats) => {\n+      console.info('LeaveChannel', stats)\n+      setjoined(false)\n+      try{\n+        navigation.goBack()\n+      }catch(e){\n+\n+      }\n+    })\n+\n+    _engine.addListener('UserJoined', (uid, elapsed) => {\n+      console.info('UserJoined', uid, elapsed);\n+      // engine.stopPreview()\n+      setremoteid(uid)\n+    })\n+\n+    _engine?.addListener('UserOffline', (uid, reason) => {\n+      console.info('UserOffline', uid, reason);\n+      setremoteid(null)\n+      try{\n+        navigation.goBack()\n+      }catch(e){\n+\n+      }\n+    })\n+\n+    // _engine.addListener('JoinChannelError', (e)=>{\n+    //   console.log(e)\n+    // })\n+  }\n+\n+  const _onChangeRecordingVolume = (value) => {\n+    _engine.adjustRecordingSignalVolume(value * 400)\n+  }\n+\n+  const _onChangePlaybackVolume = (value) => {\n+    _engine.adjustPlaybackSignalVolume(value * 400)\n+  }\n+\n+  const _toggleInEarMonitoring = (isEnabled) => {\n+    _engine.enableInEarMonitoring(isEnabled)\n+  }\n+\n+  const _onChangeInEarMonitoringVolume = (value) => {\n+    _engine.setInEarMonitoringVolume(value * 400)\n+  }\n+\n+  const _leaveChannel = async () => {\n+    try{\n+      if(_engine !=null){\n+        await _engine.leaveChannel()\n+      }\n+    }catch(e){\n+      console.log('Leave Error: ', e)\n+    }\n+    navigation.goBack()\n+  }\n+\n+  const _switchCamera =async()=>{\n+    try{\n+      await engine.enableLocalVideo(!video)\n+      setvideo(!video)\n+    }catch(e){\n+      console.log(e)\n+    }\n+  }\n+\n+  const _switchMicrophone = async() => {\n+    try{\n+      await engine.enableLocalAudio(!muted)\n+      setmuted(!muted)\n+    }catch(e){\n+      console.log(e)\n+    }\n+  };\n+\n+  const _switchSpeakerphone = () => {\n+    try{\n+      engine.setEnableSpeakerphone(!speaker)\n+      setspeaker(!speaker)\n+    }catch(e){\n+      console.log(e)\n+    }\n+  }\n+\n+  useEffect(() => {\n+    // _init()\n+    \n+    (async()=>{\n+      try{\n+        let res = await axios.get('https://api.clarondoc.com/urgent/token')\n+        _init(res.data.RTCChannel, res.data.RTCAccessToken)\n+\n+        const user = JSON.parse(await AsyncStorage.getItem('user'));\n+        // console.log(user.firstname)\n+\n+        let doc = await firebase.firestore().collection('normal_calls').doc(patient_email).set({data: {\n+          time: new Date(),\n+          patient: patient_email,\n+          doctor: doctor_email,\n+          caller: `${user.firstname} ${user.lastname}`,\n+          status: 'started',\n+          end_now: 'false',\n+          channel: res.data.RTCChannel,\n+          token: res.data.RTCAccessToken\n+        }})\n+\n+      }catch(e){\n+        console.log('aa')\n+        console.log(e)\n+      }\n+    })()\n+\n+    return () => {\n+      engine.destroy()\n+    }\n+  }, [])\n+\n+  return (\n+    <Layout style={{flex: 1}}>\n+      <SafeAreaView style={{flex: 1}}>\n+        <StatusBar barStyle={isDarkMode ? 'light-content' : 'dark-content'} />\n+\n+        { joined ?\n+        <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n+          \n+          {remoteid != null ?\n+          <RtcRemoteView.SurfaceView\n+            style={{flex: 1, position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, zIndex: -1}}\n+            uid={remoteid}\n+            zOrderMediaOverlay={false}\n+          /> : <Text category={'h5'}>Connecting...</Text> }\n+          \n+          <RtcLocalView.SurfaceView style={remoteid == null ? styles.localConnecting : styles.localConnected} />\n+        </Layout>\n+        :\n+        // <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n+        //   <Text category={'h5'}>Connecting...</Text>\n+        // </Layout>\n+        <RtcLocalView.SurfaceView style={styles.localConnecting} />\n+        // <Text />\n+        }\n+        <View style={{position: 'absolute', bottom: 35, left: 15, right: 15, alignItems: 'center', justifyContent: 'space-around', flexDirection: 'row'}}>\n+          <Button onPress={_switchCamera} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={VideoIcon} appearance={video ? 'filled' : 'outline'}></Button>\n+          <Button onPress={_switchMicrophone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={MuteIcon} appearance={muted ? 'filled' : 'outline'}></Button>\n+          <Button onPress={_leaveChannel} status={'danger'} style={{height: 75, width: 75, borderRadius: 75}} accessoryLeft={EndIcon} appearance={'filled'}></Button>\n+          <Button onPress={_switchSpeakerphone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={SpeakerIcon} appearance={speaker ? 'filled' : 'outline'}></Button>\n+        </View>\n+      </SafeAreaView>\n+    </Layout>\n+  );\n+};\n+\n+const styles = StyleSheet.create({\n+  sectionContainer: {\n+    marginTop: 32,\n+    paddingHorizontal: 24,\n+  },\n+  sectionTitle: {\n+    fontSize: 24,\n+    fontWeight: '600',\n+  },\n+  sectionDescription: {\n+    marginTop: 8,\n+    fontSize: 18,\n+    fontWeight: '400',\n+  },\n+  highlight: {\n+    fontWeight: '700',\n+  },\n+  localConnecting: {\n+    top: 0,\n+    right: 0,\n+    bottom: 0,\n+    left: 0,\n+    position: 'absolute',\n+  },\n+  localConnected: {\n+    height: 200,\n+    width: 150,\n+    borderRadius: 5,\n+    backgroundColor: '#141414',\n+    position: 'absolute',\n+    top: 50,\n+    right: 15,\n+    zIndex: 99\n+  }\n+});\n+\n+export default VideoCall;\n"
                },
                {
                    "date": 1641129341944,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,9 +220,9 @@\n           {remoteid != null ?\n           <RtcRemoteView.SurfaceView\n             style={{flex: 1, position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, zIndex: -1}}\n             uid={remoteid}\n-            zOrderMediaOverlay={false}\n+            zOrderMediaOverlay={true}\n           /> : <Text category={'h5'}>Connecting...</Text> }\n           \n           <RtcLocalView.SurfaceView style={remoteid == null ? styles.localConnecting : styles.localConnected} />\n         </Layout>\n@@ -280,288 +280,4 @@\n   }\n });\n \n export default VideoCall;\n-import { Button, Icon, Layout, Text } from '@ui-kitten/components';\n-import React, {useEffect, useState} from 'react';\n-import axios from 'axios';\n-import AsyncStorage from '@react-native-async-storage/async-storage';\n-import {\n-  SafeAreaView,\n-  PermissionsAndroid,\n-  StatusBar,\n-  StyleSheet,\n-  useColorScheme,\n-  Platform,\n-  View,\n-  TouchableOpacity\n-} from 'react-native';\n-import RtcEngine, {\n-  ChannelProfile,\n-  ClientRole,\n-  RtcEngineContext,\n-  RtcLocalView,\n-  RtcRemoteView\n-} from 'react-native-agora';\n-import firebase from 'firebase';\n-\n-const SpeakerIcon = (props)=><Icon {...props} name=\"volume-up-outline\"/>\n-const EndIcon = (props)=><Icon {...props} name=\"close-outline\"/>\n-const MuteIcon = (props)=><Icon {...props} name=\"mic-off-outline\"/>\n-const VideoIcon = (props)=><Icon {...props} name=\"video-outline\"/>\n-\n-const VideoCall = ({navigation, route}) => {\n-  const doctor_email = route.params.doctor_email;\n-  const patient_email = route.params.patient_email;\n-\n-  const isDarkMode = useColorScheme() === 'dark';\n-  const [joined, setjoined] = useState(false)\n-  const [engine, setengine] = useState()\n-  const [muted, setmuted] = useState(false)\n-  const [video, setvideo] = useState(true)\n-  const [speaker, setspeaker] = useState(false)\n-  const [remoteid, setremoteid] = useState()\n-  let _engine\n-\n-  const _init = async (channel, token) => {\n-    _engine = await RtcEngine.createWithContext(\n-      new RtcEngineContext('a90dea913c844cd7bcada446242c6150')\n-    )\n-\n-    setengine(_engine)\n-\n-    requestCameraAndAudioPermission()\n-\n-    _addListeners()\n-    await _engine.enableVideo()\n-    await _engine.startPreview()\n-    await _engine.enableLocalVideo(true)\n-    await _engine.startPreview()\n-    await _engine.setChannelProfile(ChannelProfile.LiveBroadcasting)\n-    await _engine.setClientRole(ClientRole.Broadcaster)\n-    try{\n-      // await _engine.joinChannel('006a90dea913c844cd7bcada446242c6150IAA0Kk/v+DSMEdW7apteZTf19Fz2BUqa3+nMAj7HeO9KYwO7xC0AAAAAEACLgpZh2C8vYQEAAQDVLy9h',\n-      // 'urgent', null, 0)\n-\n-      await _engine.joinChannel(token,\n-      channel, null, 0)\n-    }catch(e){\n-      console.log(e)\n-    }\n-  }\n-\n-  const requestCameraAndAudioPermission = async () =>{\n-    try {\n-        const granted = await PermissionsAndroid.requestMultiple([\n-            PermissionsAndroid.PERMISSIONS.RECORD_AUDIO,\n-            PermissionsAndroid.PERMISSIONS.CAMERA,\n-        ])\n-        if (\n-            granted['android.permission.RECORD_AUDIO'] === PermissionsAndroid.RESULTS.GRANTED\n-        ) {\n-            console.log('You can use the mic')\n-            console.log(granted)\n-        } else {\n-            console.log('Permission denied')\n-        }\n-    } catch (err) {\n-        console.warn(err)\n-    }\n-  }\n-\n-  const _addListeners = () => {\n-    _engine.addListener('JoinChannelSuccess', (channel, uid, elapsed) => {\n-      console.info('JoinChannelSuccess', channel, uid)\n-      setjoined(true)\n-    })\n-\n-    _engine.addListener('LeaveChannel', (stats) => {\n-      console.info('LeaveChannel', stats)\n-      setjoined(false)\n-      try{\n-        navigation.goBack()\n-      }catch(e){\n-\n-      }\n-    })\n-\n-    _engine.addListener('UserJoined', (uid, elapsed) => {\n-      console.info('UserJoined', uid, elapsed);\n-      // engine.stopPreview()\n-      setremoteid(uid)\n-    })\n-\n-    _engine?.addListener('UserOffline', (uid, reason) => {\n-      console.info('UserOffline', uid, reason);\n-      setremoteid(null)\n-      try{\n-        navigation.goBack()\n-      }catch(e){\n-\n-      }\n-    })\n-\n-    // _engine.addListener('JoinChannelError', (e)=>{\n-    //   console.log(e)\n-    // })\n-  }\n-\n-  const _onChangeRecordingVolume = (value) => {\n-    _engine.adjustRecordingSignalVolume(value * 400)\n-  }\n-\n-  const _onChangePlaybackVolume = (value) => {\n-    _engine.adjustPlaybackSignalVolume(value * 400)\n-  }\n-\n-  const _toggleInEarMonitoring = (isEnabled) => {\n-    _engine.enableInEarMonitoring(isEnabled)\n-  }\n-\n-  const _onChangeInEarMonitoringVolume = (value) => {\n-    _engine.setInEarMonitoringVolume(value * 400)\n-  }\n-\n-  const _leaveChannel = async () => {\n-    try{\n-      if(_engine !=null){\n-        await _engine.leaveChannel()\n-      }\n-    }catch(e){\n-      console.log('Leave Error: ', e)\n-    }\n-    navigation.goBack()\n-  }\n-\n-  const _switchCamera =async()=>{\n-    try{\n-      await engine.enableLocalVideo(!video)\n-      setvideo(!video)\n-    }catch(e){\n-      console.log(e)\n-    }\n-  }\n-\n-  const _switchMicrophone = async() => {\n-    try{\n-      await engine.enableLocalAudio(!muted)\n-      setmuted(!muted)\n-    }catch(e){\n-      console.log(e)\n-    }\n-  };\n-\n-  const _switchSpeakerphone = () => {\n-    try{\n-      engine.setEnableSpeakerphone(!speaker)\n-      setspeaker(!speaker)\n-    }catch(e){\n-      console.log(e)\n-    }\n-  }\n-\n-  useEffect(() => {\n-    // _init()\n-    \n-    (async()=>{\n-      try{\n-        let res = await axios.get('https://api.clarondoc.com/urgent/token')\n-        _init(res.data.RTCChannel, res.data.RTCAccessToken)\n-\n-        const user = JSON.parse(await AsyncStorage.getItem('user'));\n-        // console.log(user.firstname)\n-\n-        let doc = await firebase.firestore().collection('normal_calls').doc(patient_email).set({data: {\n-          time: new Date(),\n-          patient: patient_email,\n-          doctor: doctor_email,\n-          caller: `${user.firstname} ${user.lastname}`,\n-          status: 'started',\n-          end_now: 'false',\n-          channel: res.data.RTCChannel,\n-          token: res.data.RTCAccessToken\n-        }})\n-\n-      }catch(e){\n-        console.log('aa')\n-        console.log(e)\n-      }\n-    })()\n-\n-    return () => {\n-      engine.destroy()\n-    }\n-  }, [])\n-\n-  return (\n-    <Layout style={{flex: 1}}>\n-      <SafeAreaView style={{flex: 1}}>\n-        <StatusBar barStyle={isDarkMode ? 'light-content' : 'dark-content'} />\n-\n-        { joined ?\n-        <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n-          \n-          {remoteid != null ?\n-          <RtcRemoteView.SurfaceView\n-            style={{flex: 1, position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, zIndex: -1}}\n-            uid={remoteid}\n-            zOrderMediaOverlay={false}\n-          /> : <Text category={'h5'}>Connecting...</Text> }\n-          \n-          <RtcLocalView.SurfaceView style={remoteid == null ? styles.localConnecting : styles.localConnected} />\n-        </Layout>\n-        :\n-        // <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n-        //   <Text category={'h5'}>Connecting...</Text>\n-        // </Layout>\n-        <RtcLocalView.SurfaceView style={styles.localConnecting} />\n-        // <Text />\n-        }\n-        <View style={{position: 'absolute', bottom: 35, left: 15, right: 15, alignItems: 'center', justifyContent: 'space-around', flexDirection: 'row'}}>\n-          <Button onPress={_switchCamera} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={VideoIcon} appearance={video ? 'filled' : 'outline'}></Button>\n-          <Button onPress={_switchMicrophone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={MuteIcon} appearance={muted ? 'filled' : 'outline'}></Button>\n-          <Button onPress={_leaveChannel} status={'danger'} style={{height: 75, width: 75, borderRadius: 75}} accessoryLeft={EndIcon} appearance={'filled'}></Button>\n-          <Button onPress={_switchSpeakerphone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={SpeakerIcon} appearance={speaker ? 'filled' : 'outline'}></Button>\n-        </View>\n-      </SafeAreaView>\n-    </Layout>\n-  );\n-};\n-\n-const styles = StyleSheet.create({\n-  sectionContainer: {\n-    marginTop: 32,\n-    paddingHorizontal: 24,\n-  },\n-  sectionTitle: {\n-    fontSize: 24,\n-    fontWeight: '600',\n-  },\n-  sectionDescription: {\n-    marginTop: 8,\n-    fontSize: 18,\n-    fontWeight: '400',\n-  },\n-  highlight: {\n-    fontWeight: '700',\n-  },\n-  localConnecting: {\n-    top: 0,\n-    right: 0,\n-    bottom: 0,\n-    left: 0,\n-    position: 'absolute',\n-    zIndex: -99\n-  },\n-  localConnected: {\n-    height: 200,\n-    width: 150,\n-    borderRadius: 5,\n-    backgroundColor: '#141414',\n-    position: 'absolute',\n-    top: 50,\n-    right: 15,\n-    zIndex: 99\n-  }\n-});\n-\n-export default VideoCall;\n"
                },
                {
                    "date": 1641129378171,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -223,9 +223,9 @@\n             uid={remoteid}\n             zOrderMediaOverlay={true}\n           /> : <Text category={'h5'}>Connecting...</Text> }\n           \n-          <RtcLocalView.SurfaceView style={remoteid == null ? styles.localConnecting : styles.localConnected} />\n+          <RtcLocalView.SurfaceView zOrderMediaOverlay={false} style={remoteid == null ? styles.localConnecting : styles.localConnected} />\n         </Layout>\n         :\n         // <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n         //   <Text category={'h5'}>Connecting...</Text>\n"
                },
                {
                    "date": 1641129390052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -223,9 +223,9 @@\n             uid={remoteid}\n             zOrderMediaOverlay={true}\n           /> : <Text category={'h5'}>Connecting...</Text> }\n           \n-          <RtcLocalView.SurfaceView zOrderMediaOverlay={false} style={remoteid == null ? styles.localConnecting : styles.localConnected} />\n+          <RtcLocalView.SurfaceView zOrderMediaOverlay={true} style={remoteid == null ? styles.localConnecting : styles.localConnected} />\n         </Layout>\n         :\n         // <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n         //   <Text category={'h5'}>Connecting...</Text>\n"
                },
                {
                    "date": 1641129407738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,9 +220,9 @@\n           {remoteid != null ?\n           <RtcRemoteView.SurfaceView\n             style={{flex: 1, position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, zIndex: -1}}\n             uid={remoteid}\n-            zOrderMediaOverlay={true}\n+            zOrderMediaOverlay={false}\n           /> : <Text category={'h5'}>Connecting...</Text> }\n           \n           <RtcLocalView.SurfaceView zOrderMediaOverlay={true} style={remoteid == null ? styles.localConnecting : styles.localConnected} />\n         </Layout>\n"
                },
                {
                    "date": 1641129414926,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,283 @@\n+import { Button, Icon, Layout, Text } from '@ui-kitten/components';\n+import React, {useEffect, useState} from 'react';\n+import axios from 'axios';\n+import AsyncStorage from '@react-native-async-storage/async-storage';\n+import {\n+  SafeAreaView,\n+  PermissionsAndroid,\n+  StatusBar,\n+  StyleSheet,\n+  useColorScheme,\n+  Platform,\n+  View,\n+  TouchableOpacity\n+} from 'react-native';\n+import RtcEngine, {\n+  ChannelProfile,\n+  ClientRole,\n+  RtcEngineContext,\n+  RtcLocalView,\n+  RtcRemoteView\n+} from 'react-native-agora';\n+import firebase from 'firebase';\n+\n+const SpeakerIcon = (props)=><Icon {...props} name=\"volume-up-outline\"/>\n+const EndIcon = (props)=><Icon {...props} name=\"close-outline\"/>\n+const MuteIcon = (props)=><Icon {...props} name=\"mic-off-outline\"/>\n+const VideoIcon = (props)=><Icon {...props} name=\"video-outline\"/>\n+\n+const VideoCall = ({navigation, route}) => {\n+  const doctor_email = route.params.doctor_email;\n+  const patient_email = route.params.patient_email;\n+\n+  const isDarkMode = useColorScheme() === 'dark';\n+  const [joined, setjoined] = useState(false)\n+  const [engine, setengine] = useState()\n+  const [muted, setmuted] = useState(false)\n+  const [video, setvideo] = useState(true)\n+  const [speaker, setspeaker] = useState(false)\n+  const [remoteid, setremoteid] = useState()\n+  let _engine\n+\n+  const _init = async (channel, token) => {\n+    _engine = await RtcEngine.createWithContext(\n+      new RtcEngineContext('a90dea913c844cd7bcada446242c6150')\n+    )\n+\n+    setengine(_engine)\n+\n+    requestCameraAndAudioPermission()\n+\n+    _addListeners()\n+    await _engine.enableVideo()\n+    await _engine.startPreview()\n+    await _engine.enableLocalVideo(true)\n+    await _engine.startPreview()\n+    await _engine.setChannelProfile(ChannelProfile.LiveBroadcasting)\n+    await _engine.setClientRole(ClientRole.Broadcaster)\n+    try{\n+      // await _engine.joinChannel('006a90dea913c844cd7bcada446242c6150IAA0Kk/v+DSMEdW7apteZTf19Fz2BUqa3+nMAj7HeO9KYwO7xC0AAAAAEACLgpZh2C8vYQEAAQDVLy9h',\n+      // 'urgent', null, 0)\n+\n+      await _engine.joinChannel(token,\n+      channel, null, 0)\n+    }catch(e){\n+      console.log(e)\n+    }\n+  }\n+\n+  const requestCameraAndAudioPermission = async () =>{\n+    try {\n+        const granted = await PermissionsAndroid.requestMultiple([\n+            PermissionsAndroid.PERMISSIONS.RECORD_AUDIO,\n+            PermissionsAndroid.PERMISSIONS.CAMERA,\n+        ])\n+        if (\n+            granted['android.permission.RECORD_AUDIO'] === PermissionsAndroid.RESULTS.GRANTED\n+        ) {\n+            console.log('You can use the mic')\n+            console.log(granted)\n+        } else {\n+            console.log('Permission denied')\n+        }\n+    } catch (err) {\n+        console.warn(err)\n+    }\n+  }\n+\n+  const _addListeners = () => {\n+    _engine.addListener('JoinChannelSuccess', (channel, uid, elapsed) => {\n+      console.info('JoinChannelSuccess', channel, uid)\n+      setjoined(true)\n+    })\n+\n+    _engine.addListener('LeaveChannel', (stats) => {\n+      console.info('LeaveChannel', stats)\n+      setjoined(false)\n+      try{\n+        navigation.goBack()\n+      }catch(e){\n+\n+      }\n+    })\n+\n+    _engine.addListener('UserJoined', (uid, elapsed) => {\n+      console.info('UserJoined', uid, elapsed);\n+      // engine.stopPreview()\n+      setremoteid(uid)\n+    })\n+\n+    _engine?.addListener('UserOffline', (uid, reason) => {\n+      console.info('UserOffline', uid, reason);\n+      setremoteid(null)\n+      try{\n+        navigation.goBack()\n+      }catch(e){\n+\n+      }\n+    })\n+\n+    // _engine.addListener('JoinChannelError', (e)=>{\n+    //   console.log(e)\n+    // })\n+  }\n+\n+  const _onChangeRecordingVolume = (value) => {\n+    _engine.adjustRecordingSignalVolume(value * 400)\n+  }\n+\n+  const _onChangePlaybackVolume = (value) => {\n+    _engine.adjustPlaybackSignalVolume(value * 400)\n+  }\n+\n+  const _toggleInEarMonitoring = (isEnabled) => {\n+    _engine.enableInEarMonitoring(isEnabled)\n+  }\n+\n+  const _onChangeInEarMonitoringVolume = (value) => {\n+    _engine.setInEarMonitoringVolume(value * 400)\n+  }\n+\n+  const _leaveChannel = async () => {\n+    try{\n+      if(_engine !=null){\n+        await _engine.leaveChannel()\n+      }\n+    }catch(e){\n+      console.log('Leave Error: ', e)\n+    }\n+    navigation.goBack()\n+  }\n+\n+  const _switchCamera =async()=>{\n+    try{\n+      await engine.enableLocalVideo(!video)\n+      setvideo(!video)\n+    }catch(e){\n+      console.log(e)\n+    }\n+  }\n+\n+  const _switchMicrophone = async() => {\n+    try{\n+      await engine.enableLocalAudio(!muted)\n+      setmuted(!muted)\n+    }catch(e){\n+      console.log(e)\n+    }\n+  };\n+\n+  const _switchSpeakerphone = () => {\n+    try{\n+      engine.setEnableSpeakerphone(!speaker)\n+      setspeaker(!speaker)\n+    }catch(e){\n+      console.log(e)\n+    }\n+  }\n+\n+  useEffect(() => {\n+    // _init()\n+    \n+    (async()=>{\n+      try{\n+        let res = await axios.get('https://api.clarondoc.com/urgent/token')\n+        _init(res.data.RTCChannel, res.data.RTCAccessToken)\n+\n+        const user = JSON.parse(await AsyncStorage.getItem('user'));\n+        // console.log(user.firstname)\n+\n+        let doc = await firebase.firestore().collection('normal_calls').doc(patient_email).set({data: {\n+          time: new Date(),\n+          patient: patient_email,\n+          doctor: doctor_email,\n+          caller: `${user.firstname} ${user.lastname}`,\n+          status: 'started',\n+          end_now: 'false',\n+          channel: res.data.RTCChannel,\n+          token: res.data.RTCAccessToken\n+        }})\n+\n+      }catch(e){\n+        console.log('aa')\n+        console.log(e)\n+      }\n+    })()\n+\n+    return () => {\n+      engine.destroy()\n+    }\n+  }, [])\n+\n+  return (\n+    <Layout style={{flex: 1}}>\n+      <SafeAreaView style={{flex: 1}}>\n+        <StatusBar barStyle={isDarkMode ? 'light-content' : 'dark-content'} />\n+\n+        { joined ?\n+        <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n+          \n+          {remoteid != null ?\n+          <RtcRemoteView.SurfaceView\n+            style={{flex: 1, position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, zIndex: -1}}\n+            uid={remoteid}\n+            zOrderMediaOverlay={true}\n+          /> : <Text category={'h5'}>Connecting...</Text> }\n+          \n+          <RtcLocalView.SurfaceView zOrderMediaOverlay={true} style={remoteid == null ? styles.localConnecting : styles.localConnected} />\n+        </Layout>\n+        :\n+        // <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n+        //   <Text category={'h5'}>Connecting...</Text>\n+        // </Layout>\n+        <RtcLocalView.SurfaceView style={styles.localConnecting} />\n+        // <Text />\n+        }\n+        <View style={{position: 'absolute', bottom: 35, left: 15, right: 15, alignItems: 'center', justifyContent: 'space-around', flexDirection: 'row'}}>\n+          <Button onPress={_switchCamera} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={VideoIcon} appearance={video ? 'filled' : 'outline'}></Button>\n+          <Button onPress={_switchMicrophone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={MuteIcon} appearance={muted ? 'filled' : 'outline'}></Button>\n+          <Button onPress={_leaveChannel} status={'danger'} style={{height: 75, width: 75, borderRadius: 75}} accessoryLeft={EndIcon} appearance={'filled'}></Button>\n+          <Button onPress={_switchSpeakerphone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={SpeakerIcon} appearance={speaker ? 'filled' : 'outline'}></Button>\n+        </View>\n+      </SafeAreaView>\n+    </Layout>\n+  );\n+};\n+\n+const styles = StyleSheet.create({\n+  sectionContainer: {\n+    marginTop: 32,\n+    paddingHorizontal: 24,\n+  },\n+  sectionTitle: {\n+    fontSize: 24,\n+    fontWeight: '600',\n+  },\n+  sectionDescription: {\n+    marginTop: 8,\n+    fontSize: 18,\n+    fontWeight: '400',\n+  },\n+  highlight: {\n+    fontWeight: '700',\n+  },\n+  localConnecting: {\n+    top: 0,\n+    right: 0,\n+    bottom: 0,\n+    left: 0,\n+    position: 'absolute',\n+  },\n+  localConnected: {\n+    height: 200,\n+    width: 150,\n+    borderRadius: 5,\n+    backgroundColor: '#141414',\n+    position: 'absolute',\n+    top: 50,\n+    right: 15,\n+    zIndex: 99\n+  }\n+});\n+\n+export default VideoCall;\n"
                },
                {
                    "date": 1641129458704,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,293 +218,10 @@\n         <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n           \n           {remoteid != null ?\n           <RtcRemoteView.SurfaceView\n-            style={{flex: 1, position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, zIndex: -1}}\n+            style={{flex: 1, position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, zIndex: 1}}\n             uid={remoteid}\n-            zOrderMediaOverlay={true}\n-          /> : <Text category={'h5'}>Connecting...</Text> }\n-          \n-          <RtcLocalView.SurfaceView zOrderMediaOverlay={true} style={remoteid == null ? styles.localConnecting : styles.localConnected} />\n-        </Layout>\n-        :\n-        // <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n-        //   <Text category={'h5'}>Connecting...</Text>\n-        // </Layout>\n-        <RtcLocalView.SurfaceView style={styles.localConnecting} />\n-        // <Text />\n-        }\n-        <View style={{position: 'absolute', bottom: 35, left: 15, right: 15, alignItems: 'center', justifyContent: 'space-around', flexDirection: 'row'}}>\n-          <Button onPress={_switchCamera} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={VideoIcon} appearance={video ? 'filled' : 'outline'}></Button>\n-          <Button onPress={_switchMicrophone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={MuteIcon} appearance={muted ? 'filled' : 'outline'}></Button>\n-          <Button onPress={_leaveChannel} status={'danger'} style={{height: 75, width: 75, borderRadius: 75}} accessoryLeft={EndIcon} appearance={'filled'}></Button>\n-          <Button onPress={_switchSpeakerphone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={SpeakerIcon} appearance={speaker ? 'filled' : 'outline'}></Button>\n-        </View>\n-      </SafeAreaView>\n-    </Layout>\n-  );\n-};\n-\n-const styles = StyleSheet.create({\n-  sectionContainer: {\n-    marginTop: 32,\n-    paddingHorizontal: 24,\n-  },\n-  sectionTitle: {\n-    fontSize: 24,\n-    fontWeight: '600',\n-  },\n-  sectionDescription: {\n-    marginTop: 8,\n-    fontSize: 18,\n-    fontWeight: '400',\n-  },\n-  highlight: {\n-    fontWeight: '700',\n-  },\n-  localConnecting: {\n-    top: 0,\n-    right: 0,\n-    bottom: 0,\n-    left: 0,\n-    position: 'absolute',\n-  },\n-  localConnected: {\n-    height: 200,\n-    width: 150,\n-    borderRadius: 5,\n-    backgroundColor: '#141414',\n-    position: 'absolute',\n-    top: 50,\n-    right: 15,\n-    zIndex: 99\n-  }\n-});\n-\n-export default VideoCall;\n-import { Button, Icon, Layout, Text } from '@ui-kitten/components';\n-import React, {useEffect, useState} from 'react';\n-import axios from 'axios';\n-import AsyncStorage from '@react-native-async-storage/async-storage';\n-import {\n-  SafeAreaView,\n-  PermissionsAndroid,\n-  StatusBar,\n-  StyleSheet,\n-  useColorScheme,\n-  Platform,\n-  View,\n-  TouchableOpacity\n-} from 'react-native';\n-import RtcEngine, {\n-  ChannelProfile,\n-  ClientRole,\n-  RtcEngineContext,\n-  RtcLocalView,\n-  RtcRemoteView\n-} from 'react-native-agora';\n-import firebase from 'firebase';\n-\n-const SpeakerIcon = (props)=><Icon {...props} name=\"volume-up-outline\"/>\n-const EndIcon = (props)=><Icon {...props} name=\"close-outline\"/>\n-const MuteIcon = (props)=><Icon {...props} name=\"mic-off-outline\"/>\n-const VideoIcon = (props)=><Icon {...props} name=\"video-outline\"/>\n-\n-const VideoCall = ({navigation, route}) => {\n-  const doctor_email = route.params.doctor_email;\n-  const patient_email = route.params.patient_email;\n-\n-  const isDarkMode = useColorScheme() === 'dark';\n-  const [joined, setjoined] = useState(false)\n-  const [engine, setengine] = useState()\n-  const [muted, setmuted] = useState(false)\n-  const [video, setvideo] = useState(true)\n-  const [speaker, setspeaker] = useState(false)\n-  const [remoteid, setremoteid] = useState()\n-  let _engine\n-\n-  const _init = async (channel, token) => {\n-    _engine = await RtcEngine.createWithContext(\n-      new RtcEngineContext('a90dea913c844cd7bcada446242c6150')\n-    )\n-\n-    setengine(_engine)\n-\n-    requestCameraAndAudioPermission()\n-\n-    _addListeners()\n-    await _engine.enableVideo()\n-    await _engine.startPreview()\n-    await _engine.enableLocalVideo(true)\n-    await _engine.startPreview()\n-    await _engine.setChannelProfile(ChannelProfile.LiveBroadcasting)\n-    await _engine.setClientRole(ClientRole.Broadcaster)\n-    try{\n-      // await _engine.joinChannel('006a90dea913c844cd7bcada446242c6150IAA0Kk/v+DSMEdW7apteZTf19Fz2BUqa3+nMAj7HeO9KYwO7xC0AAAAAEACLgpZh2C8vYQEAAQDVLy9h',\n-      // 'urgent', null, 0)\n-\n-      await _engine.joinChannel(token,\n-      channel, null, 0)\n-    }catch(e){\n-      console.log(e)\n-    }\n-  }\n-\n-  const requestCameraAndAudioPermission = async () =>{\n-    try {\n-        const granted = await PermissionsAndroid.requestMultiple([\n-            PermissionsAndroid.PERMISSIONS.RECORD_AUDIO,\n-            PermissionsAndroid.PERMISSIONS.CAMERA,\n-        ])\n-        if (\n-            granted['android.permission.RECORD_AUDIO'] === PermissionsAndroid.RESULTS.GRANTED\n-        ) {\n-            console.log('You can use the mic')\n-            console.log(granted)\n-        } else {\n-            console.log('Permission denied')\n-        }\n-    } catch (err) {\n-        console.warn(err)\n-    }\n-  }\n-\n-  const _addListeners = () => {\n-    _engine.addListener('JoinChannelSuccess', (channel, uid, elapsed) => {\n-      console.info('JoinChannelSuccess', channel, uid)\n-      setjoined(true)\n-    })\n-\n-    _engine.addListener('LeaveChannel', (stats) => {\n-      console.info('LeaveChannel', stats)\n-      setjoined(false)\n-      try{\n-        navigation.goBack()\n-      }catch(e){\n-\n-      }\n-    })\n-\n-    _engine.addListener('UserJoined', (uid, elapsed) => {\n-      console.info('UserJoined', uid, elapsed);\n-      // engine.stopPreview()\n-      setremoteid(uid)\n-    })\n-\n-    _engine?.addListener('UserOffline', (uid, reason) => {\n-      console.info('UserOffline', uid, reason);\n-      setremoteid(null)\n-      try{\n-        navigation.goBack()\n-      }catch(e){\n-\n-      }\n-    })\n-\n-    // _engine.addListener('JoinChannelError', (e)=>{\n-    //   console.log(e)\n-    // })\n-  }\n-\n-  const _onChangeRecordingVolume = (value) => {\n-    _engine.adjustRecordingSignalVolume(value * 400)\n-  }\n-\n-  const _onChangePlaybackVolume = (value) => {\n-    _engine.adjustPlaybackSignalVolume(value * 400)\n-  }\n-\n-  const _toggleInEarMonitoring = (isEnabled) => {\n-    _engine.enableInEarMonitoring(isEnabled)\n-  }\n-\n-  const _onChangeInEarMonitoringVolume = (value) => {\n-    _engine.setInEarMonitoringVolume(value * 400)\n-  }\n-\n-  const _leaveChannel = async () => {\n-    try{\n-      if(_engine !=null){\n-        await _engine.leaveChannel()\n-      }\n-    }catch(e){\n-      console.log('Leave Error: ', e)\n-    }\n-    navigation.goBack()\n-  }\n-\n-  const _switchCamera =async()=>{\n-    try{\n-      await engine.enableLocalVideo(!video)\n-      setvideo(!video)\n-    }catch(e){\n-      console.log(e)\n-    }\n-  }\n-\n-  const _switchMicrophone = async() => {\n-    try{\n-      await engine.enableLocalAudio(!muted)\n-      setmuted(!muted)\n-    }catch(e){\n-      console.log(e)\n-    }\n-  };\n-\n-  const _switchSpeakerphone = () => {\n-    try{\n-      engine.setEnableSpeakerphone(!speaker)\n-      setspeaker(!speaker)\n-    }catch(e){\n-      console.log(e)\n-    }\n-  }\n-\n-  useEffect(() => {\n-    // _init()\n-    \n-    (async()=>{\n-      try{\n-        let res = await axios.get('https://api.clarondoc.com/urgent/token')\n-        _init(res.data.RTCChannel, res.data.RTCAccessToken)\n-\n-        const user = JSON.parse(await AsyncStorage.getItem('user'));\n-        // console.log(user.firstname)\n-\n-        let doc = await firebase.firestore().collection('normal_calls').doc(patient_email).set({data: {\n-          time: new Date(),\n-          patient: patient_email,\n-          doctor: doctor_email,\n-          caller: `${user.firstname} ${user.lastname}`,\n-          status: 'started',\n-          end_now: 'false',\n-          channel: res.data.RTCChannel,\n-          token: res.data.RTCAccessToken\n-        }})\n-\n-      }catch(e){\n-        console.log('aa')\n-        console.log(e)\n-      }\n-    })()\n-\n-    return () => {\n-      engine.destroy()\n-    }\n-  }, [])\n-\n-  return (\n-    <Layout style={{flex: 1}}>\n-      <SafeAreaView style={{flex: 1}}>\n-        <StatusBar barStyle={isDarkMode ? 'light-content' : 'dark-content'} />\n-\n-        { joined ?\n-        <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n-          \n-          {remoteid != null ?\n-          <RtcRemoteView.SurfaceView\n-            style={{flex: 1, position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, zIndex: -1}}\n-            uid={remoteid}\n             zOrderMediaOverlay={false}\n           /> : <Text category={'h5'}>Connecting...</Text> }\n           \n           <RtcLocalView.SurfaceView zOrderMediaOverlay={true} style={remoteid == null ? styles.localConnecting : styles.localConnected} />\n"
                },
                {
                    "date": 1641129464687,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,9 +218,9 @@\n         <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n           \n           {remoteid != null ?\n           <RtcRemoteView.SurfaceView\n-            style={{flex: 1, position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, zIndex: 1}}\n+            style={{flex: 1, position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, zIndex: -1}}\n             uid={remoteid}\n             zOrderMediaOverlay={false}\n           /> : <Text category={'h5'}>Connecting...</Text> }\n           \n"
                },
                {
                    "date": 1641129475507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,9 +220,9 @@\n           {remoteid != null ?\n           <RtcRemoteView.SurfaceView\n             style={{flex: 1, position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, zIndex: -1}}\n             uid={remoteid}\n-            zOrderMediaOverlay={false}\n+            zOrderMediaOverlay={true}\n           /> : <Text category={'h5'}>Connecting...</Text> }\n           \n           <RtcLocalView.SurfaceView zOrderMediaOverlay={true} style={remoteid == null ? styles.localConnecting : styles.localConnected} />\n         </Layout>\n"
                },
                {
                    "date": 1641130623211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,283 @@\n+import { Button, Icon, Layout, Text } from '@ui-kitten/components';\n+import React, {useEffect, useState} from 'react';\n+import axios from 'axios';\n+import AsyncStorage from '@react-native-async-storage/async-storage';\n+import {\n+  SafeAreaView,\n+  PermissionsAndroid,\n+  StatusBar,\n+  StyleSheet,\n+  useColorScheme,\n+  Platform,\n+  View,\n+  TouchableOpacity\n+} from 'react-native';\n+import RtcEngine, {\n+  ChannelProfile,\n+  ClientRole,\n+  RtcEngineContext,\n+  RtcLocalView,\n+  RtcRemoteView\n+} from 'react-native-agora';\n+import firebase from 'firebase';\n+\n+const SpeakerIcon = (props)=><Icon {...props} name=\"volume-up-outline\"/>\n+const EndIcon = (props)=><Icon {...props} name=\"close-outline\"/>\n+const MuteIcon = (props)=><Icon {...props} name=\"mic-off-outline\"/>\n+const VideoIcon = (props)=><Icon {...props} name=\"video-outline\"/>\n+\n+const VideoCall = ({navigation, route}) => {\n+  const doctor_email = route.params.doctor_email;\n+  const patient_email = route.params.patient_email;\n+\n+  const isDarkMode = useColorScheme() === 'dark';\n+  const [joined, setjoined] = useState(false)\n+  const [engine, setengine] = useState()\n+  const [muted, setmuted] = useState(false)\n+  const [video, setvideo] = useState(true)\n+  const [speaker, setspeaker] = useState(false)\n+  const [remoteid, setremoteid] = useState()\n+  let _engine\n+\n+  const _init = async (channel, token) => {\n+    _engine = await RtcEngine.createWithContext(\n+      new RtcEngineContext('a90dea913c844cd7bcada446242c6150')\n+    )\n+\n+    setengine(_engine)\n+\n+    requestCameraAndAudioPermission()\n+\n+    _addListeners()\n+    await _engine.enableVideo()\n+    await _engine.startPreview()\n+    await _engine.enableLocalVideo(true)\n+    await _engine.startPreview()\n+    await _engine.setChannelProfile(ChannelProfile.LiveBroadcasting)\n+    await _engine.setClientRole(ClientRole.Broadcaster)\n+    try{\n+      // await _engine.joinChannel('006a90dea913c844cd7bcada446242c6150IAA0Kk/v+DSMEdW7apteZTf19Fz2BUqa3+nMAj7HeO9KYwO7xC0AAAAAEACLgpZh2C8vYQEAAQDVLy9h',\n+      // 'urgent', null, 0)\n+\n+      await _engine.joinChannel(token,\n+      channel, null, 0)\n+    }catch(e){\n+      console.log(e)\n+    }\n+  }\n+\n+  const requestCameraAndAudioPermission = async () =>{\n+    try {\n+        const granted = await PermissionsAndroid.requestMultiple([\n+            PermissionsAndroid.PERMISSIONS.RECORD_AUDIO,\n+            PermissionsAndroid.PERMISSIONS.CAMERA,\n+        ])\n+        if (\n+            granted['android.permission.RECORD_AUDIO'] === PermissionsAndroid.RESULTS.GRANTED\n+        ) {\n+            console.log('You can use the mic')\n+            console.log(granted)\n+        } else {\n+            console.log('Permission denied')\n+        }\n+    } catch (err) {\n+        console.warn(err)\n+    }\n+  }\n+\n+  const _addListeners = () => {\n+    _engine.addListener('JoinChannelSuccess', (channel, uid, elapsed) => {\n+      console.info('JoinChannelSuccess', channel, uid)\n+      setjoined(true)\n+    })\n+\n+    _engine.addListener('LeaveChannel', (stats) => {\n+      console.info('LeaveChannel', stats)\n+      setjoined(false)\n+      try{\n+        navigation.goBack()\n+      }catch(e){\n+\n+      }\n+    })\n+\n+    _engine.addListener('UserJoined', (uid, elapsed) => {\n+      console.info('UserJoined', uid, elapsed);\n+      // engine.stopPreview()\n+      setremoteid(uid)\n+    })\n+\n+    _engine?.addListener('UserOffline', (uid, reason) => {\n+      console.info('UserOffline', uid, reason);\n+      setremoteid(null)\n+      try{\n+        navigation.goBack()\n+      }catch(e){\n+\n+      }\n+    })\n+\n+    // _engine.addListener('JoinChannelError', (e)=>{\n+    //   console.log(e)\n+    // })\n+  }\n+\n+  const _onChangeRecordingVolume = (value) => {\n+    _engine.adjustRecordingSignalVolume(value * 400)\n+  }\n+\n+  const _onChangePlaybackVolume = (value) => {\n+    _engine.adjustPlaybackSignalVolume(value * 400)\n+  }\n+\n+  const _toggleInEarMonitoring = (isEnabled) => {\n+    _engine.enableInEarMonitoring(isEnabled)\n+  }\n+\n+  const _onChangeInEarMonitoringVolume = (value) => {\n+    _engine.setInEarMonitoringVolume(value * 400)\n+  }\n+\n+  const _leaveChannel = async () => {\n+    try{\n+      if(_engine !=null){\n+        await _engine.leaveChannel()\n+      }\n+    }catch(e){\n+      console.log('Leave Error: ', e)\n+    }\n+    navigation.goBack()\n+  }\n+\n+  const _switchCamera =async()=>{\n+    try{\n+      await engine.enableLocalVideo(!video)\n+      setvideo(!video)\n+    }catch(e){\n+      console.log(e)\n+    }\n+  }\n+\n+  const _switchMicrophone = async() => {\n+    try{\n+      await engine.enableLocalAudio(!muted)\n+      setmuted(!muted)\n+    }catch(e){\n+      console.log(e)\n+    }\n+  };\n+\n+  const _switchSpeakerphone = () => {\n+    try{\n+      engine.setEnableSpeakerphone(!speaker)\n+      setspeaker(!speaker)\n+    }catch(e){\n+      console.log(e)\n+    }\n+  }\n+\n+  useEffect(() => {\n+    // _init()\n+    \n+    (async()=>{\n+      try{\n+        let res = await axios.get('https://api.clarondoc.com/urgent/token')\n+        _init(res.data.RTCChannel, res.data.RTCAccessToken)\n+\n+        const user = JSON.parse(await AsyncStorage.getItem('user'));\n+        // console.log(user.firstname)\n+\n+        let doc = await firebase.firestore().collection('normal_calls').doc(patient_email).set({data: {\n+          time: new Date(),\n+          patient: patient_email,\n+          doctor: doctor_email,\n+          caller: `${user.firstname} ${user.lastname}`,\n+          status: 'started',\n+          end_now: 'false',\n+          channel: res.data.RTCChannel,\n+          token: res.data.RTCAccessToken\n+        }})\n+\n+      }catch(e){\n+        console.log('aa')\n+        console.log(e)\n+      }\n+    })()\n+\n+    return () => {\n+      engine.destroy()\n+    }\n+  }, [])\n+\n+  return (\n+    <Layout style={{flex: 1}}>\n+      <SafeAreaView style={{flex: 1}}>\n+        <StatusBar barStyle={isDarkMode ? 'light-content' : 'dark-content'} />\n+\n+        { joined ?\n+        <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n+          \n+          {remoteid != null ?\n+          <RtcRemoteView.SurfaceView\n+            style={{flex: 1, position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, zIndex: -1}}\n+            uid={remoteid}\n+            zOrderMediaOverlay={false}\n+          /> : <Text category={'h5'}>Connecting...</Text> }\n+          \n+          <RtcLocalView.SurfaceView zOrderMediaOverlay={true} style={remoteid == null ? styles.localConnecting : styles.localConnected} />\n+        </Layout>\n+        :\n+        // <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n+        //   <Text category={'h5'}>Connecting...</Text>\n+        // </Layout>\n+        <RtcLocalView.SurfaceView style={styles.localConnecting} />\n+        // <Text />\n+        }\n+        <View style={{position: 'absolute', bottom: 35, left: 15, right: 15, alignItems: 'center', justifyContent: 'space-around', flexDirection: 'row'}}>\n+          <Button onPress={_switchCamera} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={VideoIcon} appearance={video ? 'filled' : 'outline'}></Button>\n+          <Button onPress={_switchMicrophone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={MuteIcon} appearance={muted ? 'filled' : 'outline'}></Button>\n+          <Button onPress={_leaveChannel} status={'danger'} style={{height: 75, width: 75, borderRadius: 75}} accessoryLeft={EndIcon} appearance={'filled'}></Button>\n+          <Button onPress={_switchSpeakerphone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={SpeakerIcon} appearance={speaker ? 'filled' : 'outline'}></Button>\n+        </View>\n+      </SafeAreaView>\n+    </Layout>\n+  );\n+};\n+\n+const styles = StyleSheet.create({\n+  sectionContainer: {\n+    marginTop: 32,\n+    paddingHorizontal: 24,\n+  },\n+  sectionTitle: {\n+    fontSize: 24,\n+    fontWeight: '600',\n+  },\n+  sectionDescription: {\n+    marginTop: 8,\n+    fontSize: 18,\n+    fontWeight: '400',\n+  },\n+  highlight: {\n+    fontWeight: '700',\n+  },\n+  localConnecting: {\n+    top: 0,\n+    right: 0,\n+    bottom: 0,\n+    left: 0,\n+    position: 'absolute',\n+  },\n+  localConnected: {\n+    height: 200,\n+    width: 150,\n+    borderRadius: 5,\n+    backgroundColor: '#141414',\n+    position: 'absolute',\n+    top: 50,\n+    right: 15,\n+    zIndex: 99\n+  }\n+});\n+\n+export default VideoCall;\n"
                },
                {
                    "date": 1641130638983,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -223,9 +223,9 @@\n             uid={remoteid}\n             zOrderMediaOverlay={false}\n           /> : <Text category={'h5'}>Connecting...</Text> }\n           \n-          <RtcLocalView.SurfaceView zOrderMediaOverlay={true} style={remoteid == null ? styles.localConnecting : styles.localConnected} />\n+          {/* <RtcLocalView.SurfaceView zOrderMediaOverlay={true} style={remoteid == null ? styles.localConnecting : styles.localConnected} /> */}\n         </Layout>\n         :\n         // <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n         //   <Text category={'h5'}>Connecting...</Text>\n@@ -280,287 +280,4 @@\n   }\n });\n \n export default VideoCall;\n-import { Button, Icon, Layout, Text } from '@ui-kitten/components';\n-import React, {useEffect, useState} from 'react';\n-import axios from 'axios';\n-import AsyncStorage from '@react-native-async-storage/async-storage';\n-import {\n-  SafeAreaView,\n-  PermissionsAndroid,\n-  StatusBar,\n-  StyleSheet,\n-  useColorScheme,\n-  Platform,\n-  View,\n-  TouchableOpacity\n-} from 'react-native';\n-import RtcEngine, {\n-  ChannelProfile,\n-  ClientRole,\n-  RtcEngineContext,\n-  RtcLocalView,\n-  RtcRemoteView\n-} from 'react-native-agora';\n-import firebase from 'firebase';\n-\n-const SpeakerIcon = (props)=><Icon {...props} name=\"volume-up-outline\"/>\n-const EndIcon = (props)=><Icon {...props} name=\"close-outline\"/>\n-const MuteIcon = (props)=><Icon {...props} name=\"mic-off-outline\"/>\n-const VideoIcon = (props)=><Icon {...props} name=\"video-outline\"/>\n-\n-const VideoCall = ({navigation, route}) => {\n-  const doctor_email = route.params.doctor_email;\n-  const patient_email = route.params.patient_email;\n-\n-  const isDarkMode = useColorScheme() === 'dark';\n-  const [joined, setjoined] = useState(false)\n-  const [engine, setengine] = useState()\n-  const [muted, setmuted] = useState(false)\n-  const [video, setvideo] = useState(true)\n-  const [speaker, setspeaker] = useState(false)\n-  const [remoteid, setremoteid] = useState()\n-  let _engine\n-\n-  const _init = async (channel, token) => {\n-    _engine = await RtcEngine.createWithContext(\n-      new RtcEngineContext('a90dea913c844cd7bcada446242c6150')\n-    )\n-\n-    setengine(_engine)\n-\n-    requestCameraAndAudioPermission()\n-\n-    _addListeners()\n-    await _engine.enableVideo()\n-    await _engine.startPreview()\n-    await _engine.enableLocalVideo(true)\n-    await _engine.startPreview()\n-    await _engine.setChannelProfile(ChannelProfile.LiveBroadcasting)\n-    await _engine.setClientRole(ClientRole.Broadcaster)\n-    try{\n-      // await _engine.joinChannel('006a90dea913c844cd7bcada446242c6150IAA0Kk/v+DSMEdW7apteZTf19Fz2BUqa3+nMAj7HeO9KYwO7xC0AAAAAEACLgpZh2C8vYQEAAQDVLy9h',\n-      // 'urgent', null, 0)\n-\n-      await _engine.joinChannel(token,\n-      channel, null, 0)\n-    }catch(e){\n-      console.log(e)\n-    }\n-  }\n-\n-  const requestCameraAndAudioPermission = async () =>{\n-    try {\n-        const granted = await PermissionsAndroid.requestMultiple([\n-            PermissionsAndroid.PERMISSIONS.RECORD_AUDIO,\n-            PermissionsAndroid.PERMISSIONS.CAMERA,\n-        ])\n-        if (\n-            granted['android.permission.RECORD_AUDIO'] === PermissionsAndroid.RESULTS.GRANTED\n-        ) {\n-            console.log('You can use the mic')\n-            console.log(granted)\n-        } else {\n-            console.log('Permission denied')\n-        }\n-    } catch (err) {\n-        console.warn(err)\n-    }\n-  }\n-\n-  const _addListeners = () => {\n-    _engine.addListener('JoinChannelSuccess', (channel, uid, elapsed) => {\n-      console.info('JoinChannelSuccess', channel, uid)\n-      setjoined(true)\n-    })\n-\n-    _engine.addListener('LeaveChannel', (stats) => {\n-      console.info('LeaveChannel', stats)\n-      setjoined(false)\n-      try{\n-        navigation.goBack()\n-      }catch(e){\n-\n-      }\n-    })\n-\n-    _engine.addListener('UserJoined', (uid, elapsed) => {\n-      console.info('UserJoined', uid, elapsed);\n-      // engine.stopPreview()\n-      setremoteid(uid)\n-    })\n-\n-    _engine?.addListener('UserOffline', (uid, reason) => {\n-      console.info('UserOffline', uid, reason);\n-      setremoteid(null)\n-      try{\n-        navigation.goBack()\n-      }catch(e){\n-\n-      }\n-    })\n-\n-    // _engine.addListener('JoinChannelError', (e)=>{\n-    //   console.log(e)\n-    // })\n-  }\n-\n-  const _onChangeRecordingVolume = (value) => {\n-    _engine.adjustRecordingSignalVolume(value * 400)\n-  }\n-\n-  const _onChangePlaybackVolume = (value) => {\n-    _engine.adjustPlaybackSignalVolume(value * 400)\n-  }\n-\n-  const _toggleInEarMonitoring = (isEnabled) => {\n-    _engine.enableInEarMonitoring(isEnabled)\n-  }\n-\n-  const _onChangeInEarMonitoringVolume = (value) => {\n-    _engine.setInEarMonitoringVolume(value * 400)\n-  }\n-\n-  const _leaveChannel = async () => {\n-    try{\n-      if(_engine !=null){\n-        await _engine.leaveChannel()\n-      }\n-    }catch(e){\n-      console.log('Leave Error: ', e)\n-    }\n-    navigation.goBack()\n-  }\n-\n-  const _switchCamera =async()=>{\n-    try{\n-      await engine.enableLocalVideo(!video)\n-      setvideo(!video)\n-    }catch(e){\n-      console.log(e)\n-    }\n-  }\n-\n-  const _switchMicrophone = async() => {\n-    try{\n-      await engine.enableLocalAudio(!muted)\n-      setmuted(!muted)\n-    }catch(e){\n-      console.log(e)\n-    }\n-  };\n-\n-  const _switchSpeakerphone = () => {\n-    try{\n-      engine.setEnableSpeakerphone(!speaker)\n-      setspeaker(!speaker)\n-    }catch(e){\n-      console.log(e)\n-    }\n-  }\n-\n-  useEffect(() => {\n-    // _init()\n-    \n-    (async()=>{\n-      try{\n-        let res = await axios.get('https://api.clarondoc.com/urgent/token')\n-        _init(res.data.RTCChannel, res.data.RTCAccessToken)\n-\n-        const user = JSON.parse(await AsyncStorage.getItem('user'));\n-        // console.log(user.firstname)\n-\n-        let doc = await firebase.firestore().collection('normal_calls').doc(patient_email).set({data: {\n-          time: new Date(),\n-          patient: patient_email,\n-          doctor: doctor_email,\n-          caller: `${user.firstname} ${user.lastname}`,\n-          status: 'started',\n-          end_now: 'false',\n-          channel: res.data.RTCChannel,\n-          token: res.data.RTCAccessToken\n-        }})\n-\n-      }catch(e){\n-        console.log('aa')\n-        console.log(e)\n-      }\n-    })()\n-\n-    return () => {\n-      engine.destroy()\n-    }\n-  }, [])\n-\n-  return (\n-    <Layout style={{flex: 1}}>\n-      <SafeAreaView style={{flex: 1}}>\n-        <StatusBar barStyle={isDarkMode ? 'light-content' : 'dark-content'} />\n-\n-        { joined ?\n-        <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n-          \n-          {remoteid != null ?\n-          <RtcRemoteView.SurfaceView\n-            style={{flex: 1, position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, zIndex: -1}}\n-            uid={remoteid}\n-            zOrderMediaOverlay={true}\n-          /> : <Text category={'h5'}>Connecting...</Text> }\n-          \n-          <RtcLocalView.SurfaceView zOrderMediaOverlay={true} style={remoteid == null ? styles.localConnecting : styles.localConnected} />\n-        </Layout>\n-        :\n-        // <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n-        //   <Text category={'h5'}>Connecting...</Text>\n-        // </Layout>\n-        <RtcLocalView.SurfaceView style={styles.localConnecting} />\n-        // <Text />\n-        }\n-        <View style={{position: 'absolute', bottom: 35, left: 15, right: 15, alignItems: 'center', justifyContent: 'space-around', flexDirection: 'row'}}>\n-          <Button onPress={_switchCamera} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={VideoIcon} appearance={video ? 'filled' : 'outline'}></Button>\n-          <Button onPress={_switchMicrophone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={MuteIcon} appearance={muted ? 'filled' : 'outline'}></Button>\n-          <Button onPress={_leaveChannel} status={'danger'} style={{height: 75, width: 75, borderRadius: 75}} accessoryLeft={EndIcon} appearance={'filled'}></Button>\n-          <Button onPress={_switchSpeakerphone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={SpeakerIcon} appearance={speaker ? 'filled' : 'outline'}></Button>\n-        </View>\n-      </SafeAreaView>\n-    </Layout>\n-  );\n-};\n-\n-const styles = StyleSheet.create({\n-  sectionContainer: {\n-    marginTop: 32,\n-    paddingHorizontal: 24,\n-  },\n-  sectionTitle: {\n-    fontSize: 24,\n-    fontWeight: '600',\n-  },\n-  sectionDescription: {\n-    marginTop: 8,\n-    fontSize: 18,\n-    fontWeight: '400',\n-  },\n-  highlight: {\n-    fontWeight: '700',\n-  },\n-  localConnecting: {\n-    top: 0,\n-    right: 0,\n-    bottom: 0,\n-    left: 0,\n-    position: 'absolute',\n-  },\n-  localConnected: {\n-    height: 200,\n-    width: 150,\n-    borderRadius: 5,\n-    backgroundColor: '#141414',\n-    position: 'absolute',\n-    top: 50,\n-    right: 15,\n-    zIndex: 99\n-  }\n-});\n-\n-export default VideoCall;\n"
                },
                {
                    "date": 1641130650409,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -223,9 +223,9 @@\n             uid={remoteid}\n             zOrderMediaOverlay={false}\n           /> : <Text category={'h5'}>Connecting...</Text> }\n           \n-          {/* <RtcLocalView.SurfaceView zOrderMediaOverlay={true} style={remoteid == null ? styles.localConnecting : styles.localConnected} /> */}\n+          <RtcLocalView.SurfaceView zOrderMediaOverlay={true} style={remoteid == null ? styles.localConnecting : styles.localConnected} />\n         </Layout>\n         :\n         // <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n         //   <Text category={'h5'}>Connecting...</Text>\n"
                },
                {
                    "date": 1641130657293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,14 +216,14 @@\n \n         { joined ?\n         <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n           \n-          {remoteid != null ?\n+          {/* {remoteid != null ?\n           <RtcRemoteView.SurfaceView\n             style={{flex: 1, position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, zIndex: -1}}\n             uid={remoteid}\n             zOrderMediaOverlay={false}\n-          /> : <Text category={'h5'}>Connecting...</Text> }\n+          /> : <Text category={'h5'}>Connecting...</Text> } */}\n           \n           <RtcLocalView.SurfaceView zOrderMediaOverlay={true} style={remoteid == null ? styles.localConnecting : styles.localConnected} />\n         </Layout>\n         :\n"
                },
                {
                    "date": 1641130663599,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,14 +216,14 @@\n \n         { joined ?\n         <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n           \n-          {/* {remoteid != null ?\n+          {remoteid != null ?\n           <RtcRemoteView.SurfaceView\n             style={{flex: 1, position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, zIndex: -1}}\n             uid={remoteid}\n             zOrderMediaOverlay={false}\n-          /> : <Text category={'h5'}>Connecting...</Text> } */}\n+          /> : <Text category={'h5'}>Connecting...</Text> }\n           \n           <RtcLocalView.SurfaceView zOrderMediaOverlay={true} style={remoteid == null ? styles.localConnecting : styles.localConnected} />\n         </Layout>\n         :\n"
                },
                {
                    "date": 1641131245435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -221,9 +221,9 @@\n           <RtcRemoteView.SurfaceView\n             style={{flex: 1, position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, zIndex: -1}}\n             uid={remoteid}\n             zOrderMediaOverlay={false}\n-          /> : <Text category={'h5'}>Connecting...</Text> }\n+          /> : <Text style={{zIndex: 99999}} category={'h5'}>Connecting...</Text> }\n           \n           <RtcLocalView.SurfaceView zOrderMediaOverlay={true} style={remoteid == null ? styles.localConnecting : styles.localConnected} />\n         </Layout>\n         :\n"
                },
                {
                    "date": 1641131867927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,8 +170,9 @@\n   const _switchSpeakerphone = () => {\n     try{\n       engine.setEnableSpeakerphone(!speaker)\n       setspeaker(!speaker)\n+      console.log('speaker is:', !speaker)\n     }catch(e){\n       console.log(e)\n     }\n   }\n"
                },
                {
                    "date": 1641132986915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,9 +102,9 @@\n     })\n \n     _engine.addListener('UserJoined', (uid, elapsed) => {\n       console.info('UserJoined', uid, elapsed);\n-      // engine.stopPreview()\n+      engine.stopPreview()\n       setremoteid(uid)\n     })\n \n     _engine?.addListener('UserOffline', (uid, reason) => {\n"
                },
                {
                    "date": 1641133166688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,9 +102,9 @@\n     })\n \n     _engine.addListener('UserJoined', (uid, elapsed) => {\n       console.info('UserJoined', uid, elapsed);\n-      engine.stopPreview()\n+      _engine.stopPreview()\n       setremoteid(uid)\n     })\n \n     _engine?.addListener('UserOffline', (uid, reason) => {\n"
                },
                {
                    "date": 1641157027842,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,286 @@\n+import { Button, Icon, Layout, Text } from '@ui-kitten/components';\n+import React, {useEffect, useState} from 'react';\n+import axios from 'axios';\n+import AsyncStorage from '@react-native-async-storage/async-storage';\n+import {\n+  SafeAreaView,\n+  PermissionsAndroid,\n+  StatusBar,\n+  StyleSheet,\n+  useColorScheme,\n+  Platform,\n+  View,\n+  TouchableOpacity\n+} from 'react-native';\n+import RtcEngine, {\n+  ChannelProfile,\n+  ClientRole,\n+  RtcEngineContext,\n+  RtcLocalView,\n+  RtcRemoteView\n+} from 'react-native-agora';\n+import firebase from 'firebase';\n+\n+const SpeakerIcon = (props)=><Icon {...props} name=\"volume-up-outline\"/>\n+const EndIcon = (props)=><Icon {...props} name=\"close-outline\"/>\n+const MuteIcon = (props)=><Icon {...props} name=\"mic-off-outline\"/>\n+const VideoIcon = (props)=><Icon {...props} name=\"video-outline\"/>\n+\n+const VideoCall = ({navigation, route}) => {\n+  const doctor_email = route.params.doctor_email;\n+  const patient_email = route.params.patient_email;\n+\n+  const isDarkMode = useColorScheme() === 'dark';\n+  const [joined, setjoined] = useState(false)\n+  const [engine, setengine] = useState()\n+  const [muted, setmuted] = useState(false)\n+  const [video, setvideo] = useState(true)\n+  const [speaker, setspeaker] = useState(false)\n+  const [remoteid, setremoteid] = useState()\n+  let _engine\n+\n+  console.log(remoteid)\n+\n+  const _init = async (channel, token) => {\n+    _engine = await RtcEngine.createWithContext(\n+      new RtcEngineContext('a90dea913c844cd7bcada446242c6150')\n+    )\n+\n+    setengine(_engine)\n+\n+    requestCameraAndAudioPermission()\n+\n+    _addListeners()\n+    await _engine.enableVideo()\n+    await _engine.startPreview()\n+    await _engine.enableLocalVideo(true)\n+    await _engine.startPreview()\n+    await _engine.setChannelProfile(ChannelProfile.LiveBroadcasting)\n+    await _engine.setClientRole(ClientRole.Broadcaster)\n+    try{\n+      // await _engine.joinChannel('006a90dea913c844cd7bcada446242c6150IAA0Kk/v+DSMEdW7apteZTf19Fz2BUqa3+nMAj7HeO9KYwO7xC0AAAAAEACLgpZh2C8vYQEAAQDVLy9h',\n+      // 'urgent', null, 0)\n+\n+      await _engine.joinChannel(token,\n+      channel, null, 0)\n+    }catch(e){\n+      console.log(e)\n+    }\n+  }\n+\n+  const requestCameraAndAudioPermission = async () =>{\n+    try {\n+        const granted = await PermissionsAndroid.requestMultiple([\n+            PermissionsAndroid.PERMISSIONS.RECORD_AUDIO,\n+            PermissionsAndroid.PERMISSIONS.CAMERA,\n+        ])\n+        if (\n+            granted['android.permission.RECORD_AUDIO'] === PermissionsAndroid.RESULTS.GRANTED\n+        ) {\n+            console.log('You can use the mic')\n+            console.log(granted)\n+        } else {\n+            console.log('Permission denied')\n+        }\n+    } catch (err) {\n+        console.warn(err)\n+    }\n+  }\n+\n+  const _addListeners = () => {\n+    _engine.addListener('JoinChannelSuccess', (channel, uid, elapsed) => {\n+      console.info('JoinChannelSuccess', channel, uid)\n+      setjoined(true)\n+    })\n+\n+    _engine.addListener('LeaveChannel', (stats) => {\n+      console.info('LeaveChannel', stats)\n+      setjoined(false)\n+      try{\n+        navigation.goBack()\n+      }catch(e){\n+\n+      }\n+    })\n+\n+    _engine.addListener('UserJoined', (uid, elapsed) => {\n+      console.info('UserJoined', uid, elapsed);\n+      _engine.stopPreview()\n+      setremoteid(uid)\n+    })\n+\n+    _engine?.addListener('UserOffline', (uid, reason) => {\n+      console.info('UserOffline', uid, reason);\n+      setremoteid(null)\n+      try{\n+        navigation.goBack()\n+      }catch(e){\n+\n+      }\n+    })\n+\n+    // _engine.addListener('JoinChannelError', (e)=>{\n+    //   console.log(e)\n+    // })\n+  }\n+\n+  const _onChangeRecordingVolume = (value) => {\n+    _engine.adjustRecordingSignalVolume(value * 400)\n+  }\n+\n+  const _onChangePlaybackVolume = (value) => {\n+    _engine.adjustPlaybackSignalVolume(value * 400)\n+  }\n+\n+  const _toggleInEarMonitoring = (isEnabled) => {\n+    _engine.enableInEarMonitoring(isEnabled)\n+  }\n+\n+  const _onChangeInEarMonitoringVolume = (value) => {\n+    _engine.setInEarMonitoringVolume(value * 400)\n+  }\n+\n+  const _leaveChannel = async () => {\n+    try{\n+      if(_engine !=null){\n+        await _engine.leaveChannel()\n+      }\n+    }catch(e){\n+      console.log('Leave Error: ', e)\n+    }\n+    navigation.goBack()\n+  }\n+\n+  const _switchCamera =async()=>{\n+    try{\n+      await engine.enableLocalVideo(!video)\n+      setvideo(!video)\n+    }catch(e){\n+      console.log(e)\n+    }\n+  }\n+\n+  const _switchMicrophone = async() => {\n+    try{\n+      await engine.enableLocalAudio(!muted)\n+      setmuted(!muted)\n+    }catch(e){\n+      console.log(e)\n+    }\n+  };\n+\n+  const _switchSpeakerphone = () => {\n+    try{\n+      engine.setEnableSpeakerphone(!speaker)\n+      setspeaker(!speaker)\n+      console.log('speaker is:', !speaker)\n+    }catch(e){\n+      console.log(e)\n+    }\n+  }\n+\n+  useEffect(() => {\n+    // _init()\n+    \n+    (async()=>{\n+      try{\n+        let res = await axios.get('https://api.clarondoc.com/urgent/token')\n+        _init(res.data.RTCChannel, res.data.RTCAccessToken)\n+\n+        const user = JSON.parse(await AsyncStorage.getItem('user'));\n+        // console.log(user.firstname)\n+\n+        let doc = await firebase.firestore().collection('normal_calls').doc(patient_email).set({data: {\n+          time: new Date(),\n+          patient: patient_email,\n+          doctor: doctor_email,\n+          caller: `${user.firstname} ${user.lastname}`,\n+          status: 'started',\n+          end_now: 'false',\n+          channel: res.data.RTCChannel,\n+          token: res.data.RTCAccessToken\n+        }})\n+\n+      }catch(e){\n+        console.log('aa')\n+        console.log(e)\n+      }\n+    })()\n+\n+    return () => {\n+      engine.destroy()\n+    }\n+  }, [])\n+\n+  return (\n+    <Layout style={{flex: 1}}>\n+      <SafeAreaView style={{flex: 1}}>\n+        <StatusBar barStyle={isDarkMode ? 'light-content' : 'dark-content'} />\n+\n+        { joined ?\n+        <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n+          \n+          {remoteid != null ?\n+          <RtcRemoteView.SurfaceView\n+            style={{flex: 1, position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, zIndex: -1}}\n+            uid={remoteid}\n+            zOrderMediaOverlay={false}\n+          /> : <Text style={{zIndex: 99999}} category={'h5'}>Connecting...</Text> }\n+          \n+          <RtcLocalView.SurfaceView zOrderMediaOverlay={true} style={remoteid == null ? styles.localConnecting : styles.localConnected} />\n+        </Layout>\n+        :\n+        // <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n+        //   <Text category={'h5'}>Connecting...</Text>\n+        // </Layout>\n+        <RtcLocalView.SurfaceView style={styles.localConnecting} />\n+        // <Text />\n+        }\n+        <View style={{position: 'absolute', bottom: 35, left: 15, right: 15, alignItems: 'center', justifyContent: 'space-around', flexDirection: 'row'}}>\n+          <Button onPress={_switchCamera} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={VideoIcon} appearance={video ? 'filled' : 'outline'}></Button>\n+          <Button onPress={_switchMicrophone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={MuteIcon} appearance={muted ? 'filled' : 'outline'}></Button>\n+          <Button onPress={_leaveChannel} status={'danger'} style={{height: 75, width: 75, borderRadius: 75}} accessoryLeft={EndIcon} appearance={'filled'}></Button>\n+          <Button onPress={_switchSpeakerphone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={SpeakerIcon} appearance={speaker ? 'filled' : 'outline'}></Button>\n+        </View>\n+      </SafeAreaView>\n+    </Layout>\n+  );\n+};\n+\n+const styles = StyleSheet.create({\n+  sectionContainer: {\n+    marginTop: 32,\n+    paddingHorizontal: 24,\n+  },\n+  sectionTitle: {\n+    fontSize: 24,\n+    fontWeight: '600',\n+  },\n+  sectionDescription: {\n+    marginTop: 8,\n+    fontSize: 18,\n+    fontWeight: '400',\n+  },\n+  highlight: {\n+    fontWeight: '700',\n+  },\n+  localConnecting: {\n+    top: 0,\n+    right: 0,\n+    bottom: 0,\n+    left: 0,\n+    position: 'absolute',\n+  },\n+  localConnected: {\n+    height: 200,\n+    width: 150,\n+    borderRadius: 5,\n+    backgroundColor: '#141414',\n+    position: 'absolute',\n+    top: 50,\n+    right: 15,\n+    zIndex: 99\n+  }\n+});\n+\n+export default VideoCall;\n"
                },
                {
                    "date": 1641157626823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -237,9 +237,9 @@\n         // <Text />\n         }\n         <View style={{position: 'absolute', bottom: 35, left: 15, right: 15, alignItems: 'center', justifyContent: 'space-around', flexDirection: 'row'}}>\n           <Button onPress={_switchCamera} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={VideoIcon} appearance={video ? 'filled' : 'outline'}></Button>\n-          <Button onPress={_switchMicrophone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={MuteIcon} appearance={muted ? 'filled' : 'outline'}></Button>\n+          <Button onPress={_switchMicrophone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={MuteIcon} appearance={!muted ? 'filled' : 'outline'}></Button>\n           <Button onPress={_leaveChannel} status={'danger'} style={{height: 75, width: 75, borderRadius: 75}} accessoryLeft={EndIcon} appearance={'filled'}></Button>\n           <Button onPress={_switchSpeakerphone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={SpeakerIcon} appearance={speaker ? 'filled' : 'outline'}></Button>\n         </View>\n       </SafeAreaView>\n"
                }
            ],
            "date": 1641085232002,
            "name": "Commit-0",
            "content": "import { Button, Icon, Layout, Text } from '@ui-kitten/components';\nimport React, {useEffect, useState} from 'react';\nimport {\n  SafeAreaView,\n  PermissionsAndroid,\n  StatusBar,\n  StyleSheet,\n  useColorScheme,\n  Platform,\n  View,\n  TouchableOpacity\n} from 'react-native';\nimport RtcEngine, {\n  ChannelProfile,\n  ClientRole,\n  RtcEngineContext,\n  RtcLocalView,\n  RtcRemoteView\n} from 'react-native-agora';\nimport firebase from 'firebase';\n\nconst SpeakerIcon = (props)=><Icon {...props} name=\"volume-up-outline\"/>\nconst EndIcon = (props)=><Icon {...props} name=\"close-outline\"/>\nconst MuteIcon = (props)=><Icon {...props} name=\"mic-off-outline\"/>\n\nconst VideoCall = ({navigation}) => {\n  const isDarkMode = useColorScheme() === 'dark';\n  const [joined, setjoined] = useState(false)\n  const [engine, setengine] = useState()\n  const [muted, setmuted] = useState(false)\n  const [speaker, setspeaker] = useState(false)\n  const [remoteid, setremoteid] = useState()\n  let _engine\n\n  const _init = async () => {\n    _engine = await RtcEngine.createWithContext(\n      new RtcEngineContext('a90dea913c844cd7bcada446242c6150')\n    )\n\n    setengine(_engine)\n\n    _addListeners()\n\n    await _engine.enableVideo()\n    await _engine.startPreview()\n    await _engine.setChannelProfile(ChannelProfile.LiveBroadcasting)\n    await _engine.setClientRole(ClientRole.Broadcaster)\n    try{\n      await _engine.joinChannel('006a90dea913c844cd7bcada446242c6150IAA0Kk/v+DSMEdW7apteZTf19Fz2BUqa3+nMAj7HeO9KYwO7xC0AAAAAEACLgpZh2C8vYQEAAQDVLy9h',\n      'urgent', null, 0)\n    }catch(e){\n      console.log(e)\n    }\n  }\n\n  const _addListeners = () => {\n    _engine.addListener('JoinChannelSuccess', (channel, uid, elapsed) => {\n      console.info('JoinChannelSuccess', channel, uid)\n      setjoined(true)\n    })\n\n    _engine.addListener('LeaveChannel', (stats) => {\n      console.info('LeaveChannel', stats)\n      setjoined(false)\n      try{\n        navigation.goBack()\n      }catch(e){\n\n      }\n    })\n\n    _engine.addListener('UserJoined', (uid, elapsed) => {\n      console.info('UserJoined', uid, elapsed);\n      setremoteid(uid)\n    })\n\n    _engine?.addListener('UserOffline', (uid, reason) => {\n      console.info('UserOffline', uid, reason);\n      setremoteid(null)\n      try{\n        navigation.goBack()\n      }catch(e){\n\n      }\n    })\n\n    // _engine.addListener('JoinChannelError', (e)=>{\n    //   console.log(e)\n    // })\n  }\n\n  const _onChangeRecordingVolume = (value) => {\n    _engine.adjustRecordingSignalVolume(value * 400)\n  }\n\n  const _onChangePlaybackVolume = (value) => {\n    _engine.adjustPlaybackSignalVolume(value * 400)\n  }\n\n  const _toggleInEarMonitoring = (isEnabled) => {\n    _engine.enableInEarMonitoring(isEnabled)\n  }\n\n  const _onChangeInEarMonitoringVolume = (value) => {\n    _engine.setInEarMonitoringVolume(value * 400)\n  }\n\n  const _leaveChannel = async () => {\n    try{\n      if(_engine !=null){\n        await _engine.leaveChannel()\n      }\n    }catch(e){\n      console.log('Leave Error: ', e)\n    }\n    navigation.goBack()\n  }\n\n  const _switchMicrophone = async() => {\n    try{\n      await engine.enableLocalAudio(!muted)\n      setmuted(!muted)\n    }catch(e){\n      console.log(e)\n    }\n  };\n\n  const _switchSpeakerphone = () => {\n    try{\n      engine.setEnableSpeakerphone(!speaker)\n      setspeaker(!speaker)\n    }catch(e){\n      console.log(e)\n    }\n  }\n\n  useEffect(() => {\n    _init()\n    return () => {\n      engine.destroy()\n    }\n  }, [])\n\n  return (\n    <Layout style={{flex: 1}}>\n      <SafeAreaView style={{flex: 1}}>\n        <StatusBar barStyle={isDarkMode ? 'light-content' : 'dark-content'} />\n\n        { joined ?\n        <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n          <RtcLocalView.SurfaceView style={remoteid == null ? styles.localConnecting : styles.localConnected} />\n\n          {remoteid != null ?\n          <RtcRemoteView.SurfaceView\n            style={{flex: 1}}\n            uid={remoteid}\n            zOrderMediaOverlay={true}\n          /> : <Text category={'h5'}>Connecting...</Text> }\n        </Layout>\n        :\n        // <Layout style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n        //   <Text category={'h5'}>Connecting...</Text>\n        // </Layout>\n        <RtcLocalView.SurfaceView style={styles.localConnecting} />\n        }\n        <View style={{position: 'absolute', bottom: 35, left: 15, right: 15, alignItems: 'center', justifyContent: 'space-around', flexDirection: 'row'}}>\n          <Button onPress={_switchMicrophone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={MuteIcon} appearance={muted ? 'filled' : 'outline'}></Button>\n          <Button onPress={_leaveChannel} status={'danger'} style={{height: 75, width: 75, borderRadius: 75}} accessoryLeft={EndIcon} appearance={'filled'}></Button>\n          <Button onPress={_switchSpeakerphone} status={'basic'} style={{height: 65, width: 65, borderRadius: 65}} accessoryLeft={SpeakerIcon} appearance={speaker ? 'filled' : 'outline'}></Button>\n        </View>\n      </SafeAreaView>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  sectionContainer: {\n    marginTop: 32,\n    paddingHorizontal: 24,\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: '600',\n  },\n  sectionDescription: {\n    marginTop: 8,\n    fontSize: 18,\n    fontWeight: '400',\n  },\n  highlight: {\n    fontWeight: '700',\n  },\n  localConnecting: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    position: 'absolute'\n  },\n  localConnected: {\n    height: 200,\n    width: 150,\n    borderRadius: 5,\n    backgroundColor: '#141414',\n    position: 'absolute',\n    top: 50,\n    right: 15\n  }\n});\n\nexport default VideoCall;\n"
        }
    ]
}