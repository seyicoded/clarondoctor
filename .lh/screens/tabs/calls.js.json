{
    "sourceFile": "screens/tabs/calls.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 18,
            "patches": [
                {
                    "date": 1641082284519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1641082323567,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React, { useEffect, useState } from 'react';\n import * as Reuse from '../../components/reusables'\n import * as API from '../../api'\n import { Icon, Calendar, Layout, Text, Button, Modal, Card, Input, Divider } from '@ui-kitten/components';\n-import { FlatList, ScrollView, StyleSheet, Dimensions, View, TouchableOpacity } from 'react-native';\n+import { FlatList, ScrollView, StyleSheet, Dimensions, View, TouchableOpacity, ActivityIndicator } from 'react-native';\n \n const CallIcon = (props)=><Icon {...props} name=\"phone-call-outline\"/>\n \n const Calls = ({navigation}) =>{\n"
                },
                {
                    "date": 1641082349120,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,9 @@\n   const [query, setquery] = useState()\n   const [filteredusers, setfilteredusers] = useState([])\n   const [users, setusers] = useState([])\n   const [newcall, setnewcall] = useState(false)\n+  const [loading, setloading] = useState(false)\n \n   const DayCell = ( {date}, style) => (\n     <View\n       style={[styles.dayContainer, style.container]}>\n"
                },
                {
                    "date": 1641082409580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,9 @@\n   );\n \n   const getSchedule = async ()=>{\n     try{\n+      setloading(true)\n       let requests = await API.getSchedule()\n       setrequests(requests)\n       \n       let days = []\n@@ -45,8 +46,9 @@\n \n     }catch(e){\n       console.log('failed to get schedule: ', e)\n     }\n+    setloading(false)\n   }\n \n   const filter = (date)=>{\n     setnow(date)\n"
                },
                {
                    "date": 1641083131580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,8 +62,10 @@\n       let done = await API.respondRequest(response, id)\n       if(done){\n         getSchedule()\n       }\n+\n+      console.log(done)\n     }catch(e){\n       console.log(e)\n     }\n   }\n"
                },
                {
                    "date": 1641083427441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { useEffect, useState } from 'react';\n import * as Reuse from '../../components/reusables'\n import * as API from '../../api'\n-import { Icon, Calendar, Layout, Text, Button, Modal, Card, Input, Divider } from '@ui-kitten/components';\n+import { Icon, Calendar, Layout, Text, Button, Modal, Card, Input, Divider, ScrollView } from '@ui-kitten/components';\n import { FlatList, ScrollView, StyleSheet, Dimensions, View, TouchableOpacity, ActivityIndicator } from 'react-native';\n \n const CallIcon = (props)=><Icon {...props} name=\"phone-call-outline\"/>\n \n@@ -131,9 +131,10 @@\n             </Button>\n           </Card>\n         </Modal>\n \n-        {/* <Text style={{margin: 10}} category='h4'>Calls</Text> */}\n+        <ScrollView>\n+          {/* <Text style={{margin: 10}} category='h4'>Calls</Text> */}\n           <Calendar\n             date={now}\n             collapsable\n             onSelect={filter}\n@@ -152,8 +153,9 @@\n             }}/>\n             :\n             <Text category={'s1'} style={{margin: 15, textAlign: 'center'}}>No scheduled consultations for selected date</Text>\n           }\n+        </ScrollView>\n \n           <Button onPress={()=>setnewcall(true)} style={{bottom: 15, right: 15, height: 50, width: 50, borderRadius: 50, position: 'absolute'}} accessoryLeft={CallIcon} />\n \n       </Layout>\n"
                },
                {
                    "date": 1641083454267,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { useEffect, useState } from 'react';\n import * as Reuse from '../../components/reusables'\n import * as API from '../../api'\n-import { Icon, Calendar, Layout, Text, Button, Modal, Card, Input, Divider, ScrollView } from '@ui-kitten/components';\n+import { Icon, Calendar, Layout, Text, Button, Modal, Card, Input, Divider } from '@ui-kitten/components';\n import { FlatList, ScrollView, StyleSheet, Dimensions, View, TouchableOpacity, ActivityIndicator } from 'react-native';\n \n const CallIcon = (props)=><Icon {...props} name=\"phone-call-outline\"/>\n \n"
                },
                {
                    "date": 1641084076914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,8 +143,13 @@\n             shouldRasterizeIOS\n             style={{alignSelf: 'center', margin: 10}}\n           />\n \n+          {\n+            (loading && <View style={{width: '100%'}}>\n+              <ActivityIndicator />\n+            </View>)\n+          }\n           { selected.length > 0 ?\n           <FlatList\n             data={selected}\n             keyExtractor={item=>item.id}\n"
                },
                {
                    "date": 1641084229091,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n       if(done){\n         getSchedule()\n       }\n \n-      console.log(done)\n+      // console.log(done)\n     }catch(e){\n       console.log(e)\n     }\n   }\n"
                },
                {
                    "date": 1641084337034,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,186 @@\n+import React, { useEffect, useState } from 'react';\n+import * as Reuse from '../../components/reusables'\n+import * as API from '../../api'\n+import { Icon, Calendar, Layout, Text, Button, Modal, Card, Input, Divider } from '@ui-kitten/components';\n+import { FlatList, ScrollView, StyleSheet, Dimensions, View, TouchableOpacity, ActivityIndicator } from 'react-native';\n+\n+const CallIcon = (props)=><Icon {...props} name=\"phone-call-outline\"/>\n+\n+const Calls = ({navigation}) =>{\n+\n+  const [now, setnow] = useState(new Date())\n+  const [requests, setrequests] = useState([])\n+  const [selected, setselected] = useState([])\n+  const [hascall, sethascall] = useState([])\n+  const [query, setquery] = useState()\n+  const [filteredusers, setfilteredusers] = useState([])\n+  const [users, setusers] = useState([])\n+  const [newcall, setnewcall] = useState(false)\n+  const [loading, setloading] = useState(false)\n+\n+  const DayCell = ( {date}, style) => (\n+    <View\n+      style={[styles.dayContainer, style.container]}>\n+      <Text style={style.text}>{`${date.getDate()}`}</Text>\n+      { hascall.includes(date.toString().substring(0, 10)) ?\n+      <Icon fill={now == date ? '#ffffff' : '#1BCC88'} name=\"radio-button-on-outline\" style={{height: 5, width: 5}}/> : null }\n+    </View>\n+  );\n+\n+  const getSchedule = async ()=>{\n+    try{\n+      setloading(true)\n+      let requests = await API.getSchedule()\n+      setrequests(requests)\n+      \n+      let days = []\n+      requests.forEach(request=>{\n+        !days.includes(new Date(request.createDate).toString().substring(0, 10)) ? days.push(new Date(request.createDate).toString().substring(0, 10)) : null\n+      })\n+\n+      setselected(requests.filter(request=>{\n+        return new Date().toString().substring(0, 10) == new Date(request.createDate).toString().substring(0, 10)\n+      }))\n+\n+      sethascall(days)\n+\n+    }catch(e){\n+      console.log('failed to get schedule: ', e)\n+    }\n+    setloading(false)\n+  }\n+\n+  const filter = (date)=>{\n+    setnow(date)\n+    setselected(requests.filter(request=>{\n+      return date.toString().substring(0, 10) == new Date(request.createDate).toString().substring(0, 10)\n+    }))\n+  }\n+\n+  const respond = async (response, id)=>{\n+    try{\n+      let done = await API.respondRequest(response, id)\n+      if(done){\n+        getSchedule()\n+      }\n+\n+      // console.log(done)\n+    }catch(e){\n+      console.log(e)\n+    }\n+  }\n+\n+  const search = (text)=>{\n+    setquery(text)\n+    setfilteredusers(users.filter(user=>\n+        user.firstname.toLowerCase().includes(text.toLowerCase()) ||\n+        user.lastname.toLowerCase().includes(text.toLowerCase()) ||\n+        user.phone.toLowerCase().includes(text.toLowerCase()) ||\n+        user.email.toLowerCase().includes(text.toLowerCase())\n+      )\n+    )\n+  }\n+\n+  const getPatients = async()=>{\n+    try{\n+\n+      let users = await API.getPatients(' ')\n+      setfilteredusers(users)\n+      setusers(users)\n+\n+    }catch(e){\n+      console.log('error fetching patients', e)\n+    }\n+  }\n+\n+  useEffect(() => {\n+    getSchedule()\n+    getPatients()\n+    return () => {\n+      \n+    }\n+  }, [])\n+  \n+  return (\n+      <Layout style={{ flex: 1 }}>\n+\n+        <Modal\n+          visible={newcall}\n+          backdropStyle={styles.backdrop}\n+          onBackdropPress={()=>{setquery(''); setfilteredusers(users); setnewcall(false);}}>\n+          <Card style={{width: Dimensions.get('screen').width-50}} disabled={true}>\n+            <Text category={'h6'} style={{margin: 10, textAlign: 'center'}}>Make Urgent Call to Patient</Text>\n+            \n+            <Input autoCapitalize={'none'} placeholder={'Search for patient...'} value={query} onChangeText={search}/>\n+            <FlatList\n+              data={filteredusers}\n+              style={{maxHeight: 200, marginVertical: 10}}\n+              keyExtractor={item=>item.email}\n+              renderItem={({item})=>{\n+                return <TouchableOpacity onPress={()=>{setnewcall(false); navigation.navigate('Urgent', {user: item})}}>\n+                  <View style={{marginVertical: 5}}>\n+                    <Text>{item.firstname} {item.lastname}</Text>\n+                    <Text appearance={'hint'} category={'c2'}>{item.email} &middot; {item.phone}</Text>\n+                    <Divider style={{marginTop: 5}}/>\n+                  </View>\n+                </TouchableOpacity>\n+              }}/>\n+\n+            <Button status={'basic'} appearance={'ghost'} onPress={()=>{setquery(''); setfilteredusers(users); setnewcall(false);}}>\n+              Dismiss\n+            </Button>\n+          </Card>\n+        </Modal>\n+\n+        <ScrollView>\n+          {/* <Text style={{margin: 10}} category='h4'>Calls</Text> */}\n+          <Calendar\n+            date={now}\n+            collapsable\n+            onSelect={filter}\n+            renderDay={DayCell}\n+            // min={new Date()}\n+            shouldRasterizeIOS\n+            style={{alignSelf: 'center', margin: 10}}\n+          />\n+\n+          {\n+            (loading && <View style={{width: '100%'}}>\n+              <ActivityIndicator />\n+            </View>)\n+          }\n+          { selected.length > 0 ?\n+          <FlatList\n+            data={selected}\n+            keyExtractor={item=>item.id}\n+            renderItem={({item})=>{\n+              return <Reuse.call respond={respond} request={item} nav={navigation} />\n+            }}/>\n+            :\n+            <Text category={'s1'} style={{margin: 15, textAlign: 'center'}}>No scheduled consultations for selected date</Text>\n+          }\n+        </ScrollView>\n+\n+          <Button onPress={()=>setnewcall(true)} style={{bottom: 15, right: 15, height: 50, width: 50, borderRadius: 50, position: 'absolute'}} accessoryLeft={CallIcon} />\n+\n+      </Layout>\n+  );\n+}\n+\n+export default Calls\n+\n+const styles = StyleSheet.create({\n+  dayContainer: {\n+    flex: 1,\n+    justifyContent: 'center',\n+    alignItems: 'center',\n+    aspectRatio: 1,\n+  },\n+  value: {\n+    fontSize: 12,\n+    fontWeight: '400',\n+  },\n+  backdrop: {\n+    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n+  }\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1641084342500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -182,191 +182,5 @@\n   },\n   backdrop: {\n     backgroundColor: 'rgba(0, 0, 0, 0.5)',\n   }\n-});\n-import React, { useEffect, useState } from 'react';\n-import * as Reuse from '../../components/reusables'\n-import * as API from '../../api'\n-import { Icon, Calendar, Layout, Text, Button, Modal, Card, Input, Divider } from '@ui-kitten/components';\n-import { FlatList, ScrollView, StyleSheet, Dimensions, View, TouchableOpacity, ActivityIndicator } from 'react-native';\n-\n-const CallIcon = (props)=><Icon {...props} name=\"phone-call-outline\"/>\n-\n-const Calls = ({navigation}) =>{\n-\n-  const [now, setnow] = useState(new Date())\n-  const [requests, setrequests] = useState([])\n-  const [selected, setselected] = useState([])\n-  const [hascall, sethascall] = useState([])\n-  const [query, setquery] = useState()\n-  const [filteredusers, setfilteredusers] = useState([])\n-  const [users, setusers] = useState([])\n-  const [newcall, setnewcall] = useState(false)\n-  const [loading, setloading] = useState(false)\n-\n-  const DayCell = ( {date}, style) => (\n-    <View\n-      style={[styles.dayContainer, style.container]}>\n-      <Text style={style.text}>{`${date.getDate()}`}</Text>\n-      { hascall.includes(date.toString().substring(0, 10)) ?\n-      <Icon fill={now == date ? '#ffffff' : '#1BCC88'} name=\"radio-button-on-outline\" style={{height: 5, width: 5}}/> : null }\n-    </View>\n-  );\n-\n-  const getSchedule = async ()=>{\n-    try{\n-      setloading(true)\n-      let requests = await API.getSchedule()\n-      setrequests(requests)\n-      \n-      let days = []\n-      requests.forEach(request=>{\n-        !days.includes(new Date(request.createDate).toString().substring(0, 10)) ? days.push(new Date(request.createDate).toString().substring(0, 10)) : null\n-      })\n-\n-      setselected(requests.filter(request=>{\n-        return new Date().toString().substring(0, 10) == new Date(request.createDate).toString().substring(0, 10)\n-      }))\n-\n-      sethascall(days)\n-\n-    }catch(e){\n-      console.log('failed to get schedule: ', e)\n-    }\n-    setloading(false)\n-  }\n-\n-  const filter = (date)=>{\n-    setnow(date)\n-    setselected(requests.filter(request=>{\n-      return date.toString().substring(0, 10) == new Date(request.createDate).toString().substring(0, 10)\n-    }))\n-  }\n-\n-  const respond = async (response, id)=>{\n-    try{\n-      let done = await API.respondRequest(response, id)\n-      if(done){\n-        getSchedule()\n-      }\n-\n-      // console.log(done)\n-    }catch(e){\n-      console.log(e)\n-    }\n-  }\n-\n-  const search = (text)=>{\n-    setquery(text)\n-    setfilteredusers(users.filter(user=>\n-        user.firstname.toLowerCase().includes(text.toLowerCase()) ||\n-        user.lastname.toLowerCase().includes(text.toLowerCase()) ||\n-        user.phone.toLowerCase().includes(text.toLowerCase()) ||\n-        user.email.toLowerCase().includes(text.toLowerCase())\n-      )\n-    )\n-  }\n-\n-  const getPatients = async()=>{\n-    try{\n-\n-      let users = await API.getPatients(' ')\n-      setfilteredusers(users)\n-      setusers(users)\n-\n-    }catch(e){\n-      console.log('error fetching patients', e)\n-    }\n-  }\n-\n-  useEffect(() => {\n-    getSchedule()\n-    getPatients()\n-    return () => {\n-      \n-    }\n-  }, [])\n-  \n-  return (\n-      <Layout style={{ flex: 1 }}>\n-\n-        <Modal\n-          visible={newcall}\n-          backdropStyle={styles.backdrop}\n-          onBackdropPress={()=>{setquery(''); setfilteredusers(users); setnewcall(false);}}>\n-          <Card style={{width: Dimensions.get('screen').width-50}} disabled={true}>\n-            <Text category={'h6'} style={{margin: 10, textAlign: 'center'}}>Make Urgent Call to Patient</Text>\n-            \n-            <Input autoCapitalize={'none'} placeholder={'Search for patient...'} value={query} onChangeText={search}/>\n-            <FlatList\n-              data={filteredusers}\n-              style={{maxHeight: 200, marginVertical: 10}}\n-              keyExtractor={item=>item.email}\n-              renderItem={({item})=>{\n-                return <TouchableOpacity onPress={()=>{setnewcall(false); navigation.navigate('Urgent', {user: item})}}>\n-                  <View style={{marginVertical: 5}}>\n-                    <Text>{item.firstname} {item.lastname}</Text>\n-                    <Text appearance={'hint'} category={'c2'}>{item.email} &middot; {item.phone}</Text>\n-                    <Divider style={{marginTop: 5}}/>\n-                  </View>\n-                </TouchableOpacity>\n-              }}/>\n-\n-            <Button status={'basic'} appearance={'ghost'} onPress={()=>{setquery(''); setfilteredusers(users); setnewcall(false);}}>\n-              Dismiss\n-            </Button>\n-          </Card>\n-        </Modal>\n-\n-        <ScrollView>\n-          {/* <Text style={{margin: 10}} category='h4'>Calls</Text> */}\n-          <Calendar\n-            date={now}\n-            collapsable\n-            onSelect={filter}\n-            renderDay={DayCell}\n-            // min={new Date()}\n-            shouldRasterizeIOS\n-            style={{alignSelf: 'center', margin: 10}}\n-          />\n-\n-          {\n-            (loading && <View style={{width: '100%'}}>\n-              <ActivityIndicator />\n-            </View>)\n-          }\n-          { selected.length > 0 ?\n-          <FlatList\n-            data={selected}\n-            keyExtractor={item=>item.id}\n-            renderItem={({item})=>{\n-              return <Reuse.call respond={respond} request={item} nav={navigation} />\n-            }}/>\n-            :\n-            <Text category={'s1'} style={{margin: 15, textAlign: 'center'}}>No scheduled consultations for selected date</Text>\n-          }\n-        </ScrollView>\n-\n-          <Button onPress={()=>setnewcall(true)} style={{bottom: 15, right: 15, height: 50, width: 50, borderRadius: 50, position: 'absolute'}} accessoryLeft={CallIcon} />\n-\n-      </Layout>\n-  );\n-}\n-\n-export default Calls\n-\n-const styles = StyleSheet.create({\n-  dayContainer: {\n-    flex: 1,\n-    justifyContent: 'center',\n-    alignItems: 'center',\n-    aspectRatio: 1,\n-  },\n-  value: {\n-    fontSize: 12,\n-    fontWeight: '400',\n-  },\n-  backdrop: {\n-    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n-  }\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1641087592953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,12 @@\n import * as Reuse from '../../components/reusables'\n import * as API from '../../api'\n import { Icon, Calendar, Layout, Text, Button, Modal, Card, Input, Divider } from '@ui-kitten/components';\n import { FlatList, ScrollView, StyleSheet, Dimensions, View, TouchableOpacity, ActivityIndicator } from 'react-native';\n+import AsyncStorage from '@react-native-async-storage/async-storage';\n \n+console.log(AsyncStorage.getAllKeys())\n+\n const CallIcon = (props)=><Icon {...props} name=\"phone-call-outline\"/>\n \n const Calls = ({navigation}) =>{\n \n"
                },
                {
                    "date": 1641087620028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,14 +4,16 @@\n import { Icon, Calendar, Layout, Text, Button, Modal, Card, Input, Divider } from '@ui-kitten/components';\n import { FlatList, ScrollView, StyleSheet, Dimensions, View, TouchableOpacity, ActivityIndicator } from 'react-native';\n import AsyncStorage from '@react-native-async-storage/async-storage';\n \n-console.log(AsyncStorage.getAllKeys())\n-\n const CallIcon = (props)=><Icon {...props} name=\"phone-call-outline\"/>\n \n const Calls = ({navigation}) =>{\n \n+  (async()=>{\n+    console.log(await AsyncStorage.getAllKeys())\n+  })()\n+\n   const [now, setnow] = useState(new Date())\n   const [requests, setrequests] = useState([])\n   const [selected, setselected] = useState([])\n   const [hascall, sethascall] = useState([])\n"
                },
                {
                    "date": 1641087630010,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n \n const Calls = ({navigation}) =>{\n \n   (async()=>{\n-    console.log(await AsyncStorage.getAllKeys())\n+    // console.log(await AsyncStorage.getAllKeys())\n   })()\n \n   const [now, setnow] = useState(new Date())\n   const [requests, setrequests] = useState([])\n"
                },
                {
                    "date": 1641087641951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n \n const Calls = ({navigation}) =>{\n \n   (async()=>{\n-    // console.log(await AsyncStorage.getAllKeys())\n+    console.log(await AsyncStorage.getItem('user'))\n   })()\n \n   const [now, setnow] = useState(new Date())\n   const [requests, setrequests] = useState([])\n"
                },
                {
                    "date": 1641087688685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n \n const Calls = ({navigation}) =>{\n \n   (async()=>{\n-    console.log(await AsyncStorage.getItem('user'))\n+    console.log(JSON.parse(await AsyncStorage.getItem('user')))\n   })()\n \n   const [now, setnow] = useState(new Date())\n   const [requests, setrequests] = useState([])\n"
                },
                {
                    "date": 1641087717074,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,10 @@\n \n const Calls = ({navigation}) =>{\n \n   (async()=>{\n-    console.log(JSON.parse(await AsyncStorage.getItem('user')))\n+    const user = JSON.parse(await AsyncStorage.getItem('user'));\n+    console.log(user.firstname)\n   })()\n \n   const [now, setnow] = useState(new Date())\n   const [requests, setrequests] = useState([])\n"
                },
                {
                    "date": 1641087722613,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,10 +9,10 @@\n \n const Calls = ({navigation}) =>{\n \n   (async()=>{\n-    const user = JSON.parse(await AsyncStorage.getItem('user'));\n-    console.log(user.firstname)\n+    // const user = JSON.parse(await AsyncStorage.getItem('user'));\n+    // console.log(user.firstname)\n   })()\n \n   const [now, setnow] = useState(new Date())\n   const [requests, setrequests] = useState([])\n"
                },
                {
                    "date": 1641087743896,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,19 +2,14 @@\n import * as Reuse from '../../components/reusables'\n import * as API from '../../api'\n import { Icon, Calendar, Layout, Text, Button, Modal, Card, Input, Divider } from '@ui-kitten/components';\n import { FlatList, ScrollView, StyleSheet, Dimensions, View, TouchableOpacity, ActivityIndicator } from 'react-native';\n-import AsyncStorage from '@react-native-async-storage/async-storage';\n+// import AsyncStorage from '@react-native-async-storage/async-storage';\n \n const CallIcon = (props)=><Icon {...props} name=\"phone-call-outline\"/>\n \n const Calls = ({navigation}) =>{\n \n-  (async()=>{\n-    // const user = JSON.parse(await AsyncStorage.getItem('user'));\n-    // console.log(user.firstname)\n-  })()\n-\n   const [now, setnow] = useState(new Date())\n   const [requests, setrequests] = useState([])\n   const [selected, setselected] = useState([])\n   const [hascall, sethascall] = useState([])\n"
                }
            ],
            "date": 1641082284519,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from 'react';\nimport * as Reuse from '../../components/reusables'\nimport * as API from '../../api'\nimport { Icon, Calendar, Layout, Text, Button, Modal, Card, Input, Divider } from '@ui-kitten/components';\nimport { FlatList, ScrollView, StyleSheet, Dimensions, View, TouchableOpacity } from 'react-native';\n\nconst CallIcon = (props)=><Icon {...props} name=\"phone-call-outline\"/>\n\nconst Calls = ({navigation}) =>{\n\n  const [now, setnow] = useState(new Date())\n  const [requests, setrequests] = useState([])\n  const [selected, setselected] = useState([])\n  const [hascall, sethascall] = useState([])\n  const [query, setquery] = useState()\n  const [filteredusers, setfilteredusers] = useState([])\n  const [users, setusers] = useState([])\n  const [newcall, setnewcall] = useState(false)\n\n  const DayCell = ( {date}, style) => (\n    <View\n      style={[styles.dayContainer, style.container]}>\n      <Text style={style.text}>{`${date.getDate()}`}</Text>\n      { hascall.includes(date.toString().substring(0, 10)) ?\n      <Icon fill={now == date ? '#ffffff' : '#1BCC88'} name=\"radio-button-on-outline\" style={{height: 5, width: 5}}/> : null }\n    </View>\n  );\n\n  const getSchedule = async ()=>{\n    try{\n      let requests = await API.getSchedule()\n      setrequests(requests)\n      \n      let days = []\n      requests.forEach(request=>{\n        !days.includes(new Date(request.createDate).toString().substring(0, 10)) ? days.push(new Date(request.createDate).toString().substring(0, 10)) : null\n      })\n\n      setselected(requests.filter(request=>{\n        return new Date().toString().substring(0, 10) == new Date(request.createDate).toString().substring(0, 10)\n      }))\n\n      sethascall(days)\n\n    }catch(e){\n      console.log('failed to get schedule: ', e)\n    }\n  }\n\n  const filter = (date)=>{\n    setnow(date)\n    setselected(requests.filter(request=>{\n      return date.toString().substring(0, 10) == new Date(request.createDate).toString().substring(0, 10)\n    }))\n  }\n\n  const respond = async (response, id)=>{\n    try{\n      let done = await API.respondRequest(response, id)\n      if(done){\n        getSchedule()\n      }\n    }catch(e){\n      console.log(e)\n    }\n  }\n\n  const search = (text)=>{\n    setquery(text)\n    setfilteredusers(users.filter(user=>\n        user.firstname.toLowerCase().includes(text.toLowerCase()) ||\n        user.lastname.toLowerCase().includes(text.toLowerCase()) ||\n        user.phone.toLowerCase().includes(text.toLowerCase()) ||\n        user.email.toLowerCase().includes(text.toLowerCase())\n      )\n    )\n  }\n\n  const getPatients = async()=>{\n    try{\n\n      let users = await API.getPatients(' ')\n      setfilteredusers(users)\n      setusers(users)\n\n    }catch(e){\n      console.log('error fetching patients', e)\n    }\n  }\n\n  useEffect(() => {\n    getSchedule()\n    getPatients()\n    return () => {\n      \n    }\n  }, [])\n  \n  return (\n      <Layout style={{ flex: 1 }}>\n\n        <Modal\n          visible={newcall}\n          backdropStyle={styles.backdrop}\n          onBackdropPress={()=>{setquery(''); setfilteredusers(users); setnewcall(false);}}>\n          <Card style={{width: Dimensions.get('screen').width-50}} disabled={true}>\n            <Text category={'h6'} style={{margin: 10, textAlign: 'center'}}>Make Urgent Call to Patient</Text>\n            \n            <Input autoCapitalize={'none'} placeholder={'Search for patient...'} value={query} onChangeText={search}/>\n            <FlatList\n              data={filteredusers}\n              style={{maxHeight: 200, marginVertical: 10}}\n              keyExtractor={item=>item.email}\n              renderItem={({item})=>{\n                return <TouchableOpacity onPress={()=>{setnewcall(false); navigation.navigate('Urgent', {user: item})}}>\n                  <View style={{marginVertical: 5}}>\n                    <Text>{item.firstname} {item.lastname}</Text>\n                    <Text appearance={'hint'} category={'c2'}>{item.email} &middot; {item.phone}</Text>\n                    <Divider style={{marginTop: 5}}/>\n                  </View>\n                </TouchableOpacity>\n              }}/>\n\n            <Button status={'basic'} appearance={'ghost'} onPress={()=>{setquery(''); setfilteredusers(users); setnewcall(false);}}>\n              Dismiss\n            </Button>\n          </Card>\n        </Modal>\n\n        {/* <Text style={{margin: 10}} category='h4'>Calls</Text> */}\n          <Calendar\n            date={now}\n            collapsable\n            onSelect={filter}\n            renderDay={DayCell}\n            // min={new Date()}\n            shouldRasterizeIOS\n            style={{alignSelf: 'center', margin: 10}}\n          />\n\n          { selected.length > 0 ?\n          <FlatList\n            data={selected}\n            keyExtractor={item=>item.id}\n            renderItem={({item})=>{\n              return <Reuse.call respond={respond} request={item} nav={navigation} />\n            }}/>\n            :\n            <Text category={'s1'} style={{margin: 15, textAlign: 'center'}}>No scheduled consultations for selected date</Text>\n          }\n\n          <Button onPress={()=>setnewcall(true)} style={{bottom: 15, right: 15, height: 50, width: 50, borderRadius: 50, position: 'absolute'}} accessoryLeft={CallIcon} />\n\n      </Layout>\n  );\n}\n\nexport default Calls\n\nconst styles = StyleSheet.create({\n  dayContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    aspectRatio: 1,\n  },\n  value: {\n    fontSize: 12,\n    fontWeight: '400',\n  },\n  backdrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  }\n});"
        }
    ]
}