{
    "sourceFile": "screens/tabs/manage.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 13,
            "patches": [
                {
                    "date": 1639045365714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1639045647772,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,10 +16,8 @@\n let items = []\n \n const Manage = () =>{\n \n-  return (<View><Text>aaaa</Text></View>)\n-\n   const [requestlab, setrequestlab] = useState(false)\n   const [prescribe, setprescribe] = useState(false)\n   const [filteredusers, setfilteredusers] = useState([])\n   const [users, setusers] = useState([])\n"
                },
                {
                    "date": 1639045758719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -242,42 +242,9 @@\n             }}\n           />\n \n           <Text style={{margin: 10}} category='h6'>Bookings Overview</Text>\n-          <BarChart\n-            data={{\n-              labels: months.slice(new Date().getMonth() > 6 ? new Date().getMonth()%6 : 0, new Date().getMonth()),\n-              datasets: [\n-                {\n-                  data: bookings.slice(new Date().getMonth() > 6 ? new Date().getMonth()%6 : 0, new Date().getMonth())\n-                }\n-              ]\n-            }}\n-            width={Dimensions.get(\"window\").width} // from react-native\n-            height={220}\n-            yAxisInterval={1} // optional, defaults to 1\n-            chartConfig={{\n-              backgroundColor: useColorScheme() === 'dark' ? \"#222B45\" : \"#ffffff\",\n-              backgroundGradientFrom: useColorScheme() === 'dark' ? \"#222B45\" : \"#ffffff\",\n-              backgroundGradientTo: useColorScheme() === 'dark' ? \"#222B45\" : \"#ffffff\",\n-              decimalPlaces: 0, // optional, defaults to 2dp\n-              color: (opacity = 1) => `rgba(27, 204, 136, ${opacity})`,\n-              labelColor: (opacity = 1) => `rgba(27, 204, 136, ${opacity})`,\n-              style: {\n-                borderRadius: 16\n-              },\n-              propsForDots: {\n-                r: \"6\",\n-                strokeWidth: \"2\",\n-                stroke: \"#ffa726\"\n-              }\n-            }}\n-            bezier\n-            style={{\n-              marginVertical: 8,\n-              marginStart: -25,\n-            }}\n-          />\n+          \n         </ScrollView>\n \n       </Layout>\n   );\n"
                },
                {
                    "date": 1639045787167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -242,9 +242,42 @@\n             }}\n           />\n \n           <Text style={{margin: 10}} category='h6'>Bookings Overview</Text>\n-          \n+          <BarChart\n+            data={{\n+              labels: months.slice(new Date().getMonth() > 6 ? new Date().getMonth()%6 : 0, new Date().getMonth()),\n+              datasets: [\n+                {\n+                  data: bookings.slice(new Date().getMonth() > 6 ? new Date().getMonth()%6 : 0, new Date().getMonth())\n+                }\n+              ]\n+            }}\n+            width={Dimensions.get(\"window\").width} // from react-native\n+            height={220}\n+            yAxisInterval={1} // optional, defaults to 1\n+            chartConfig={{\n+              backgroundColor: useColorScheme() === 'dark' ? \"#222B45\" : \"#ffffff\",\n+              backgroundGradientFrom: useColorScheme() === 'dark' ? \"#222B45\" : \"#ffffff\",\n+              backgroundGradientTo: useColorScheme() === 'dark' ? \"#222B45\" : \"#ffffff\",\n+              decimalPlaces: 0, // optional, defaults to 2dp\n+              color: (opacity = 1) => `rgba(27, 204, 136, ${opacity})`,\n+              labelColor: (opacity = 1) => `rgba(27, 204, 136, ${opacity})`,\n+              style: {\n+                borderRadius: 16\n+              },\n+              propsForDots: {\n+                r: \"6\",\n+                strokeWidth: \"2\",\n+                stroke: \"#ffa726\"\n+              }\n+            }}\n+            bezier\n+            style={{\n+              marginVertical: 8,\n+              marginStart: -25,\n+            }}\n+          />\n         </ScrollView>\n \n       </Layout>\n   );\n"
                },
                {
                    "date": 1639045882493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -242,9 +242,9 @@\n             }}\n           />\n \n           <Text style={{margin: 10}} category='h6'>Bookings Overview</Text>\n-          <BarChart\n+          {/* <BarChart\n             data={{\n               labels: months.slice(new Date().getMonth() > 6 ? new Date().getMonth()%6 : 0, new Date().getMonth()),\n               datasets: [\n                 {\n@@ -275,9 +275,9 @@\n             style={{\n               marginVertical: 8,\n               marginStart: -25,\n             }}\n-          />\n+          /> */}\n         </ScrollView>\n \n       </Layout>\n   );\n"
                },
                {
                    "date": 1639045891333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -242,9 +242,9 @@\n             }}\n           />\n \n           <Text style={{margin: 10}} category='h6'>Bookings Overview</Text>\n-          {/* <BarChart\n+          <BarChart\n             data={{\n               labels: months.slice(new Date().getMonth() > 6 ? new Date().getMonth()%6 : 0, new Date().getMonth()),\n               datasets: [\n                 {\n@@ -275,9 +275,9 @@\n             style={{\n               marginVertical: 8,\n               marginStart: -25,\n             }}\n-          /> */}\n+          />\n         </ScrollView>\n \n       </Layout>\n   );\n"
                },
                {
                    "date": 1639045933192,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -206,9 +206,9 @@\n             }\n           </Card>\n \n           <Text style={{margin: 10}} category='h6'>Earnings Overview</Text>\n-          <LineChart\n+          {/* <LineChart\n             data={{\n               labels: months.slice(new Date().getMonth() > 6 ? new Date().getMonth()%6 : 0, new Date().getMonth()),\n               datasets: [\n                 {\n@@ -239,9 +239,9 @@\n             style={{\n               marginVertical: 8,\n               marginStart: -15\n             }}\n-          />\n+          /> */}\n \n           <Text style={{margin: 10}} category='h6'>Bookings Overview</Text>\n           <BarChart\n             data={{\n"
                },
                {
                    "date": 1639046190852,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -206,14 +206,14 @@\n             }\n           </Card>\n \n           <Text style={{margin: 10}} category='h6'>Earnings Overview</Text>\n-          {/* <LineChart\n+          <LineChart\n             data={{\n               labels: months.slice(new Date().getMonth() > 6 ? new Date().getMonth()%6 : 0, new Date().getMonth()),\n               datasets: [\n                 {\n-                  data: earnings.slice(new Date().getMonth() > 6 ? new Date().getMonth()%6 : 0, new Date().getMonth())\n+                  data: bookings.slice(new Date().getMonth() > 6 ? new Date().getMonth()%6 : 0, new Date().getMonth())\n                 }\n               ]\n             }}\n             width={Dimensions.get(\"window\").width} // from react-native\n@@ -239,9 +239,9 @@\n             style={{\n               marginVertical: 8,\n               marginStart: -15\n             }}\n-          /> */}\n+          />\n \n           <Text style={{margin: 10}} category='h6'>Bookings Overview</Text>\n           <BarChart\n             data={{\n"
                },
                {
                    "date": 1639046220568,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -206,14 +206,14 @@\n             }\n           </Card>\n \n           <Text style={{margin: 10}} category='h6'>Earnings Overview</Text>\n-          <LineChart\n+          <BarChart\n             data={{\n               labels: months.slice(new Date().getMonth() > 6 ? new Date().getMonth()%6 : 0, new Date().getMonth()),\n               datasets: [\n                 {\n-                  data: bookings.slice(new Date().getMonth() > 6 ? new Date().getMonth()%6 : 0, new Date().getMonth())\n+                  data: earnings.slice(new Date().getMonth() > 6 ? new Date().getMonth()%6 : 0, new Date().getMonth())\n                 }\n               ]\n             }}\n             width={Dimensions.get(\"window\").width} // from react-native\n"
                },
                {
                    "date": 1639046281152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,10 @@\n   const [bookings, setbookings] = useState(values.splice(new Date().getMonth()))\n   const [wallet, setwallet] = useState(0.00)\n   const [query, setquery] = useState('')\n \n+  console.log(earnings)\n+\n   const getSchedule = async ()=>{\n     try{\n       let requests = await API.getSchedule()\n       let book = [], earn = []\n"
                },
                {
                    "date": 1639046307046,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n   const [bookings, setbookings] = useState(values.splice(new Date().getMonth()))\n   const [wallet, setwallet] = useState(0.00)\n   const [query, setquery] = useState('')\n \n-  console.log(earnings)\n+  // console.log(bookings)\n \n   const getSchedule = async ()=>{\n     try{\n       let requests = await API.getSchedule()\n"
                },
                {
                    "date": 1639046421437,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -207,9 +207,9 @@\n               <Button appearance={'outline'}>Withdraw Funds</Button> : <></>\n             }\n           </Card>\n \n-          <Text style={{margin: 10}} category='h6'>Earnings Overview</Text>\n+          <Text style={{margin: 10}} category='h6'>Earnings Oaverview</Text>\n           <BarChart\n             data={{\n               labels: months.slice(new Date().getMonth() > 6 ? new Date().getMonth()%6 : 0, new Date().getMonth()),\n               datasets: [\n"
                },
                {
                    "date": 1639046428878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -207,9 +207,9 @@\n               <Button appearance={'outline'}>Withdraw Funds</Button> : <></>\n             }\n           </Card>\n \n-          <Text style={{margin: 10}} category='h6'>Earnings Oaverview</Text>\n+          <Text style={{margin: 10}} category='h6'>Earnings Overview</Text>\n           <BarChart\n             data={{\n               labels: months.slice(new Date().getMonth() > 6 ? new Date().getMonth()%6 : 0, new Date().getMonth()),\n               datasets: [\n"
                },
                {
                    "date": 1639399247199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -155,9 +155,10 @@\n             \n             { patient ?\n               <>\n                 <FlatList\n-                  data={drugs}\n+                  // data={drugs}\n+                  data={filteredusers}\n                   style={{maxHeight: 200, marginVertical: 10}}\n                   keyExtractor={item=>item.email}\n                   renderItem={({item})=>{\n                     return <TouchableOpacity onPress={()=>setpatient(item)}>\n"
                }
            ],
            "date": 1639045365714,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from 'react';import {\n  LineChart,\n  BarChart,\n  PieChart,\n  ProgressChart,\n  ContributionGraph,\n  StackedBarChart\n} from \"react-native-chart-kit\";\nimport * as API from '../../api'\nimport * as Const from '../../constants'\nimport { StyleSheet, Dimensions, ScrollView, View, useColorScheme, FlatList, TouchableOpacity } from 'react-native';\nimport { Card, Button, Icon, Modal, Layout, Text, Input, Divider } from '@ui-kitten/components';\n\nlet months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nlet values = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\nlet items = []\n\nconst Manage = () =>{\n\n  return (<View><Text>aaaa</Text></View>)\n\n  const [requestlab, setrequestlab] = useState(false)\n  const [prescribe, setprescribe] = useState(false)\n  const [filteredusers, setfilteredusers] = useState([])\n  const [users, setusers] = useState([])\n  const [cart, setcart] = useState([])\n  const [patient, setpatient] = useState()\n  const [earnings, setearnings] = useState(values.splice(new Date().getMonth()))\n  const [bookings, setbookings] = useState(values.splice(new Date().getMonth()))\n  const [wallet, setwallet] = useState(0.00)\n  const [query, setquery] = useState('')\n\n  const getSchedule = async ()=>{\n    try{\n      let requests = await API.getSchedule()\n      let book = [], earn = []\n      \n      for(var x = 0; x <= new Date().getMonth(); x++){\n        book.push(0)\n        earn.push(0)\n      }\n\n      requests.forEach(request=>{\n        book[new Date(request.createDate).getMonth()] += 1\n        earn[new Date(request.createDate).getMonth()] += 50\n      })\n\n      setearnings(earn)\n      setbookings(book)\n      setwallet(requests.length*50)\n    }catch(e){\n      console.log('error fetching schedule', e)\n    }\n  }\n\n  const getPatients = async()=>{\n    try{\n\n      let users = await API.getPatients(' ')\n      setfilteredusers(users)\n      setusers(users)\n\n    }catch(e){\n      console.log('error fetching patients', e)\n    }\n  }\n\n  const search = (text)=>{\n    setquery(text)\n    setfilteredusers(users.filter(user=>\n        user.firstname.toLowerCase().includes(text.toLowerCase()) ||\n        user.lastname.toLowerCase().includes(text.toLowerCase()) ||\n        user.phone.toLowerCase().includes(text.toLowerCase()) ||\n        user.email.toLowerCase().includes(text.toLowerCase())\n      )\n    )\n  }\n\n  const tocart = (item)=>{\n\n    if(items.includes(item.name)){\n      items = items.filter(i=>i!=item.name)\n      settotal(total-item.price)\n    }else{\n      items.push(item.name)\n      settotal(total+item.price)\n    }\n\n    setcart(items)\n  }\n\n  useEffect(() => {\n    getSchedule()\n    getPatients()\n    return () => {\n      \n    }\n  }, [])\n\n  return (\n      <Layout style={{ flex: 1}}>\n        <Modal\n          visible={requestlab}\n          backdropStyle={styles.backdrop}\n          onBackdropPress={()=>{setquery(''); setpatient(null); setfilteredusers(users); setrequestlab(false);}}>\n          <Card style={{width: Dimensions.get('screen').width-50}} disabled={true}>\n            <Text category={'h6'} style={{margin: 10, textAlign: 'center'}}>{ patient ? `Select Lab Test for ${patient.firstname}` : 'Search Patient'}</Text>\n            \n            { patient ?\n              <>\n                <FlatList\n                  data={Const.tests}\n                  style={{maxHeight: 200, marginVertical: 10}}\n                  keyExtractor={(item, index)=>index}\n                  renderItem={({item})=>{\n                    return <TouchableOpacity onPress={()=>tocart(item)}>\n                      <Layout level={cart.includes(item.name) ? '3' : '1'} style={{marginVertical: 5}}>\n                        <Text>{item.name}</Text>\n                        <Text appearance={'hint'} category={'c2'}>GHS {item.price}</Text>\n                        <Divider style={{marginTop: 5}}/>\n                      </Layout>\n                    </TouchableOpacity>\n                }}/>\n              </>\n              :\n              <>\n                <Input autoCapitalize={'none'} placeholder={'Search for patient...'} value={query} onChangeText={search}/>\n                <FlatList\n                  data={filteredusers}\n                  style={{maxHeight: 200, marginVertical: 10}}\n                  keyExtractor={item=>item.email}\n                  renderItem={({item})=>{\n                    return <TouchableOpacity onPress={()=>setpatient(item)}>\n                      <View style={{marginVertical: 5}}>\n                        <Text>{item.firstname} {item.lastname}</Text>\n                        <Text appearance={'hint'} category={'c2'}>{item.email} &middot; {item.phone}</Text>\n                        <Divider style={{marginTop: 5}}/>\n                      </View>\n                    </TouchableOpacity>\n                  }}/>\n                </>\n              }\n            <Button status={'basic'} appearance={'ghost'} onPress={()=>{setquery(''); setpatient(null); setfilteredusers(users); setrequestlab(false);}}>\n              Dismiss\n            </Button>\n          </Card>\n        </Modal>\n\n        <Modal\n          visible={prescribe}\n          backdropStyle={styles.backdrop}\n          onBackdropPress={()=>{setquery(''); setpatient(null); setfilteredusers(users); setprescribe(false);}}>\n          <Card style={{width: Dimensions.get('screen').width-50}} disabled={true}>\n            <Text category={'h6'} style={{margin: 10, textAlign: 'center'}}>{ patient ? `Prescribe Drugs for ${patient.firstname}` : 'Search Patient'}</Text>\n            \n            { patient ?\n              <>\n                <FlatList\n                  data={drugs}\n                  style={{maxHeight: 200, marginVertical: 10}}\n                  keyExtractor={item=>item.email}\n                  renderItem={({item})=>{\n                    return <TouchableOpacity onPress={()=>setpatient(item)}>\n                      <View style={{marginVertical: 5}}>\n                        <Text>{item.firstname} {item.lastname}</Text>\n                        <Text appearance={'hint'} category={'c2'}>{item.email} &middot; {item.phone}</Text>\n                        <Divider style={{marginTop: 5}}/>\n                      </View>\n                    </TouchableOpacity>\n                }}/>\n              </>\n              :\n              <>\n                <Input autoCapitalize={'none'} placeholder={'Search for patient...'} value={query} onChangeText={search}/>\n                <FlatList\n                  data={filteredusers}\n                  style={{maxHeight: 200, marginVertical: 10}}\n                  keyExtractor={item=>item.email}\n                  renderItem={({item})=>{\n                    return <TouchableOpacity onPress={()=>setpatient(item)}>\n                      <View style={{marginVertical: 5}}>\n                        <Text>{item.firstname} {item.lastname}</Text>\n                        <Text appearance={'hint'} category={'c2'}>{item.email} &middot; {item.phone}</Text>\n                        <Divider style={{marginTop: 5}}/>\n                      </View>\n                    </TouchableOpacity>\n                  }}/>\n                </>\n              }\n            <Button status={'basic'} appearance={'ghost'} onPress={()=>{setquery(''); setpatient(null); setfilteredusers(users); setprescribe(false);}}>\n              Dismiss\n            </Button>\n          </Card>\n        </Modal>\n\n        <ScrollView shouldRasterizeIOS showsVerticalScrollIndicator={false}>\n          {/* <Text style={{margin: 10}} category='h4'>Manage</Text> */}\n\n          <Button appearance={'outline'} onPress={()=>setrequestlab(true)} style={{marginHorizontal: 15, marginVertical: 10}}>Request Lab Test</Button>\n          <Button appearance={'outline'} onPress={()=>setprescribe(true)} style={{marginHorizontal: 15}}>Prescribe Drugs</Button>\n\n          <Card style={{margin: 10}}>\n            <Text style={{alignSelf: 'center'}}>Wallet Balance</Text>\n            <Text style={{alignSelf: 'center', marginTop: 10}} category={'h4'}>GHS {wallet.toFixed(2)}</Text>\n            <Text style={{alignSelf: 'center', marginBottom: 10}} appearance={'hint'} category={'c1'}>Last cashout Apr 19, 2021</Text>\n            { wallet > 100 ?\n              <Button appearance={'outline'}>Withdraw Funds</Button> : <></>\n            }\n          </Card>\n\n          <Text style={{margin: 10}} category='h6'>Earnings Overview</Text>\n          <LineChart\n            data={{\n              labels: months.slice(new Date().getMonth() > 6 ? new Date().getMonth()%6 : 0, new Date().getMonth()),\n              datasets: [\n                {\n                  data: earnings.slice(new Date().getMonth() > 6 ? new Date().getMonth()%6 : 0, new Date().getMonth())\n                }\n              ]\n            }}\n            width={Dimensions.get(\"window\").width} // from react-native\n            height={220}\n            yAxisLabel=\"¢ \"\n            chartConfig={{\n              backgroundColor: useColorScheme() === 'dark' ? \"#222B45\" : \"#ffffff\",\n              backgroundGradientFrom: useColorScheme() === 'dark' ? \"#222B45\" : \"#ffffff\",\n              backgroundGradientTo: useColorScheme() === 'dark' ? \"#222B45\" : \"#ffffff\",\n              decimalPlaces: 0, // optional, defaults to 2dp\n              color: (opacity = 1) => `rgba(27, 204, 136, ${opacity})`,\n              labelColor: (opacity = 1) => `rgba(27, 204, 136, ${opacity})`,\n              style: {\n                borderRadius: 16\n              },\n              propsForDots: {\n                r: \"2\",\n                strokeWidth: \"2\",\n                stroke: \"#1BCC88\"\n              }\n            }}\n            bezier\n            style={{\n              marginVertical: 8,\n              marginStart: -15\n            }}\n          />\n\n          <Text style={{margin: 10}} category='h6'>Bookings Overview</Text>\n          <BarChart\n            data={{\n              labels: months.slice(new Date().getMonth() > 6 ? new Date().getMonth()%6 : 0, new Date().getMonth()),\n              datasets: [\n                {\n                  data: bookings.slice(new Date().getMonth() > 6 ? new Date().getMonth()%6 : 0, new Date().getMonth())\n                }\n              ]\n            }}\n            width={Dimensions.get(\"window\").width} // from react-native\n            height={220}\n            yAxisInterval={1} // optional, defaults to 1\n            chartConfig={{\n              backgroundColor: useColorScheme() === 'dark' ? \"#222B45\" : \"#ffffff\",\n              backgroundGradientFrom: useColorScheme() === 'dark' ? \"#222B45\" : \"#ffffff\",\n              backgroundGradientTo: useColorScheme() === 'dark' ? \"#222B45\" : \"#ffffff\",\n              decimalPlaces: 0, // optional, defaults to 2dp\n              color: (opacity = 1) => `rgba(27, 204, 136, ${opacity})`,\n              labelColor: (opacity = 1) => `rgba(27, 204, 136, ${opacity})`,\n              style: {\n                borderRadius: 16\n              },\n              propsForDots: {\n                r: \"6\",\n                strokeWidth: \"2\",\n                stroke: \"#ffa726\"\n              }\n            }}\n            bezier\n            style={{\n              marginVertical: 8,\n              marginStart: -25,\n            }}\n          />\n        </ScrollView>\n\n      </Layout>\n  );\n}\n\nexport default Manage\n\nconst styles = StyleSheet.create({\n  backdrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n});"
        }
    ]
}