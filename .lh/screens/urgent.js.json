{
    "sourceFile": "screens/urgent.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 21,
            "patches": [
                {
                    "date": 1640910331634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1640910422870,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,20 +109,20 @@\n \n     _engine.addListener('LeaveChannel', (stats) => {\n       console.info('LeaveChannel', stats)\n       if(picked){\n-        firestore().collection('calls').doc(call_id).update({\n+        firestore().collection('calls').doc(call_id).set({data: {\n           duration: stats.duration\n-        })\n+        }}, {merge: true})\n       }\n       setjoined(false)\n     })\n \n     _engine.addListener('UserJoined', (channel, uid, elapsed)=>{\n       if(route.params.user != null){\n-        firestore().collection('calls').doc(call_id).update({\n+        firestore().collection('calls').doc(call_id).set({data: {\n           status: 'ongoing'\n-        })\n+        }}, {merge: true})\n       }\n       setpicked(true)\n     })\n \n"
                },
                {
                    "date": 1640911467751,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -215,11 +215,11 @@\n       startUrgent()\n     }\n     return () => {\n       if(call_id != null){\n-        firestore().collection('calls').doc(call_id).update({\n+        firestore().collection('calls').doc(call_id).set({data: {\n           status: 'ended'\n-        })\n+        }}, {merge: true})\n       }\n       _engine.destroy()\n     }\n   }, [])\n"
                },
                {
                    "date": 1640911869930,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,8 +41,9 @@\n );\n \n let _engine\n let call_id\n+let countt = 0\n \n const Urgent = ({navigation, route}) => {\n \n   const isDarkMode = useColorScheme() === 'dark';\n@@ -213,8 +214,51 @@\n       _init(route.params.channel, route.params.token)\n     }else{\n       startUrgent()\n     }\n+\n+    (async()=>{\n+\n+\n+      // firebase\n+      firebase.firestore().collection('calls').doc(recp).onSnapshot(async snapshot=>{\n+        // console.log('Docs: ', snapshot.docs.length)\n+        // if(snapshot.docs.length > 0){\n+        if(true){\n+            // urgent = snapshot.docs[0]\n+            urgent = snapshot.data().data;\n+            // let call = await AsyncStorage.removeItem('_call')\n+            // // console.log(urgent.data().channel)\n+\n+            console.log('count:'+ countt)\n+\n+            if(countt >= 3 ){\n+                // console.log('reached')\n+                // console.log(urgent.status)\n+                if((urgent.status != \"ended\") ){\n+                    \n+                }else{\n+                  // console.log('reached end call'+urgent.status)\n+                    try{\n+                      if(_engine !=null){\n+                        await _engine.leaveChannel()\n+                      }\n+                    }catch(e){\n+                      console.log('Leave error: ', e)\n+                    }\n+                    navigation.goBack()\n+                }\n+                \n+                \n+            }\n+\n+            countt++;\n+        }\n+    }, e => {\n+        console.log('Firebase Error: ', e)\n+    })\n+    })()\n+\n     return () => {\n       if(call_id != null){\n         firestore().collection('calls').doc(call_id).set({data: {\n           status: 'ended'\n"
                },
                {
                    "date": 1640912664261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -209,16 +209,16 @@\n   }\n \n   useEffect(() => {\n \n-    if(route.params.user == null){\n-      _init(route.params.channel, route.params.token)\n-    }else{\n-      startUrgent()\n-    }\n-\n+    \n     (async()=>{\n \n+      if(route.params.user == null){\n+        _init(route.params.channel, route.params.token)\n+      }else{\n+        startUrgent()\n+      }\n \n       // firebase\n       firebase.firestore().collection('calls').doc(recp).onSnapshot(async snapshot=>{\n         // console.log('Docs: ', snapshot.docs.length)\n"
                },
                {
                    "date": 1640912681842,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -219,9 +219,9 @@\n         startUrgent()\n       }\n \n       // firebase\n-      firebase.firestore().collection('calls').doc(recp).onSnapshot(async snapshot=>{\n+      firebase.firestore().collection('calls').doc(call_id).onSnapshot(async snapshot=>{\n         // console.log('Docs: ', snapshot.docs.length)\n         // if(snapshot.docs.length > 0){\n         if(true){\n             // urgent = snapshot.docs[0]\n"
                },
                {
                    "date": 1640912701745,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -219,9 +219,9 @@\n         startUrgent()\n       }\n \n       // firebase\n-      firebase.firestore().collection('calls').doc(call_id).onSnapshot(async snapshot=>{\n+      firestore().collection('calls').doc(call_id).onSnapshot(async snapshot=>{\n         // console.log('Docs: ', snapshot.docs.length)\n         // if(snapshot.docs.length > 0){\n         if(true){\n             // urgent = snapshot.docs[0]\n"
                },
                {
                    "date": 1640912729119,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,8 +41,9 @@\n );\n \n let _engine\n let call_id\n+let urgent\n let countt = 0\n \n const Urgent = ({navigation, route}) => {\n \n"
                },
                {
                    "date": 1640912894748,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -237,9 +237,9 @@\n                 // console.log(urgent.status)\n                 if((urgent.status != \"ended\") ){\n                     \n                 }else{\n-                  // console.log('reached end call'+urgent.status)\n+                  console.log('reached end call'+urgent.status)\n                     try{\n                       if(_engine !=null){\n                         await _engine.leaveChannel()\n                       }\n"
                },
                {
                    "date": 1640914244484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,9 +119,9 @@\n       setjoined(false)\n     })\n \n     _engine.addListener('UserJoined', (channel, uid, elapsed)=>{\n-      if(route.params.user != null){\n+      if(true){\n         firestore().collection('calls').doc(call_id).set({data: {\n           status: 'ongoing'\n         }}, {merge: true})\n       }\n"
                },
                {
                    "date": 1640914334455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -238,16 +238,16 @@\n                 if((urgent.status != \"ended\") ){\n                     \n                 }else{\n                   console.log('reached end call'+urgent.status)\n-                    try{\n-                      if(_engine !=null){\n-                        await _engine.leaveChannel()\n-                      }\n-                    }catch(e){\n-                      console.log('Leave error: ', e)\n-                    }\n-                    navigation.goBack()\n+                    // try{\n+                    //   if(_engine !=null){\n+                    //     await _engine.leaveChannel()\n+                    //   }\n+                    // }catch(e){\n+                    //   console.log('Leave error: ', e)\n+                    // }\n+                    // navigation.goBack()\n                 }\n                 \n                 \n             }\n"
                },
                {
                    "date": 1640914350631,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -238,16 +238,16 @@\n                 if((urgent.status != \"ended\") ){\n                     \n                 }else{\n                   console.log('reached end call'+urgent.status)\n-                    // try{\n-                    //   if(_engine !=null){\n-                    //     await _engine.leaveChannel()\n-                    //   }\n-                    // }catch(e){\n-                    //   console.log('Leave error: ', e)\n-                    // }\n-                    // navigation.goBack()\n+                    try{\n+                      if(_engine !=null){\n+                        await _engine.leaveChannel()\n+                      }\n+                    }catch(e){\n+                      console.log('Leave error: ', e)\n+                    }\n+                    navigation.goBack()\n                 }\n                 \n                 \n             }\n"
                },
                {
                    "date": 1640915447778,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,8 +44,10 @@\n let call_id\n let urgent\n let countt = 0\n \n+console.log(call_id)\n+\n const Urgent = ({navigation, route}) => {\n \n   const isDarkMode = useColorScheme() === 'dark';\n   const [joined, setjoined] = useState(false)\n"
                },
                {
                    "date": 1640915493332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,12 +44,12 @@\n let call_id\n let urgent\n let countt = 0\n \n-console.log(call_id)\n+// console.log(call_id)\n \n const Urgent = ({navigation, route}) => {\n-\n+  call_id = route.params.email;\n   const isDarkMode = useColorScheme() === 'dark';\n   const [joined, setjoined] = useState(false)\n   const [picked, setpicked] = useState(false)\n   const [muted, setmuted] = useState(false)\n"
                },
                {
                    "date": 1640915614129,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,12 +44,12 @@\n let call_id\n let urgent\n let countt = 0\n \n-// console.log(call_id)\n-\n const Urgent = ({navigation, route}) => {\n   call_id = route.params.email;\n+  console.log(call_id)\n+  \n   const isDarkMode = useColorScheme() === 'dark';\n   const [joined, setjoined] = useState(false)\n   const [picked, setpicked] = useState(false)\n   const [muted, setmuted] = useState(false)\n"
                },
                {
                    "date": 1640916670071,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n \n const Urgent = ({navigation, route}) => {\n   call_id = route.params.email;\n   console.log(call_id)\n-  \n+\n   const isDarkMode = useColorScheme() === 'dark';\n   const [joined, setjoined] = useState(false)\n   const [picked, setpicked] = useState(false)\n   const [muted, setmuted] = useState(false)\n"
                },
                {
                    "date": 1640918023215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import React, {useEffect, useState} from 'react';\n+import React, {useEffect, useState, useRef} from 'react';\n import {\n   SafeAreaView,\n   PermissionsAndroid,\n   StatusBar,\n@@ -47,8 +47,9 @@\n \n const Urgent = ({navigation, route}) => {\n   call_id = route.params.email;\n   console.log(call_id)\n+  const _engine_ref = useRef(null);\n \n   const isDarkMode = useColorScheme() === 'dark';\n   const [joined, setjoined] = useState(false)\n   const [picked, setpicked] = useState(false)\n@@ -64,8 +65,10 @@\n     _engine = await RtcEngine.createWithContext(\n       new RtcEngineContext('0742c8affa02429b9622956bac0d67d0')\n     )\n \n+    _engine_ref.current = _engine;\n+\n     _addListeners()\n \n     if(Platform.OS == 'android'){\n       requestCameraAndAudioPermission()\n@@ -170,27 +173,39 @@\n     navigation.goBack()\n   }\n \n   const _switchMicrophone = () => {\n-    _engine\n-      ?.enableLocalAudio(!muted)\n+    try {\n+      _engine_ref.current.enableLocalAudio(!muted)\n       .then(() => {\n         setmuted(!muted);\n+        console.log('local audio:', !muted)\n       })\n       .catch((err) => {\n         console.warn('enableLocalAudio', err);\n       });\n+\n+      console.log('local audio clicked')  \n+    } catch (error) {\n+      console.log(_engine_ref.current)\n+    }\n+    \n   };\n \n   const _switchSpeakerphone = () => {\n-    _engine\n-      ?.setEnableSpeakerphone(!speaker)\n+    try {\n+      _engine_ref.current.setEnableSpeakerphone(!speaker)\n       .then(() => {\n         setspeaker(!speaker)\n+        console.log('local speaker:', !speaker)\n       })\n       .catch((err) => {\n         console.warn('setEnableSpeakerphone', err);\n-      });\n+      });  \n+    } catch (error) {\n+      \n+    }\n+    \n   }\n \n   const startUrgent = async()=>{\n     try{\n"
                },
                {
                    "date": 1640918526717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -294,9 +294,9 @@\n           <Image source={require('../assets/icon.png')} resizeMode={'contain'} style={{height: 150, width: 150, borderRadius: 150, marginTop: 50}}/>\n         </View>\n \n         <View style={{flexDirection: 'row', alignSelf: 'center', justifyContent: 'center', bottom: 50, position: 'absolute'}}>\n-          <Button onPress={_switchMicrophone} style={{width: 70, height: 70, borderRadius: 70, alignSelf: 'flex-end', marginEnd: 25}} appearance={muted ? 'filled' : 'outline'} status='basic' accessoryLeft={MuteIcon}/>\n+          <Button onPress={_switchMicrophone} style={{width: 70, height: 70, borderRadius: 70, alignSelf: 'flex-end', marginEnd: 25}} appearance={!muted ? 'filled' : 'outline'} status='basic' accessoryLeft={MuteIcon}/>\n           <Button onPress={_leaveChannel} style={{width: 70, height: 70, borderRadius: 70, alignSelf: 'flex-end', marginEnd: 25}} status='danger' accessoryLeft={CancelIcon}/>\n           <Button onPress={_switchSpeakerphone} style={{width: 70, height: 70, borderRadius: 70, alignSelf: 'flex-end'}} appearance={speaker ? 'filled' : 'outline'} status='basic' accessoryLeft={SpeakerIcon}/>\n         </View>\n     </Layout>\n"
                },
                {
                    "date": 1640918724758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,8 +111,14 @@\n   const _addListeners = () => {\n     _engine.addListener('JoinChannelSuccess', (channel, uid, elapsed) => {\n       console.info('JoinChannelSuccess', channel, uid, elapsed)\n       setjoined(true)\n+\n+      try {\n+        _engine_ref.current.enableLocalAudio(_switchMicrophone())\n+      } catch (error) {\n+        \n+      }\n     })\n \n     _engine.addListener('LeaveChannel', (stats) => {\n       console.info('LeaveChannel', stats)\n"
                },
                {
                    "date": 1640919137854,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,8 +49,11 @@\n   call_id = route.params.email;\n   console.log(call_id)\n   const _engine_ref = useRef(null);\n \n+  let countt_r = useRef(0)\n+  countt_r.current = 0;\n+\n   const isDarkMode = useColorScheme() === 'dark';\n   const [joined, setjoined] = useState(false)\n   const [picked, setpicked] = useState(false)\n   const [muted, setmuted] = useState(false)\n@@ -252,11 +255,11 @@\n             urgent = snapshot.data().data;\n             // let call = await AsyncStorage.removeItem('_call')\n             // // console.log(urgent.data().channel)\n \n-            console.log('count:'+ countt)\n+            console.log('count:'+ countt_r.current)\n \n-            if(countt >= 3 ){\n+            if(countt_r.current >= 3 ){\n                 // console.log('reached')\n                 // console.log(urgent.status)\n                 if((urgent.status != \"ended\") ){\n                     \n@@ -274,9 +277,9 @@\n                 \n                 \n             }\n \n-            countt++;\n+            countt_r.current+=1;\n         }\n     }, e => {\n         console.log('Firebase Error: ', e)\n     })\n"
                },
                {
                    "date": 1640919147721,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -291,8 +291,10 @@\n           status: 'ended'\n         }}, {merge: true})\n       }\n       _engine.destroy()\n+\n+      countt_r.current = 0;\n     }\n   }, [])\n \n   return (\n"
                },
                {
                    "date": 1640949646019,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,9 @@\n     }\n \n     await _engine.enableAudio()\n     await _engine.setChannelProfile(ChannelProfile.LiveBroadcasting)\n-    await _engine.setClientRole(route.params.user == null ? ClientRole.Audience : ClientRole.Broadcaster)\n+    await _engine.setClientRole(route.params.user == null ? ClientRole.Broadcaster : ClientRole.Broadcaster)\n     try{\n       console.info('joining')\n       await _engine.joinChannel(token,\n       channel, null, 0)\n"
                }
            ],
            "date": 1640910331634,
            "name": "Commit-0",
            "content": "import React, {useEffect, useState} from 'react';\nimport {\n  SafeAreaView,\n  PermissionsAndroid,\n  StatusBar,\n  StyleSheet,\n  ImageBackground,\n  View,\n  Image,\n  useColorScheme,\n  Platform,\n} from 'react-native';\nimport RtcEngine, {\n  ChannelProfile,\n  ClientRole,\n  RtcEngineContext,\n} from 'react-native-agora';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Layout, Text, Icon, Button } from '@ui-kitten/components';\nimport firestore from '@react-native-firebase/firestore';\nimport axios from 'axios';\n\nconst CancelIcon = (props) => (\n  <Icon {...props} name='close-outline'/>\n);\n\nconst SpeakerIcon = (props) => (\n  <Icon {...props} name='volume-up-outline'/>\n);\n\nconst HeadsetIcon = (props) => (\n  <Icon {...props} name='volume-up-outline'/>\n);\n\nconst MuteIcon = (props) => (\n  <Icon {...props} name='mic-off-outline'/>\n);\n\nconst MutedIcon = (props) => (\n  <Icon {...props} name='mic-outline'/>\n);\n\nlet _engine\nlet call_id\n\nconst Urgent = ({navigation, route}) => {\n\n  const isDarkMode = useColorScheme() === 'dark';\n  const [joined, setjoined] = useState(false)\n  const [picked, setpicked] = useState(false)\n  const [muted, setmuted] = useState(false)\n  const [speaker, setspeaker] = useState(false)\n  const [duration, setduration] = useState('0:00')\n\n  const backgroundStyle = {\n    backgroundColor: isDarkMode ? '#141414' : '#FFFFFF',\n  };\n\n  const _init = async (channel, token) => {\n    _engine = await RtcEngine.createWithContext(\n      new RtcEngineContext('0742c8affa02429b9622956bac0d67d0')\n    )\n\n    _addListeners()\n\n    if(Platform.OS == 'android'){\n      requestCameraAndAudioPermission()\n    }\n\n    await _engine.enableAudio()\n    await _engine.setChannelProfile(ChannelProfile.LiveBroadcasting)\n    await _engine.setClientRole(route.params.user == null ? ClientRole.Audience : ClientRole.Broadcaster)\n    try{\n      console.info('joining')\n      await _engine.joinChannel(token,\n      channel, null, 0)\n    }catch(e){\n      console.log('Init error: ', e)\n    }\n    try{\n      await _joinChannel()\n    }catch(e){\n      console.log('Join error: ', e)\n    }\n  }\n\n  const requestCameraAndAudioPermission = async () =>{\n    try {\n        const granted = await PermissionsAndroid.requestMultiple([\n            PermissionsAndroid.PERMISSIONS.RECORD_AUDIO,\n        ])\n        if (\n            granted['android.permission.RECORD_AUDIO'] === PermissionsAndroid.RESULTS.GRANTED\n        ) {\n            console.log('You can use the mic')\n        } else {\n            console.log('Permission denied')\n        }\n    } catch (err) {\n        console.warn(err)\n    }\n  }\n\n  const _addListeners = () => {\n    _engine.addListener('JoinChannelSuccess', (channel, uid, elapsed) => {\n      console.info('JoinChannelSuccess', channel, uid, elapsed)\n      setjoined(true)\n    })\n\n    _engine.addListener('LeaveChannel', (stats) => {\n      console.info('LeaveChannel', stats)\n      if(picked){\n        firestore().collection('calls').doc(call_id).update({\n          duration: stats.duration\n        })\n      }\n      setjoined(false)\n    })\n\n    _engine.addListener('UserJoined', (channel, uid, elapsed)=>{\n      if(route.params.user != null){\n        firestore().collection('calls').doc(call_id).update({\n          status: 'ongoing'\n        })\n      }\n      setpicked(true)\n    })\n\n    _engine.addListener('UserOffline', (channel, uid, elapsed)=>{\n      _leaveChannel\n    })\n\n    _engine.addListener('Error', (e)=>{\n      console.log('Main Error: ', e)\n    })\n  }\n\n  const _joinChannel = async () => {\n    console.log('Connection state: ', await _engine.getConnectionState())\n  };\n\n  const _onChangeRecordingVolume = (value) => {\n    _engine.adjustRecordingSignalVolume(value * 400)\n  }\n\n  const _onChangePlaybackVolume = (value) => {\n    _engine.adjustPlaybackSignalVolume(value * 400)\n  }\n\n  const _toggleInEarMonitoring = (isEnabled) => {\n    _engine.enableInEarMonitoring(isEnabled)\n  }\n\n  const _onChangeInEarMonitoringVolume = (value) => {\n    _engine.setInEarMonitoringVolume(value * 400)\n  }\n\n  const _leaveChannel = async () => {\n    try{\n      if(_engine !=null){\n        await _engine.leaveChannel()\n      }\n    }catch(e){\n      console.log('Leave error: ', e)\n    }\n    navigation.goBack()\n  }\n\n  const _switchMicrophone = () => {\n    _engine\n      ?.enableLocalAudio(!muted)\n      .then(() => {\n        setmuted(!muted);\n      })\n      .catch((err) => {\n        console.warn('enableLocalAudio', err);\n      });\n  };\n\n  const _switchSpeakerphone = () => {\n    _engine\n      ?.setEnableSpeakerphone(!speaker)\n      .then(() => {\n        setspeaker(!speaker)\n      })\n      .catch((err) => {\n        console.warn('setEnableSpeakerphone', err);\n      });\n  }\n\n  const startUrgent = async()=>{\n    try{\n      let email = await AsyncStorage.getItem('_email')\n      let res = await axios.get('https://api.clarondoc.com/urgent/token')\n      _init(res.data.RTCChannel, res.data.RTCAccessToken)\n      // let doc = await firestore().collection('calls').add({\n      //   time: new Date(),\n      //   recipient: route.params.user.email,\n      //   caller: email,\n      //   status: 'started',\n      //   channel: res.data.RTCChannel,\n      //   token: res.data.RTCAccessToken\n      // })\n      call_id = route.params.email\n    }catch(e){\n      console.log(e)\n    }\n  }\n\n  useEffect(() => {\n\n    if(route.params.user == null){\n      _init(route.params.channel, route.params.token)\n    }else{\n      startUrgent()\n    }\n    return () => {\n      if(call_id != null){\n        firestore().collection('calls').doc(call_id).update({\n          status: 'ended'\n        })\n      }\n      _engine.destroy()\n    }\n  }, [])\n\n  return (\n    <Layout style={{ flex: 1}}>\n        <View style={{marginTop: 100, alignItems: 'center', justifyContent: 'center'}}>\n          <Text category='s1' appearance='hint'>{ picked ? 'Connected' : route.params.user == null ? 'Joining...' : 'Calling...' } </Text>\n          <Text category='h4' style={{marginTop: 10}}>{route.params.user == null ? 'Urgent Care' : route.params.user.firstname +' ' + route.params.user.lastname}</Text>\n          <Image source={require('../assets/icon.png')} resizeMode={'contain'} style={{height: 150, width: 150, borderRadius: 150, marginTop: 50}}/>\n        </View>\n\n        <View style={{flexDirection: 'row', alignSelf: 'center', justifyContent: 'center', bottom: 50, position: 'absolute'}}>\n          <Button onPress={_switchMicrophone} style={{width: 70, height: 70, borderRadius: 70, alignSelf: 'flex-end', marginEnd: 25}} appearance={muted ? 'filled' : 'outline'} status='basic' accessoryLeft={MuteIcon}/>\n          <Button onPress={_leaveChannel} style={{width: 70, height: 70, borderRadius: 70, alignSelf: 'flex-end', marginEnd: 25}} status='danger' accessoryLeft={CancelIcon}/>\n          <Button onPress={_switchSpeakerphone} style={{width: 70, height: 70, borderRadius: 70, alignSelf: 'flex-end'}} appearance={speaker ? 'filled' : 'outline'} status='basic' accessoryLeft={SpeakerIcon}/>\n        </View>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  sectionContainer: {\n    marginTop: 32,\n    paddingHorizontal: 24,\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: '600',\n  },\n  sectionDescription: {\n    marginTop: 8,\n    fontSize: 18,\n    fontWeight: '400',\n  },\n  highlight: {\n    fontWeight: '700',\n  },\n});\n\nexport default Urgent;"
        }
    ]
}