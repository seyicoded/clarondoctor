{
    "sourceFile": "App.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 17,
            "patches": [
                {
                    "date": 1638959530323,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1638959545293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,19 @@\n import Account from './screens/account';\n import firebase from 'firebase'\n \n \n+firebase.apps.length == 0 ? firebase.initializeApp({\n+  apiKey: \"AIzaSyA07_A7At-J9Mu6NMXBpoLVYcrKWR3ezy4\",\n+  authDomain: \"fcm-notify-db9b8.firebaseapp.com\",\n+  databaseURL: \"https://fcm-notify-db9b8.firebaseio.com\",\n+  projectId: \"fcm-notify-db9b8\",\n+  storageBucket: \"fcm-notify-db9b8.appspot.com\",\n+  messagingSenderId: \"77071010064\",\n+  appId: \"1:77071010064:web:e693b1fa22167a00e27d95\",\n+  measurementId: \"G-VWCS7XBQC3\"\n+}) : null\n+\n LogBox.ignoreAllLogs()\n const { Navigator, Screen } = createStackNavigator();\n \n export default () => {\n"
                },
                {
                    "date": 1639063581143,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,9 @@\n import VideoCall from './screens/calls/video';\n import Account from './screens/account';\n import firebase from 'firebase'\n \n+AsyncStorage.clear();\n \n firebase.apps.length == 0 ? firebase.initializeApp({\n   apiKey: \"AIzaSyA07_A7At-J9Mu6NMXBpoLVYcrKWR3ezy4\",\n   authDomain: \"fcm-notify-db9b8.firebaseapp.com\",\n"
                },
                {
                    "date": 1639065782273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n import VideoCall from './screens/calls/video';\n import Account from './screens/account';\n import firebase from 'firebase'\n \n-AsyncStorage.clear();\n+AsyncStorage.getAllKeys();\n \n firebase.apps.length == 0 ? firebase.initializeApp({\n   apiKey: \"AIzaSyA07_A7At-J9Mu6NMXBpoLVYcrKWR3ezy4\",\n   authDomain: \"fcm-notify-db9b8.firebaseapp.com\",\n"
                },
                {
                    "date": 1639065842254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,10 @@\n import VideoCall from './screens/calls/video';\n import Account from './screens/account';\n import firebase from 'firebase'\n \n-AsyncStorage.getAllKeys();\n+// AsyncStorage.getAllKeys();\n+AsyncStorage.clear();\n \n firebase.apps.length == 0 ? firebase.initializeApp({\n   apiKey: \"AIzaSyA07_A7At-J9Mu6NMXBpoLVYcrKWR3ezy4\",\n   authDomain: \"fcm-notify-db9b8.firebaseapp.com\",\n"
                },
                {
                    "date": 1639067040402,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n import Account from './screens/account';\n import firebase from 'firebase'\n \n // AsyncStorage.getAllKeys();\n-AsyncStorage.clear();\n+// AsyncStorage.clear();\n \n firebase.apps.length == 0 ? firebase.initializeApp({\n   apiKey: \"AIzaSyA07_A7At-J9Mu6NMXBpoLVYcrKWR3ezy4\",\n   authDomain: \"fcm-notify-db9b8.firebaseapp.com\",\n"
                },
                {
                    "date": 1639171246385,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import React, {useEffect} from 'react';\n+import {ActivityIndicator, View} from 'react-native';\n import * as eva from '@eva-design/eva';\n import { EvaIconsPack } from '@ui-kitten/eva-icons';\n import AsyncStorage from '@react-native-async-storage/async-storage';\n import { ApplicationProvider, IconRegistry } from '@ui-kitten/components';\n@@ -139,9 +140,11 @@\n   }, [])\n \n   if(loading){\n     return (\n-      <></>\n+      <View style={{justifyContent: 'center', alignItems: 'center'}}>\n+        <ActivityIndicator color=\"green\" />\n+      </View>\n     )\n   }else{\n     return(\n       <>\n"
                },
                {
                    "date": 1639171323598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -140,9 +140,9 @@\n   }, [])\n \n   if(loading){\n     return (\n-      <View style={{justifyContent: 'center', alignItems: 'center'}}>\n+      <View style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}>\n         <ActivityIndicator color=\"green\" />\n       </View>\n     )\n   }else{\n"
                },
                {
                    "date": 1639171447757,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,12 +119,12 @@\n   };\n \n   useEffect(() => {\n     (async ()=>{\n-      await registerForPushNotificationsAsync()\n+      // await registerForPushNotificationsAsync()\n \n       try{\n-        await API.getApiKey()\n+        // await API.getApiKey()\n       }catch(e){\n         console.log('api key fetch failed: ', e)\n       }\n \n"
                },
                {
                    "date": 1639171476151,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,9 +122,9 @@\n     (async ()=>{\n       // await registerForPushNotificationsAsync()\n \n       try{\n-        // await API.getApiKey()\n+        await API.getApiKey()\n       }catch(e){\n         console.log('api key fetch failed: ', e)\n       }\n \n"
                },
                {
                    "date": 1639171518479,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,8 +118,11 @@\n     }\n   };\n \n   useEffect(() => {\n+\n+    registerForPushNotificationsAsync()\n+    \n     (async ()=>{\n       // await registerForPushNotificationsAsync()\n \n       try{\n"
                },
                {
                    "date": 1639171725911,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,19 +119,22 @@\n   };\n \n   useEffect(() => {\n \n-    registerForPushNotificationsAsync()\n-    \n+    // registerForPushNotificationsAsync()\n+\n     (async ()=>{\n-      // await registerForPushNotificationsAsync()\n-\n+      \n       try{\n         await API.getApiKey()\n       }catch(e){\n         console.log('api key fetch failed: ', e)\n       }\n \n+      setloading(false)\n+\n+      await registerForPushNotificationsAsync()\n+\n       let email = await AsyncStorage.getItem('_email')\n \n       if(email == null){\n         setlogged(false)\n"
                },
                {
                    "date": 1639172001924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,27 +122,25 @@\n \n     // registerForPushNotificationsAsync()\n \n     (async ()=>{\n-      \n+\n       try{\n         await API.getApiKey()\n       }catch(e){\n         console.log('api key fetch failed: ', e)\n       }\n \n-      setloading(false)\n-\n-      await registerForPushNotificationsAsync()\n-\n       let email = await AsyncStorage.getItem('_email')\n \n       if(email == null){\n         setlogged(false)\n       }else{\n         setlogged(true)\n       }\n       setloading(false)\n+      await registerForPushNotificationsAsync()\n+      \n     })()\n   }, [])\n \n   if(loading){\n"
                },
                {
                    "date": 1639354299838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,10 @@\n \n // AsyncStorage.getAllKeys();\n // AsyncStorage.clear();\n \n+firebase.firestore().settings({ experimentalForceLongPolling: true, merge: true });\n+\n firebase.apps.length == 0 ? firebase.initializeApp({\n   apiKey: \"AIzaSyA07_A7At-J9Mu6NMXBpoLVYcrKWR3ezy4\",\n   authDomain: \"fcm-notify-db9b8.firebaseapp.com\",\n   databaseURL: \"https://fcm-notify-db9b8.firebaseio.com\",\n"
                },
                {
                    "date": 1639354337023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,10 +25,8 @@\n \n // AsyncStorage.getAllKeys();\n // AsyncStorage.clear();\n \n-firebase.firestore().settings({ experimentalForceLongPolling: true, merge: true });\n-\n firebase.apps.length == 0 ? firebase.initializeApp({\n   apiKey: \"AIzaSyA07_A7At-J9Mu6NMXBpoLVYcrKWR3ezy4\",\n   authDomain: \"fcm-notify-db9b8.firebaseapp.com\",\n   databaseURL: \"https://fcm-notify-db9b8.firebaseio.com\",\n@@ -38,8 +36,10 @@\n   appId: \"1:77071010064:web:e693b1fa22167a00e27d95\",\n   measurementId: \"G-VWCS7XBQC3\"\n }) : null\n \n+firebase.firestore().settings({ experimentalForceLongPolling: true, merge: true });\n+\n LogBox.ignoreAllLogs()\n const { Navigator, Screen } = createStackNavigator();\n \n export default () => {\n"
                },
                {
                    "date": 1640244830072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,9 @@\n import AudioCall from './screens/calls/audio';\n import VideoCall from './screens/calls/video';\n import Account from './screens/account';\n import firebase from 'firebase'\n+import CodePush from 'react-native-code-push'\n \n // AsyncStorage.getAllKeys();\n // AsyncStorage.clear();\n \n"
                },
                {
                    "date": 1640244994916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n \n LogBox.ignoreAllLogs()\n const { Navigator, Screen } = createStackNavigator();\n \n-export default () => {\n+const App = () => {\n   \n   const [theme, setTheme] = React.useState(useColorScheme());\n   const [logged, setlogged] = React.useState(false)\n   const [loading, setloading] = React.useState(true)\n@@ -176,5 +176,7 @@\n         </KeyboardAvoidingView>\n       </>\n     );\n   }\n-}\n\\ No newline at end of file\n+}\n+\n+export default CodePush(App);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1640245085218,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,10 @@\n import Account from './screens/account';\n import firebase from 'firebase'\n import CodePush from 'react-native-code-push'\n \n+let codePushOptions = { checkFrequency: CodePush.CheckFrequency.ON_APP_RESUME };\n+\n // AsyncStorage.getAllKeys();\n // AsyncStorage.clear();\n \n firebase.apps.length == 0 ? firebase.initializeApp({\n@@ -178,5 +180,5 @@\n     );\n   }\n }\n \n-export default CodePush(App);\n\\ No newline at end of file\n+export default CodePush(codePushOptions)(App);\n\\ No newline at end of file\n"
                }
            ],
            "date": 1638959530323,
            "name": "Commit-0",
            "content": "import React, {useEffect} from 'react';\nimport * as eva from '@eva-design/eva';\nimport { EvaIconsPack } from '@ui-kitten/eva-icons';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { ApplicationProvider, IconRegistry } from '@ui-kitten/components';\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { default as claron } from './theme.json';\nimport { ThemeContext } from './context';\nimport { Login } from './screens/login';\nimport messaging from '@react-native-firebase/messaging';\nimport VoipPushNotification from 'react-native-voip-push-notification';\nimport { KeyboardAvoidingView, Platform, useColorScheme, LogBox } from 'react-native';\nimport { MainScreen } from './screens/main';\nimport Conversation from './screens/conversation';\nimport Urgent from './screens/urgent';\nimport Notifications from './screens/notifications';\nimport * as API from './api';\nimport uuid from 'react-native-uuid';\nimport AudioCall from './screens/calls/audio';\nimport VideoCall from './screens/calls/video';\nimport Account from './screens/account';\nimport firebase from 'firebase'\n\n\nLogBox.ignoreAllLogs()\nconst { Navigator, Screen } = createStackNavigator();\n\nexport default () => {\n  \n  const [theme, setTheme] = React.useState(useColorScheme());\n  const [logged, setlogged] = React.useState(false)\n  const [loading, setloading] = React.useState(true)\n\n  const toggleTheme = () => {\n    const nextTheme = theme === 'light' ? 'dark' : 'light';\n    setTheme(nextTheme);\n  };\n\n  registerForPushNotificationsAsync = async () => {\n    let token = await messaging().getToken()\n    console.log('token: ', token)\n    await API.updateFCMToken(token)\n    await messaging().requestPermission();\n    await messaging().registerDeviceForRemoteMessages()\n\n    try{\n      messaging().onTokenRefresh(token=>{\n        console.log(token)\n      })\n\n      let initial = await messaging().getInitialNotification()\n      if(initial != null){\n        console.log('initial notification: ', initial.data)\n      }else{\n        console.log('no initial notification')\n      }\n\n    }catch(e){\n      console.log('error registering fcm token: ', e)\n    }\n\n    if(Platform.OS == 'ios'){\n\n      try{\n        VoipPushNotification.registerVoipToken()\n        \n        VoipPushNotification.addEventListener('register', (token) => {\n          // --- send token to your apn provider server\n          console.log('VOIP TOKEN: ', token)\n        });\n        \n        VoipPushNotification.addEventListener('notification', (notification) => {\n          // --- optionally, if you `addCompletionHandler` from the native side, once you have done the js jobs to initiate a call, call `completion()`\n          VoipPushNotification.onVoipNotificationCompleted(notification.uuid);\n        });\n\n        // ===== Step 3: subscribe `didLoadWithEvents` event =====\n        VoipPushNotification.addEventListener('didLoadWithEvents', (events) => {\n          // --- this will fire when there are events occured before js bridge initialized\n          // --- use this event to execute your event handler manually by event type\n\n          if (!events || !Array.isArray(events) || events.length < 1) {\n              return;\n          }\n          for (let voipPushEvent of events) {\n              let { name, data } = voipPushEvent;\n              console.log('VOIP EVENTS: ', voipPushEvent)\n              if (name === VoipPushNotification.RNVoipPushRemoteNotificationsRegisteredEvent) {\n                  console.log('Voip Registration: ', data)\n              } else if (name === VoipPushNotification.RNVoipPushRemoteNotificationReceivedEvent) {\n                  console.log('Voip Event: ', data);\n              }\n          }\n        });\n\n        // ===== Step 4: register =====\n        // --- it will be no-op if you have subscribed before (like in native side)\n        // --- but will fire `register` event if we have latest cahced voip token ( it may be empty if no token at all )\n        // VoipPushNotification.registerVoipToken(); // --- register token\n      }catch(e){\n        console.log('Error initializing VOIP Notification', e)\n      }\n    }\n  };\n\n  useEffect(() => {\n    (async ()=>{\n      await registerForPushNotificationsAsync()\n\n      try{\n        await API.getApiKey()\n      }catch(e){\n        console.log('api key fetch failed: ', e)\n      }\n\n      let email = await AsyncStorage.getItem('_email')\n\n      if(email == null){\n        setlogged(false)\n      }else{\n        setlogged(true)\n      }\n      setloading(false)\n    })()\n  }, [])\n\n  if(loading){\n    return (\n      <></>\n    )\n  }else{\n    return(\n      <>\n        <IconRegistry icons={EvaIconsPack}/>\n        <KeyboardAvoidingView behavior={Platform.OS == 'ios' ? 'padding' : null} style={{flex: 1}}>\n          <ThemeContext.Provider value={{ theme, toggleTheme }}>\n            <ApplicationProvider {...eva} theme={{...eva[theme], ...claron}}>\n              <NavigationContainer>\n                <Navigator initialRouteName={logged ? 'Main' : 'Login'} screenOptions={{headerShown: false}}>\n                  <Screen name='Login' component={Login}/>\n                  <Screen name='Main' component={MainScreen}/>\n                  <Screen name='Conversation' component={Conversation}/>\n                  <Screen name='Notifications' component={Notifications}/>\n                  <Screen name='AudioCall' component={AudioCall}/>\n                  <Screen name='VideoCall' component={VideoCall}/>\n                  <Screen name='Account' component={Account}/>\n                  <Screen name='Urgent' component={Urgent}/>\n                </Navigator>\n              </NavigationContainer>\n            </ApplicationProvider>\n          </ThemeContext.Provider>\n        </KeyboardAvoidingView>\n      </>\n    );\n  }\n}"
        }
    ]
}