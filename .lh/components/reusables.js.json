{
    "sourceFile": "components/reusables.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1638914556439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1638914630638,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,10 @@\n import React, {useState} from 'react';\n import * as API from '../api'\n-import { Alert, StyleSheet, TouchableOpacity, View } from 'react-native';\n+import { Alert, StyleSheet, TouchableOpacity, View, Linking } from 'react-native';\n import { format, formatDistance, formatRelative, subDays, isBefore } from 'date-fns'\n import { Button, Icon, Input, Layout, Card, Text, Modal, Avatar, Divider } from '@ui-kitten/components';\n+import Clipboard from '@react-native-clipboard/clipboard';\n \n const BackIcon = (props) => (\n     <Icon {...props} name='arrow-ios-back-outline'/>\n );\n@@ -57,9 +58,9 @@\n \n }\n \n export const message = ({email, message, chat})=>{\n-    \n+    const [failedLoad, setfailedLoad] = useState(false);\n     let date = formatRelative(new Date(message.createDate), new Date())\n \n     return (\n         <Layout level={message.from.email == email ? '4' : '3'} style={{ width: '80%', borderRadius: 15, alignSelf: message.from.email == email ? 'flex-end' : 'flex-start', borderBottomRightRadius: message.from.email == email ? 0 : 15, borderBottomLeftRadius: message.from.email == email ? 15 : 0, padding: 10, marginHorizontal: 10, marginVertical: 5}}>\n"
                },
                {
                    "date": 1638914787577,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,12 +62,55 @@\n     const [failedLoad, setfailedLoad] = useState(false);\n     let date = formatRelative(new Date(message.createDate), new Date())\n \n     return (\n-        <Layout level={message.from.email == email ? '4' : '3'} style={{ width: '80%', borderRadius: 15, alignSelf: message.from.email == email ? 'flex-end' : 'flex-start', borderBottomRightRadius: message.from.email == email ? 0 : 15, borderBottomLeftRadius: message.from.email == email ? 15 : 0, padding: 10, marginHorizontal: 10, marginVertical: 5}}>\n-            <Text>{message.message}</Text>\n-            <Text style={{alignSelf: 'flex-end', fontWeight: '300'}} appearance={'hint'} category={'c2'}>{date}</Text>\n-        </Layout>\n+        // <Layout level={message.from.email == email ? '4' : '3'} style={{ width: '80%', borderRadius: 15, alignSelf: message.from.email == email ? 'flex-end' : 'flex-start', borderBottomRightRadius: message.from.email == email ? 0 : 15, borderBottomLeftRadius: message.from.email == email ? 15 : 0, padding: 10, marginHorizontal: 10, marginVertical: 5}}>\n+        //     <Text>{message.message}</Text>\n+        //     <Text style={{alignSelf: 'flex-end', fontWeight: '300'}} appearance={'hint'} category={'c2'}>{date}</Text>\n+        // </Layout>\n+\n+        <Card onPress={()=>{\n+            console.log('clicked');\n+            try{\n+                if(chat.attachment == null){\n+                    Alert.alert(\"Opening Attachment\", \"about opening a third party app to process attachments\", [\n+                        {\n+                          text: 'Cancel',\n+                          onPress: () => console.log('Cancel Pressed'),\n+                          style: 'cancel'\n+                        },\n+                        { text: 'Only Copy Text', onPress: () => Clipboard.setString(chat.message) }\n+                      ]);\n+                }else{\n+                    Alert.alert(\"Opening Attachment\", \"about opening a third party app to process attachment.\", [\n+                        {\n+                          text: 'Cancel',\n+                          onPress: () => console.log('Cancel Pressed'),\n+                          style: 'cancel'\n+                        },\n+                        { text: 'Proceed To Attachment', onPress: () => Linking.openURL(chat.attachment) },\n+                        { text: 'Only Copy Text', onPress: () => Clipboard.setString(chat.message) }\n+                      ]);\n+                }\n+                \n+            }catch(e){}\n+\n+\n+            chat.attachment != null && chat.file_type.includes('image') ?\n+            <View style={{flex: 1}}>\n+                <Image onError={()=>{console.log('e')}} PlaceholderContent={()=><ActivityIndicator size=\"large\"/>} source={{uri: chat.attachment}} resizeMode={'contain'}/>\n+            </View>\n+            : null\n+        }} style={ chat.from.email == email ? style.bubble_right : style.bubble_left}>\n+            {!(failedLoad) && chat.attachment != null && chat.file_type.includes('image') ? <Image source={{uri: chat.attachment}} onError={(e)=>{\n+                \n+                setfailedLoad(true)\n+            }} PlaceholderContent={()=><ActivityIndicator size=\"large\"/>}  style={{width: width-150, height: 180, marginBottom: 10}} resizeMode={'cover'}/> : null }\n+            {chat.attachment != null && !(chat.file_type.includes('image')) ? <Image source={require('../assets/imga.png')} onError={()=>{console.log('e')}} style={{width: width-150, height: 180, marginBottom: 10}} resizeMode={'cover'}/> : null }\n+            {(failedLoad) ? <Image source={require('../assets/failed.png')} style={{width: width-150, height: 180, marginBottom: 10}} resizeMode={'contain'}/> : null }\n+            <Text category={'p1'}>{chat.message}</Text>\n+            <Text category={'p2'} style={{ alignSelf: chat.from.email == me ? 'flex-end' : 'flex-start' }} appearance={'hint'} >{formatDistanceToNow(new Date(chat.createDate), { addSuffix: true }) }</Text>\n+        </Card>\n     )\n \n }\n \n"
                },
                {
                    "date": 1638956754976,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -182,4 +182,45 @@\n \n         </Layout>\n     )\n }\n+\n+const width = Dimensions.get('screen').width\n+\n+const style = StyleSheet.create({\n+    menu_card: {\n+        marginVertical: 15,\n+        marginHorizontal: 10,\n+        width: 180,\n+        height: 180,\n+        alignItems: 'center',\n+        justifyContent: 'center'\n+    },\n+    doctor_card: {\n+        marginVertical: 15,\n+        marginHorizontal: 10,\n+        alignItems: 'center',\n+        justifyContent: 'center',\n+        // paddingVertical: 15\n+    },\n+    bubble_right: {\n+        width: width-100,\n+        alignSelf: 'flex-end',\n+        marginHorizontal: 15,\n+        borderBottomLeftRadius: 25,\n+        borderBottomRightRadius: 0,\n+        borderTopRightRadius: 25,\n+        borderTopLeftRadius: 25,\n+        marginVertical: 10,\n+        backgroundColor: '#f2f2f2'\n+    },\n+    bubble_left: {\n+        width: width-100,\n+        alignSelf: 'flex-start',\n+        marginHorizontal: 15,\n+        borderBottomLeftRadius: 0,\n+        borderBottomRightRadius: 25,\n+        borderTopRightRadius: 25,\n+        borderTopLeftRadius: 25,\n+        marginVertical: 10\n+    }\n+})\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638956773739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import React, {useState} from 'react';\n import * as API from '../api'\n-import { Alert, StyleSheet, TouchableOpacity, View, Linking } from 'react-native';\n+import { StyleSheet, View, Dimensions, Linking, Alert } from 'react-native'\n+import { Alert, StyleSheet, TouchableOpacity, View, Linking,  } from 'react-native';\n import { format, formatDistance, formatRelative, subDays, isBefore } from 'date-fns'\n import { Button, Icon, Input, Layout, Card, Text, Modal, Avatar, Divider } from '@ui-kitten/components';\n import Clipboard from '@react-native-clipboard/clipboard';\n \n"
                },
                {
                    "date": 1638956791709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, {useState} from 'react';\n import * as API from '../api'\n import { StyleSheet, View, Dimensions, Linking, Alert } from 'react-native'\n-import { Alert, StyleSheet, TouchableOpacity, View, Linking,  } from 'react-native';\n+import { Alert, StyleSheet, TouchableOpacity, View, Linking, Dimensions } from 'react-native';\n import { format, formatDistance, formatRelative, subDays, isBefore } from 'date-fns'\n import { Button, Icon, Input, Layout, Card, Text, Modal, Avatar, Divider } from '@ui-kitten/components';\n import Clipboard from '@react-native-clipboard/clipboard';\n \n"
                },
                {
                    "date": 1638956829229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, {useState} from 'react';\n import * as API from '../api'\n import { StyleSheet, View, Dimensions, Linking, Alert } from 'react-native'\n-import { Alert, StyleSheet, TouchableOpacity, View, Linking, Dimensions } from 'react-native';\n+import { TouchableOpacity } from 'react-native';\n import { format, formatDistance, formatRelative, subDays, isBefore } from 'date-fns'\n import { Button, Icon, Input, Layout, Card, Text, Modal, Avatar, Divider } from '@ui-kitten/components';\n import Clipboard from '@react-native-clipboard/clipboard';\n \n"
                },
                {
                    "date": 1638956904771,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n import { StyleSheet, View, Dimensions, Linking, Alert } from 'react-native'\n import { TouchableOpacity } from 'react-native';\n import { format, formatDistance, formatRelative, subDays, isBefore } from 'date-fns'\n import { Button, Icon, Input, Layout, Card, Text, Modal, Avatar, Divider } from '@ui-kitten/components';\n+import {Image} from 'react-native-elements'\n import Clipboard from '@react-native-clipboard/clipboard';\n \n const BackIcon = (props) => (\n     <Icon {...props} name='arrow-ios-back-outline'/>\n"
                },
                {
                    "date": 1638957157594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,9 +109,9 @@\n             }} PlaceholderContent={()=><ActivityIndicator size=\"large\"/>}  style={{width: width-150, height: 180, marginBottom: 10}} resizeMode={'cover'}/> : null }\n             {chat.attachment != null && !(chat.file_type.includes('image')) ? <Image source={require('../assets/imga.png')} onError={()=>{console.log('e')}} style={{width: width-150, height: 180, marginBottom: 10}} resizeMode={'cover'}/> : null }\n             {(failedLoad) ? <Image source={require('../assets/failed.png')} style={{width: width-150, height: 180, marginBottom: 10}} resizeMode={'contain'}/> : null }\n             <Text category={'p1'}>{chat.message}</Text>\n-            <Text category={'p2'} style={{ alignSelf: chat.from.email == me ? 'flex-end' : 'flex-start' }} appearance={'hint'} >{formatDistanceToNow(new Date(chat.createDate), { addSuffix: true }) }</Text>\n+            <Text category={'p2'} style={{ alignSelf: chat.from.email == email ? 'flex-end' : 'flex-start' }} appearance={'hint'} >{formatDistanceToNow(new Date(chat.createDate), { addSuffix: true }) }</Text>\n         </Card>\n     )\n \n }\n"
                },
                {
                    "date": 1638957277286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,9 +109,9 @@\n             }} PlaceholderContent={()=><ActivityIndicator size=\"large\"/>}  style={{width: width-150, height: 180, marginBottom: 10}} resizeMode={'cover'}/> : null }\n             {chat.attachment != null && !(chat.file_type.includes('image')) ? <Image source={require('../assets/imga.png')} onError={()=>{console.log('e')}} style={{width: width-150, height: 180, marginBottom: 10}} resizeMode={'cover'}/> : null }\n             {(failedLoad) ? <Image source={require('../assets/failed.png')} style={{width: width-150, height: 180, marginBottom: 10}} resizeMode={'contain'}/> : null }\n             <Text category={'p1'}>{chat.message}</Text>\n-            <Text category={'p2'} style={{ alignSelf: chat.from.email == email ? 'flex-end' : 'flex-start' }} appearance={'hint'} >{formatDistanceToNow(new Date(chat.createDate), { addSuffix: true }) }</Text>\n+            <Text category={'p2'} style={{ alignSelf: chat.from.email == email ? 'flex-end' : 'flex-start' }} appearance={'hint'} >{formatDistance(new Date(chat.createDate), { addSuffix: true }) }</Text>\n         </Card>\n     )\n \n }\n"
                },
                {
                    "date": 1638957347256,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,9 +109,9 @@\n             }} PlaceholderContent={()=><ActivityIndicator size=\"large\"/>}  style={{width: width-150, height: 180, marginBottom: 10}} resizeMode={'cover'}/> : null }\n             {chat.attachment != null && !(chat.file_type.includes('image')) ? <Image source={require('../assets/imga.png')} onError={()=>{console.log('e')}} style={{width: width-150, height: 180, marginBottom: 10}} resizeMode={'cover'}/> : null }\n             {(failedLoad) ? <Image source={require('../assets/failed.png')} style={{width: width-150, height: 180, marginBottom: 10}} resizeMode={'contain'}/> : null }\n             <Text category={'p1'}>{chat.message}</Text>\n-            <Text category={'p2'} style={{ alignSelf: chat.from.email == email ? 'flex-end' : 'flex-start' }} appearance={'hint'} >{formatDistance(new Date(chat.createDate), { addSuffix: true }) }</Text>\n+            <Text category={'p2'} style={{ alignSelf: chat.from.email == email ? 'flex-end' : 'flex-start' }} appearance={'hint'} >{date}</Text>\n         </Card>\n     )\n \n }\n"
                }
            ],
            "date": 1638914556439,
            "name": "Commit-0",
            "content": "import React, {useState} from 'react';\nimport * as API from '../api'\nimport { Alert, StyleSheet, TouchableOpacity, View } from 'react-native';\nimport { format, formatDistance, formatRelative, subDays, isBefore } from 'date-fns'\nimport { Button, Icon, Input, Layout, Card, Text, Modal, Avatar, Divider } from '@ui-kitten/components';\n\nconst BackIcon = (props) => (\n    <Icon {...props} name='arrow-ios-back-outline'/>\n);\n\nconst BellIcon = (props) => (\n    <Icon {...props} name='bell-outline'/>\n);\n\nconst LockIcon = (props) => (\n    <Icon {...props} name='lock-outline'/>\n);\n\nexport const header = ({title, nav, logout})=>{\n    return (\n        <>\n        <Layout style={{flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between'}}>\n            <Layout style={{flexDirection: 'row', padding: 15, alignItems: 'center'}}>\n                <Button onPress={()=>nav.goBack()} style={{height: 35, width: 35}} size={'small'} appearance={'outline'} accessoryLeft={BackIcon}></Button>\n                <Text style={{marginStart: 10}} category={'h5'}>{title}</Text>\n            </Layout>\n            { logout ?\n            <Button onPress={logout} style={{height: 35, width: 35, marginEnd: 15}} size={'small'} appearance={'outline'} accessoryLeft={LockIcon}></Button> : <></> }\n        </Layout>\n        <Divider/>\n        </>\n    )\n}\n\nexport const chat = ({email, message, nav})=>{\n\n    let date = formatDistance(new Date(message.time), new Date(), { addSuffix: true })\n    //formatDistance(subDays(new Date(), 3), new Date(), { addSuffix: true })\n\n    return (\n        <TouchableOpacity onPress={()=>nav.navigate('Conversation', { user: message.email, name: message.name })}>\n            <Layout level={'2'} style={{borderRadius: 5, marginHorizontal: 10, marginVertical: 5}}>\n                <View style={{flexDirection: 'row', alignItems: 'center', padding: 10}}>\n\n                    {/* <View style={{height: '100%', width: 5, backgroundColor: 'green'}}/> */}\n\n                    <Avatar style={{backgroundColor: '#f2f2f2'}} source={{uri: message.avatar}} size={'large'} shape={'round'} />\n                    <View style={{flex: 1, marginStart: 10}}>\n                        <Text style={{alignSelf: 'flex-end', fontSize: 10}} appearance={'hint'} category={'c1'}>{date}</Text>\n                        <Text category={'label'} style={{marginVertical: 5}}>{message.name}</Text>\n                        <Text category={'c1'} appearance={'hint'}>{ message.message.length > 50 ? message.message.substring(0, 50)+'...' : message.message }</Text>\n                    </View>\n                </View>\n            </Layout>\n        </TouchableOpacity>\n    )\n\n}\n\nexport const message = ({email, message, chat})=>{\n    \n    let date = formatRelative(new Date(message.createDate), new Date())\n\n    return (\n        <Layout level={message.from.email == email ? '4' : '3'} style={{ width: '80%', borderRadius: 15, alignSelf: message.from.email == email ? 'flex-end' : 'flex-start', borderBottomRightRadius: message.from.email == email ? 0 : 15, borderBottomLeftRadius: message.from.email == email ? 15 : 0, padding: 10, marginHorizontal: 10, marginVertical: 5}}>\n            <Text>{message.message}</Text>\n            <Text style={{alignSelf: 'flex-end', fontWeight: '300'}} appearance={'hint'} category={'c2'}>{date}</Text>\n        </Layout>\n    )\n\n}\n\nexport const notification = ({notification})=>{\n\n    return (\n        <Layout level={'2'} style={{marginVertical: 5, marginHorizontal: 10, borderRadius: 10, padding: 10, flexDirection: 'row', alignItems: 'center'}}>\n            \n            <Button disabled style={{height: 20, width: 20, borderRadius: 20}} accessoryLeft={BellIcon}></Button>\n            \n            <View style={{flex: 1, marginStart: 10}}>\n                <Text>This is the notification message.</Text>\n                <Text appearance={'hint'} category={'c2'}>10:02 am</Text>\n            </View>\n        </Layout>\n    )\n}\n\nexport const call = ({request, nav, respond}) => {\n\n    let date = new Date(request.createDate).toString().substring(4, 21)\n\n    const change = ()=>{\n        Alert.alert('Change Response?', 'You previously rejected this request, do want to change that?', [\n            {\n                text: 'Yes',\n                onPress: ()=>respond('Accepted', request.id),\n                style: 'default'\n            },\n            {\n                text: 'No, Dismiss',\n                onPress: ()=>{},\n                style: 'cancel'\n            }\n        ])\n    }\n\n    return (\n        <Layout level={'2'} style={{marginVertical: 5, marginHorizontal: 10, borderRadius: 5, padding: 15}}>\n            <View style={{flexDirection: 'row', alignItems: 'center'}}>\n                <Icon fill={'grey'} style={{height: 15, width: 15, marginEnd: 5}} name={\"star-outline\"}/>\n                <Text category={'s1'}>Consult with {request.patient.fullName}</Text>\n            </View>\n            <View style={{flexDirection: 'row', alignItems: 'center', marginVertical: 10}}>\n                <Icon fill={'grey'} style={{height: 20, width: 20, marginEnd: 5}} name={\"video-outline\"}/>\n                <Text>{date} <Text status={'primary'}>Telemedicine: C0_{request.cid}</Text></Text>\n            </View>\n\n            { !isBefore(new Date(request.createDate), new Date()) ?\n                <Divider/> : <></>\n            }\n\n            { !isBefore(new Date(request.createDate), new Date()) ? request.status == 'Pending' ?\n\n            <View style={{flexDirection: 'row', alignItems: 'center'}}>\n                <Button appearance={'outline'} onPress={respond('Accepted', request.id)} style={{flex: 1, marginEnd: 10}} size={'small'}>Accept</Button>\n                <Button appearance={'outline'} onPress={respond('Rejected', request.id)} status={'danger'} style={{flex: 1}} size={'small'}>Reject</Button>\n            </View>\n            : request.status == 'Accepted' ?\n\n            <Button appearance={'outline'} onPress={()=>nav.navigate('VideoCall')} size={'small'}>Start Call</Button>\n\n            : \n\n            <Button appearance={'outline'} status={'info'} onPress={change} size={'small'}>Change Response</Button>\n\n            : <></>\n            }\n\n        </Layout>\n    )\n}\n"
        }
    ]
}